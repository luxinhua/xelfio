cscope 15 /data/xinhualu/repo/0_xhlu/0_pppppppp/0_project/0_elf_parser -q 0000003730 0000337100
	@/home/xinhualu/repo/0_xhlu/0_pppppppp/0_project/0_elf_parser/address.cpp

1 
	~"addªss.hµ
"

2 
	~<c°döt
>

3 
	~<°dex˚±
>

5 
	gAddªss
::
	$Addªss
(
uöt32_t
 
addr
):

6 
	`m_Dú
(
addr
 >> 12 >> 10 ),

7 
	`m_∑ge
((
addr
 >> 12) & 0x3FF),

8 
	`m_off£t
(
addr
 & 0xFFF),

9 
	$m_addr
(
addr
)

11 i‡(
m_addr
 >= 0xFFFFFFFF)

13 
°d
::
	`ru¡ime_îr‹
("invailáddress");

15 
	}
}

17 
	gAddªss
::
	$Addªss
(
uöt32_t
 
dú
, uöt32_à
∑ge
, uöt32_à
off£t
):

18 
	`m_Dú
(
dú
),

19 
	`m_∑ge
(
∑ge
),

20 
	`m_off£t
(
off£t
),

21 
	`m_addr
((
m_Dú
 << 12 << 10Ë| (
m_∑ge
 << 12Ë| (
m_off£t
))

23 i‡(
m_addr
 >= 0xFFFFFFFF)

25 
°d
::
	`ru¡ime_îr‹
("invailáddress");

27 
	}
}

29 
uöt32_t
 
	gAddªss
::
	$vÆue
()

31  
m_addr
;

32 
	}
}

	@/home/xinhualu/repo/0_xhlu/0_pppppppp/0_project/0_elf_parser/address.hpp

1 #i‚de‡
__ADDRESS_H__


2 
	#__ADDRESS_H__


	)

4 
	~<c°döt
>

6 ˛as†
	cAddªss


8 
	mpublic
:

9 
Addªss
(
uöt32_t
 
addr
);

10 
Addªss
(
uöt32_t
 
dú
, uöt32_à
∑ge
, uöt32_à
off£t
);

12 
uöt32_t
 
vÆue
();

14 
uöt32_t
 
	mm_Dú
;

15 
uöt32_t
 
	mm_∑ge
;

16 
uöt32_t
 
	mm_off£t
;

17 
uöt32_t
 
	mm_addr
;

	@/home/xinhualu/repo/0_xhlu/0_pppppppp/0_project/0_elf_parser/common.hpp

1 #i‚de‡
__COMMON_H__


2 
	#__COMMON_H__


	)

4 
usög
 
«me•a˚
 
	g°d
;

6 
	~<°rög_võw
>

7 
	~<ve˘‹
>

8 
	~<io°ªam
>

9 
	~<f°ªam
>

10 
	~<o°ªam
>

11 
	~<°dex˚±
>

12 
	~<ios
>

13 
	~<c°döt
>

14 
	~<°rög
>

15 
	~<¨øy
>

16 
	~<iom™ù
>

17 
	~<m≠
>

19 
	~"ñf.h
"

20 
	~"°ack.hµ
"

23 
	#INST_LEN
 4

	)

	@/home/xinhualu/repo/0_xhlu/0_pppppppp/0_project/0_elf_parser/cpu.cpp

1 
	~"˝u.hµ
"

2 
	~"ñ„r.hµ
"

4 
usög
 
«me•a˚
 
	g°d
;

6 
	gC‹e
::
	$¥öt_c‹e_ªgi°îs
()

8 
uöt32_t
 
löe_cout
{0};

10 
°d
::
cout
 << std::
	`£tw
(100Ë<< std::
À·
 << std::
	`£tfûl
('-') << "-";

12 auto& 
ªg
 : 
m_c‹e_ªgi°îs
)

14 i‡((
löe_cout
++ % 6) == 0)

16 
°d
::
cout
 << std::
ídl
;

18 
°d
::
cout
 << std::
	`£tw
(6Ë<< std::
À·
 << std::
	`£tfûl
(' 'Ë<< 
ªg
.
£c⁄d


20 << 
°d
::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' 'Ë<< std::
hex
 << 
ªg
.
fú°
 ;

23 
°d
::
cout
 << std::
ídl
;

24 
°d
::
cout
 << std::
	`£tw
(100Ë<< std::
À·
 << std::
	`£tfûl
('-'Ë<< "-" << std::
ídl
;

25 
	}
}

27 
	gC‹e
::
	$movePùe
()

29 
FëchReg
 = 
FëchRegNew
;

30 
DecodeReg
 = 
DecodeRegNew
;

31 
ExecuãReg
 = 
ExecuãRegNew
;

32 
	}
}

34 
	$maö
(
¨gc
, **
¨gv
)

36 
Mem‹y
 
mem
;

38 
Sèck
 
°ack
{0x80000000, 0x400000};

40 
El„r
 
ñf
{"./demo/helloworld.out"};

42 
ñf
.
	`lﬂdSegmít2Mem
(&
mem
);

46 
uöt32_t
 
ñf_íåy
 = 
°©ic_ˇ°
<uöt32_t>(
ñf
.
	`gë_íåy
());

48 
C‹e
 
c‹e
{&
mem
, 
°ack
, 
ñf_íåy
};

52 
uöt32_t
 
times
{50};

53 
times
--) {

54 
c‹e
.
	`„tch
();

55 
c‹e
.
	`decode
();

56 
c‹e
.
	`execuã
();

57 
c‹e
.
	`¥öt_c‹e_ªgi°îs
();

58 
c‹e
.
	`movePùe
();

62 
	}
}

	@/home/xinhualu/repo/0_xhlu/0_pppppppp/0_project/0_elf_parser/cpu.hpp

1 #i‚de‡
__CPU_H__


2 
	#__CPU_H__


	)

4 
	~"comm⁄.hµ
"

5 
	~"mem‹y.hµ
"

6 
	~"ö°ru˘i⁄.hµ
"

8 ˛as†
	cC‹e
{

9 
	mpublic
:

10 
	$C‹e
(
Mem‹y
 * 
mem‹y
, 
Sèck
 
°ack
, 
uöt32_t
 
ñf_íåy
): 
m_mem
{mem‹y}, 
m_°ack
{
	}
°ack}, 
	gm_pc
{
	gñf_íåy
}{

11 
	gm_ö°
.
	gDoubÀW‹d
 = 0;

12 
	gm_c‹e_ªgi°îs
[
•
].
	gfú°
 = 
m_°ack
.
m_ba£
;

14 ~
C‹e
() = ;

22 
„tch
();

23 
decode
();

24 
execuã
();

25 
movePùe
();

27 
¥öt_c‹e_ªgi°îs
();

29 
	g¥iv©e
:

30 
execuã_lb
() ;

31 
execuã_lh
() ;

32 
execuã_lw
() ;

33 
execuã_lbu
();

34 
execuã_lhu
();

35 
execuã_lwu
();

36 
execuã_ld
() ;

37 
execuã_beq
() ;

38 
execuã_b√
() ;

39 
execuã_b…
() ;

40 
execuã_bge
() ;

41 
execuã_b…u
();

42 
execuã_bgeu
();

43 
execuã_auùc
();

44 
execuã_addi
();

45 
execuã_¶ti
();

46 
execuã_¶tu
();

47 
execuã_x‹i
();

48 
execuã_‹i
();

49 
execuã_™di
();

50 
execuã_¶li
();

51 
execuã_§ai
();

52 
execuã_sub
();

53 
execuã_jÆ
();

55 
execuã_bønch_ö°
();

56 
execuã_lﬂd_ö°
();

57 
execuã_°‹e_ö°
();

58 
execuã_imm_ö°
();

59 
execuã_ªg_ö°
();

60 
execuã_„n˚_ö°
();

61 
execuã_sy°em_ö°
();

62 
execuã_imm32_ö°
();

63 
execuã_›32_ö°
();

64 
execuã_auùc_ö°
();

65 
execuã_jÆ_ö°
();

66 
execuã_jÆr_ö°
();

67 
execuã_lut_ö°
();

69 
decode_sb
();

70 
decode_sh
();

71 
decode_sw
();

72 
decode_sd
();

73 
decode_lb
() ;

74 
decode_lh
() ;

75 
decode_lw
() ;

76 
decode_lbu
();

77 
decode_lhu
();

78 
decode_lwu
();

79 
decode_ld
() ;

80 
decode_beq
() ;

81 
decode_b√
() ;

82 
decode_b…
() ;

83 
decode_bge
() ;

84 
decode_b…u
();

85 
decode_bgeu
();

86 
decode_auùc
();

87 
decode_addi
();

88 
decode_¶ti
();

89 
decode_¶tu
();

90 
decode_x‹i
();

91 
decode_‹i
();

92 
decode_™di
();

93 
decode_¶li
();

94 
decode_§li
();

95 
decode_§ai
();

96 
decode_sub
();

97 
decode_jÆ
();

99 
decode_bønch_ö°
();

100 
decode_lﬂd_ö°
();

101 
decode_°‹e_ö°
();

102 
decode_imm_ö°
();

103 
decode_ªg_ö°
();

104 
decode_„n˚_ö°
();

105 
decode_sy°em_ö°
();

106 
decode_imm32_ö°
();

107 
decode_›32_ö°
();

108 
decode_auùc_ö°
();

109 
decode_jÆ_ö°
();

110 
decode_jÆr_ö°
();

111 
decode_lut_ö°
();

113 
	gpublic
:

114 
Mem‹y
 * 
m_mem
;

115 
Sèck
 
	gm_°ack
;

117 
	sSège
{

118 
uöt32_t
 
	gm_pc
;

119 
In°ru˘i⁄
 
	gm_ö°
;

120 
boﬁ
 
	gm_bubbÀ
;

121 
boﬁ
 
	gm_°Æl
;

124 
Sège
 
	gFëchReg
{0};

125 
Sège
 
	gFëchRegNew
{0};

126 
Sège
 
	gDecodeReg
{0};

127 
Sège
 
	gDecodeRegNew
{0};

128 
Sège
 
	gExecuãReg
{0};

129 
Sège
 
	gExecuãRegNew
{0};

131 
uöt32_t
 
	gm_pc
;

132 
In°ru˘i⁄
 
	gm_ö°
;

135 
	gzîo
 = 0,

136 
	gø
 ,

137 
	g•
 ,

138 
	ggp
 ,

139 
	gç
 ,

140 
	gt0
 ,

141 
	gt1
 ,

142 
	gt2
 ,

143 
	gs0
 ,

144 
	gs1
 ,

145 
	ga0
 ,

146 
	ga1
 ,

147 
	ga2
 ,

148 
	ga3
 ,

149 
	ga4
 ,

150 
	ga5
 ,

151 
	ga6
 ,

152 
	ga7
 ,

153 
	gs2
 ,

154 
	gs3
 ,

155 
	gs4
 ,

156 
	gs5
 ,

157 
	gs6
 ,

158 
	gs7
 ,

159 
	gs8
 ,

160 
	gs9
 ,

161 
	gs10
 ,

162 
	gs11
 ,

163 
	gt3
 ,

164 
	gt4
 ,

165 
	gt5
 ,

166 
	gt6
 ,

169 
	g°d
::
¨øy
<
°d
::
∑ú
<
uöt64_t
, std::
°rög
>, 32> 
	gm_c‹e_ªgi°îs
{

171 
	g°d
::
make_∑ú
( 0, "zero" ),

172 
	g°d
::
make_∑ú
( 0, "ra" ),

173 
	g°d
::
make_∑ú
( 0, "sp" ),

174 
	g°d
::
make_∑ú
( 0, "gp" ),

175 
	g°d
::
make_∑ú
( 0, "tp" ),

176 
	g°d
::
make_∑ú
( 0, "t0" ),

177 
	g°d
::
make_∑ú
( 0, "t1" ),

178 
	g°d
::
make_∑ú
( 0, "t2" ),

179 
	g°d
::
make_∑ú
( 0, "s0" ),

180 
	g°d
::
make_∑ú
( 0, "s1" ),

181 
	g°d
::
make_∑ú
( 0, "a0" ),

182 
	g°d
::
make_∑ú
( 0, "a1" ),

183 
	g°d
::
make_∑ú
( 0, "a2" ),

184 
	g°d
::
make_∑ú
( 0, "a3" ),

185 
	g°d
::
make_∑ú
( 0, "a4" ),

186 
	g°d
::
make_∑ú
( 0, "a5" ),

187 
	g°d
::
make_∑ú
( 0, "a6" ),

188 
	g°d
::
make_∑ú
( 0, "a7" ),

189 
	g°d
::
make_∑ú
( 0, "s2" ),

190 
	g°d
::
make_∑ú
( 0, "s3" ),

191 
	g°d
::
make_∑ú
( 0, "s4" ),

192 
	g°d
::
make_∑ú
( 0, "s5" ),

193 
	g°d
::
make_∑ú
( 0, "s6" ),

194 
	g°d
::
make_∑ú
( 0, "s7" ),

195 
	g°d
::
make_∑ú
( 0, "s8" ),

196 
	g°d
::
make_∑ú
( 0, "s9" ),

197 
	g°d
::
make_∑ú
( 0, "s10" ),

198 
	g°d
::
make_∑ú
( 0, "s11" ),

199 
	g°d
::
make_∑ú
( 0, "t3" ),

200 
	g°d
::
make_∑ú
( 0, "t4" ),

201 
	g°d
::
make_∑ú
( 0, "t5" ),

202 
	g°d
::
make_∑ú
( 0, "t6" ),

	@/home/xinhualu/repo/0_xhlu/0_pppppppp/0_project/0_elf_parser/cpu_decode.cpp

1 
	~"˝u.hµ
"

2 
	~"ñ„r.hµ
"

4 
usög
 
«me•a˚
 
	g°d
;

6 
	gC‹e
::
	$decode_bønch_ö°
()

8 
m_ö°
.
imm
 = 
	`öt32_t
(–(m_ö°.
rv32i
.
SB
.
imm_4_1
Ë| (m_ö°.rv32i.SB.
imm_10_5
 << 5) | \

9 (
m_ö°
.
rv32i
.
SB
.
imm_11
 << 11Ë| (m_ö°.rv32i.SB.
imm_12
 << 12) ) << 19 ) >> 19;

11 
m_ö°
.
rv32i
.
S
.
func3
)

13 0: 
m_ö°
.
›Name
 = "beq" ; 
	`decode_beq
() ; ;

14 1: 
m_ö°
.
›Name
 = "b√" ; 
	`decode_b√
() ; ;

15 4: 
m_ö°
.
›Name
 = "b…" ; 
	`decode_b…
() ; ;

16 5: 
m_ö°
.
›Name
 = "bge" ; 
	`decode_bge
() ; ;

17 6: 
m_ö°
.
›Name
 = "b…u" ; 
	`decode_b…u
() ; ;

18 7: 
m_ö°
.
›Name
 = "bgeu" ; 
	`decode_bgeu
() ; ;

20 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' ') << "Branch";

23 
	}
}

25 
	gC‹e
::
	$decode_lﬂd_ö°
()

27 
m_ö°
.
imm
 = 
	`öt32_t
(m_ö°.
rv32i
.
I
.
imm_11_0
 << 20) >> 20;

29 
m_ö°
.
rv32i
.
I
.
func3
)

31 0: 
m_ö°
.
›Name
 = "lb" ; 
	`decode_lb
() ; ;

32 1: 
m_ö°
.
›Name
 = "lh" ; 
	`decode_lh
() ; ;

33 2: 
m_ö°
.
›Name
 = "lw" ; 
	`decode_lw
() ; ;

34 3: 
m_ö°
.
›Name
 = "ld" ; 
	`decode_ld
() ; ;

35 4: 
m_ö°
.
›Name
 = "lbu" ; 
	`decode_lbu
(); ;

36 5: 
m_ö°
.
›Name
 = "lhu" ; 
	`decode_lhu
(); ;

37 6: 
m_ö°
.
›Name
 = "lwu" ; 
	`decode_lwu
(); ;

39 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' ') << "load";

42 
	}
}

44 
	gC‹e
::
	$decode_°‹e_ö°
()

46 
m_ö°
.
imm
 = 
	`öt32_t
((m_ö°.
rv32i
.
S
.
imm_4_0
 | (m_ö°.rv32i.S.
imm_11_5
 << 5)) << 20) >> 20;

48 
m_ö°
.
rv32i
.
S
.
func3
)

50 0: 
m_ö°
.
›Name
 = "sb" ; 
	`decode_sb
(); ;

51 1: 
m_ö°
.
›Name
 = "sh" ; 
	`decode_sh
(); ;

52 2: 
m_ö°
.
›Name
 = "sw" ; 
	`decode_sw
(); ;

53 3: 
m_ö°
.
›Name
 = "sd" ; 
	`decode_sd
(); ;

55 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' ') << "store";

58 
	}
}

60 
	gC‹e
::
	$decode_imm_ö°
()

62 
m_ö°
.
imm
 = 
	`öt32_t
(m_ö°.
rv32i
.
I
.
imm_11_0
 << 20) >> 20;

64 
m_ö°
.
rv32i
.
I
.
func3
)

66 0: 
m_ö°
.
›Name
 = "addi" ; 
	`decode_addi
(); ;

67 2: 
m_ö°
.
›Name
 = "¶ti" ; 
	`decode_¶ti
(); ;

68 3: 
m_ö°
.
›Name
 = "¶tu" ; 
	`decode_¶tu
(); ;

69 4: 
m_ö°
.
›Name
 = "x‹i" ; 
	`decode_x‹i
(); ;

70 6: 
m_ö°
.
›Name
 = "‹i" ; 
	`decode_‹i
(); ;

71 7: 
m_ö°
.
›Name
 = "™di" ; 
	`decode_™di
(); ;

72 1: 
m_ö°
.
›Name
 = "¶li" ; 
	`decode_¶li
(); ;

74 
m_ö°
.
rv32i
.
R
.
func7
) {

75 0 : 
m_ö°
.
›Name
 = "§li" ; 
	`decode_§li
(); ;

76 0x20: 
m_ö°
.
›Name
 = "§ai" ; 
	`decode_§ai
(); ;

78 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' ') << "imm";

83 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' ') << "IMM";

86 
	}
}

88 
	gC‹e
::
	$decode_ªg_ö°
()

90 
m_ö°
.
rv32i
.
R
.
func3
)

93 
m_ö°
.
rv32i
.
R
.
func7
) {

94 0 : 
m_ö°
.
›Name
 = "ADD " ; ;

95 0x20 : 
m_ö°
.
›Name
 = "SUB " ; 
	`decode_sub
(); ;

98 1: 
m_ö°
.
›Name
 = "SLL " ; ;

99 2: 
m_ö°
.
›Name
 = "SLT " ; ;

100 3: 
m_ö°
.
›Name
 = "SLTU" ; ;

101 4: 
m_ö°
.
›Name
 = "XOR " ; ;

103 
m_ö°
.
rv32i
.
R
.
func7
) {

104 0 : 
m_ö°
.
›Name
 = "SRL " ; ;

105 0x20 : 
m_ö°
.
›Name
 = "SRA " ; ;

108 6: 
m_ö°
.
›Name
 = "OR " ; ;

109 7: 
m_ö°
.
›Name
 = "AND " ; ;

111 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' ') << "REG";

114 
	}
}

116 
	gC‹e
::
	$decode_„n˚_ö°
()

119 
	}
}

121 
C‹e
::
	$decode_sy°em_ö°
()

123 
m_ö°
.
rv32i
.
R
.
func3
)

126 
m_ö°
.
rv32i
.
R
.
func7
) {

127 0 : 
m_ö°
.
›Name
 = "ecall" ; ;

128 1 : 
m_ö°
.
›Name
 = "ebreak" ; ;

131 1: 
m_ö°
.
›Name
 = "csrrw" ; ;

132 2: 
m_ö°
.
›Name
 = "csrrs" ; ;

133 3: 
m_ö°
.
›Name
 = "csrrc" ; ;

134 5: 
m_ö°
.
›Name
 = "csrrsw" ; ;

135 6: 
m_ö°
.
›Name
 = "csrrsi" ; ;

136 7: 
m_ö°
.
›Name
 = "csrrci" ; ;

138 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' ') << "SYSTEM";

141 
	}
}

143 
	gC‹e
::
	$decode_imm32_ö°
()

145 
m_ö°
.
rv32i
.
R
.
func3
)

147 0: 
m_ö°
.
›Name
 = "addiw" ; ;

148 1: 
m_ö°
.
›Name
 = "slltw" ; ;

150 
m_ö°
.
rv32i
.
R
.
func7
) {

151 0 : 
m_ö°
.
›Name
 = "srliw" ; ;

152 0x20 : 
m_ö°
.
›Name
 = "sraiw" ; ;

156 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' ') << "IMM32";

159 
	}
}

161 
	gC‹e
::
	$decode_›32_ö°
()

163 
m_ö°
.
rv32i
.
R
.
func3
)

166 
m_ö°
.
rv32i
.
R
.
func7
) {

167 0 : 
m_ö°
.
›Name
 = "addw" ; ;

168 0x20 : 
m_ö°
.
›Name
 = "subw" ; ;

171 1: 
m_ö°
.
›Name
 = "sllw" ; ;

173 
m_ö°
.
rv32i
.
R
.
func7
) {

174 0 : 
m_ö°
.
›Name
 = "srlw" ; ;

175 0x20 : 
m_ö°
.
›Name
 = "sraw" ; ;

179 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' ') << "OP32";

182 
	}
}

184 
	gC‹e
::
	$decode_auùc_ö°
()

186 
m_ö°
.
›Name
 = "auiipc";

188 
	`decode_auùc
();

189 
	}
}

191 
	gC‹e
::
	$decode_jÆ_ö°
()

193 
m_ö°
.
›Name
 = "jal";

195 
	`decode_jÆ
();

196 
	}
}

198 
	gC‹e
::
	$decode_jÆr_ö°
()

200 
m_ö°
.
›Name
 = "jalr";

201 
	}
}

203 
	gC‹e
::
	$decode_lut_ö°
()

205 
m_ö°
.
›Name
 = "lut";

206 
	}
}

208 
	gC‹e
::
	$decode_sb
(){

210 
	}
}

211 
C‹e
::
	$decode_sh
(){

213 
	}
}

214 
C‹e
::
	$decode_sw
(){

216 
	}
}

217 
C‹e
::
	$decode_sd
(){

219 
	}
}

220 
C‹e
::
	$decode_beq
()

223 
	}
}

224 
C‹e
::
	$decode_b√
()

227 
	}
}

228 
C‹e
::
	$decode_b…
()

231 
	}
}

232 
C‹e
::
	$decode_bge
()

235 
	}
}

236 
C‹e
::
	$decode_b…u
()

239 
	}
}

240 
C‹e
::
	$decode_bgeu
()

243 
	}
}

244 
C‹e
::
	$decode_lb
()

247 
	}
}

248 
C‹e
::
	$decode_lh
()

251 
	}
}

252 
C‹e
::
	$decode_lw
()

255 
	}
}

256 
C‹e
::
	$decode_lbu
()

259 
	}
}

260 
C‹e
::
	$decode_lhu
()

263 
	}
}

264 
C‹e
::
	$decode_lwu
()

267 
	}
}

268 
C‹e
::
	$decode_ld
()

271 
	}
}

272 
C‹e
::
	$decode_addi
(){

273 
°d
::
cout
 << 
m_ö°
.
›Name


275 << 
m_c‹e_ªgi°îs
[
m_ö°
.
rv32i
.
I
.
rd
].
£c⁄d


277 << 
m_c‹e_ªgi°îs
[
m_ö°
.
rv32i
.
I
.
rs1
].
£c⁄d


279 << 
°d
::
hex
 << 
m_ö°
.
imm
;

280 
°d
::
cout
 << " //// " ;

281 
°d
::
cout
 << 
m_c‹e_ªgi°îs
[
m_ö°
.
rv32i
.
I
.
rd
].
£c⁄d


283 << 
m_c‹e_ªgi°îs
[
m_ö°
.
rv32i
.
I
.
rs1
].
£c⁄d


285 << 
°d
::
hex
 << 
m_ö°
.
imm
;

286 
	}
}

287 
	gC‹e
::
	$decode_¶ti
(){

289 
	}
}

290 
C‹e
::
	$decode_¶tu
(){

292 
	}
}

293 
C‹e
::
	$decode_x‹i
(){

295 
	}
}

296 
C‹e
::
	$decode_‹i
(){

298 
	}
}

299 
C‹e
::
	$decode_™di
(){

301 
	}
}

302 
C‹e
::
	$decode_¶li
(){

304 
	}
}

305 
C‹e
::
	$decode_§li
(){

307 
	}
}

308 
C‹e
::
	$decode_§ai
(){

310 
	}
}

311 
C‹e
::
	$decode_sub
()

314 
	}
}

315 
C‹e
::
	$decode_auùc
()

317 
°d
::
cout
 << 
m_ö°
.
›Name


319 << 
m_c‹e_ªgi°îs
[
m_ö°
.
rv32i
.
U
.
rd
].
£c⁄d


321 << 
°d
::
hex
 << 
m_ö°
.
imm
;

322 
°d
::
cout
 << " //// ";

323 
°d
::
cout
 << 
m_c‹e_ªgi°îs
[
m_ö°
.
rv32i
.
U
.
rd
].
£c⁄d


325 << 
°d
::
hex
 << 
m_ö°
.
imm
;

326 
	}
}

327 
	gC‹e
::
	$decode_jÆ
()

330 
	}
}

333 
C‹e
::
	$decode
()

335 
°d
::
cout
 << std::
	`£tw
(8Ë<< std::
À·
 << std::
	`£tfûl
(' ') << "Decoded" << ":";

337 
m_ö°
 = 
FëchReg
.m_inst;

340 
°d
::
cout
 << std::
	`£tw
(13Ë<< std::
À·
 << std::
	`£tfûl
(' ') << "instruction" ;

341 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' 'Ë<< 
m_ö°
.
DoubÀW‹d
;

342 
°d
::
cout
 << std::
	`£tw
(12Ë<< std::
À·
 << std::
	`£tfûl
(' ') << "atáddress" ;

343 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' 'Ë<< 
FëchReg
.
m_pc
 ;

344 
°d
::
cout
 << " : ";

346 i‡(
FëchReg
.
m_°Æl
)

348 
FëchReg
.
m_pc
 -
INST_LEN
;

352 i‡((
FëchReg
.
m_bubbÀ
Ë|| 
m_ö°
.
DoubÀW‹d
 == 0)

354 
°d
::
cout
 << "bubbÀ" << std::
ídl
;

355 
DecodeReg
.
m_bubbÀ
 = 
åue
;

359 
°©ic_ˇ°
<
In°OpCode
>(
m_ö°
.
comm⁄
.
›code
))

361 
In°OpCode
::
REG
 : 
	`decode_ªg_ö°
() ; ;

362 
In°OpCode
::
IMM
 : 
	`decode_imm_ö°
() ; ;

363 
In°OpCode
::
LUT
 : 
	`decode_lut_ö°
() ; ;

364 
In°OpCode
::
BRANCH
 : 
	`decode_bønch_ö°
(); ;

365 
In°OpCode
::
STORE
 : 
	`decode_°‹e_ö°
() ; ;

366 
In°OpCode
::
LOAD
 : 
	`decode_lﬂd_ö°
() ; ;

367 
In°OpCode
::
SYSTEM
 : 
	`decode_sy°em_ö°
(); ;

368 
In°OpCode
::
AUIPC
 : 
	`decode_auùc_ö°
() ; ;

369 
In°OpCode
::
JAL
 : 
	`decode_jÆ_ö°
() ; ;

370 
In°OpCode
::
JALR
 : 
	`decode_jÆr_ö°
() ; ;

371 
In°OpCode
::
IMM32
 : 
	`decode_imm32_ö°
() ; ;

372 
In°OpCode
::
OP32
 : 
	`decode_›32_ö°
() ; ;

374 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' ') << "UNKNOW OpCode !!!!!!!!!!! "

375 << 
°d
::
dec
 << std::
	`£tw
(12Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << 
m_ö°
.
comm⁄
.
›code


377 << 
°d
::
dec
 << std::
	`£tw
(12Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << 
m_ö°
.
DoubÀW‹d
 << std::
ídl
;

381 
°d
::
cout
 << std::
ídl
;

383 
DecodeRegNew
.
m_bubbÀ
 = 
Ál£
;

384 
DecodeRegNew
.
m_°Æl
 = 
Ál£
;

385 
DecodeRegNew
.
m_ö°
 = 
FëchReg
.m_inst;

386 
DecodeRegNew
.
m_pc
 = 
FëchReg
.m_pc;

388 
	}
}

	@/home/xinhualu/repo/0_xhlu/0_pppppppp/0_project/0_elf_parser/cpu_execute.cpp

1 
	~"˝u.hµ
"

2 
	~"ñ„r.hµ
"

4 
usög
 
«me•a˚
 
	g°d
;

14 
	gC‹e
::
	$execuã_bønch_ö°
()

16 
m_ö°
.
rv32i
.
S
.
func3
)

18 0: 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' ') << "BEQ" ;

19 
	`execuã_beq
() ;

21 1: 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' ') << "BNE" ;

22 
	`execuã_b√
() ;

24 4: 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' ') << "BLT" ;

25 
	`execuã_b…
() ;

27 5: 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' ') << "BGE" ;

28 
	`execuã_bge
() ;

30 6: 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' ') << "BLTU" ;

31 
	`execuã_b…u
();

33 7: 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' ') << "BGEU" ;

34 
	`execuã_bgeu
();

37 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' ') << "Branch";

41 autÿ
imm
 = 
	`öt32_t
(–(
m_ö°
.
rv32i
.
SB
.
imm_4_1
Ë| (m_ö°.rv32i.SB.
imm_10_5
 << 5) | \

42 (
m_ö°
.
rv32i
.
SB
.
imm_11
 << 11Ë| (m_ö°.rv32i.SB.
imm_12
 << 12) ) << 19 ) >> 19;

44 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' 'Ë<< std::
hex
 << 
m_ö°
.
rv32i
.
SB
.
rs1


45 << 
°d
::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' 'Ë<< std::
hex
 << 
m_ö°
.
rv32i
.
SB
.
rs2


46 << 
°d
::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' 'Ë<< std::
dec
 << 
imm


47 << 
°d
::
ídl
;

49 
	}
}

51 
	gC‹e
::
	$execuã_lﬂd_ö°
()

53 
m_ö°
.
rv32i
.
I
.
func3
)

55 0: 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' 'Ë<< "LB" ; 
	`execuã_lb
() ; ;

56 1: 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' 'Ë<< "LH" ; 
	`execuã_lh
() ; ;

57 2: 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' 'Ë<< "LW" ; 
	`execuã_lw
() ; ;

58 4: 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' 'Ë<< "LBU" ; 
	`execuã_lbu
(); ;

59 5: 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' 'Ë<< "LHU" ; 
	`execuã_lhu
(); ;

60 6: 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' 'Ë<< "LWU" ; 
	`execuã_lwu
(); ;

61 3: 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' 'Ë<< "LD" ; 
	`execuã_ld
() ; ;

63 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' ') << "load";

69 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' 'Ë<< std::
hex
 << 
m_ö°
.
rv32i
.
I
.
rd


70 << 
°d
::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' 'Ë<< std::
hex
 << 
m_ö°
.
rv32i
.
I
.
rs1


71 << 
°d
::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' 'Ë<< std::
hex
 << 
m_ö°
.
rv32i
.
I
.
imm_11_0
 << std::
ídl
;

72 
	}
}

74 
	gC‹e
::
	$execuã_°‹e_ö°
()

76 
m_ö°
.
rv32i
.
S
.
func3
)

78 0: 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' ') << "SB" ; ;

79 1: 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' ') << "SH" ; ;

80 2: 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' ') << "SW" ; ;

81 3: 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' ') << "SD" ; ;

83 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' ') << "store";

87 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' 'Ë<< std::
hex
 << 
m_ö°
.
rv32i
.
S
.
rs1


88 << 
°d
::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' 'Ë<< std::
hex
 << 
m_ö°
.
rv32i
.
S
.
rs2


89 << 
°d
::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' 'Ë<< std::
hex
 << 
m_ö°
.
rv32i
.
S
.
imm_4_0


90 << 
°d
::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' 'Ë<< std::
hex
 << 
m_ö°
.
rv32i
.
S
.
imm_11_5
 << std::
ídl
;

91 
	}
}

93 
	gC‹e
::
	$execuã_imm_ö°
()

95 
m_ö°
.
rv32i
.
I
.
func3
)

97 0: 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' 'Ë<< "ADDI " ; 
	`execuã_addi
(); ;

98 2: 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' 'Ë<< "SLTI " ; 
	`execuã_¶ti
(); ;

99 3: 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' 'Ë<< "SLTIU " ; 
	`execuã_¶tu
(); ;

100 4: 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' 'Ë<< "XORI " ; 
	`execuã_x‹i
(); ;

101 6: 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' 'Ë<< "ORI " ; 
	`execuã_‹i
(); ;

102 7: 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' 'Ë<< "ANDI " ; 
	`execuã_™di
(); ;

103 1: 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' 'Ë<< "SLLI " ; 
	`execuã_¶li
(); ;

104 5: 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' 'Ë<< "SRAI/SRLI" ; 
	`execuã_§ai
(); ;

106 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' ') << "IMM";

110 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' 'Ë<< std::
hex
 << 
m_ö°
.
rv32i
.
I
.
rd


111 << 
°d
::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' 'Ë<< std::
hex
 << 
m_ö°
.
rv32i
.
I
.
rs1


112 << 
°d
::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' 'Ë<< std::
hex
 << 
m_ö°
.
rv32i
.
I
.
imm_11_0
 << std::
ídl
;

113 
	}
}

115 
	gC‹e
::
	$execuã_ªg_ö°
()

117 
m_ö°
.
rv32i
.
R
.
func3
)

120 i‡(
m_ö°
.
rv32i
.
R
.
func7
 == 0)

122 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' ') << "ADD " ;

124 i‡(
m_ö°
.
rv32i
.
R
.
func7
 == 0x20)

126 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' ') << "SUB " ;

127 
	`execuã_sub
();

130 1: 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' ') << "SLL " ; ;

131 2: 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' ') << "SLT " ; ;

132 3: 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' ') << "SLTU" ; ;

133 4: 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' ') << "XOR " ; ;

135 i‡(
m_ö°
.
rv32i
.
R
.
func7
 == 0)

137 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' ') << "SRL " ;

139 i‡(
m_ö°
.
rv32i
.
R
.
func7
 == 0x20)

141 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' ') << "SRA " ;

144 6: 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' ') << "OR " ; ;

145 7: 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' ') << "AND " ; ;

147 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' ') << "REG";

151 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' 'Ë<< std::
hex
 << 
m_ö°
.
rv32i
.
R
.
rd


152 << 
°d
::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' 'Ë<< std::
hex
 << 
m_ö°
.
rv32i
.
R
.
rs1


153 << 
°d
::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' 'Ë<< std::
hex
 << 
m_ö°
.
rv32i
.
R
.
rs2
 << std::
ídl
;

154 
	}
}

156 
	gC‹e
::
	$execuã_„n˚_ö°
()

159 
	}
}

161 
C‹e
::
	$execuã_sy°em_ö°
()

163 
m_ö°
.
rv32i
.
R
.
func3
)

166 i‡(
m_ö°
.
rv32i
.
R
.
func7
 == 0)

168 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' ') << "ECALL " ;

170 if(
m_ö°
.
rv32i
.
R
.
func7
 == 1)

172 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' ') << "EBREA " ;

175 1: 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' ') << "CSRRW " ; ;

176 2: 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' ') << "CSRRS " ; ;

177 3: 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' ') << "CSRRC " ; ;

178 5: 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' ') << "CSRRSW" ; ;

179 6: 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' ') << "CSRRSI" ; ;

180 7: 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' ') << "CSRRCI" ; ;

182 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' ') << "SYSTEM";

186 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' 'Ë<< std::
hex
 << 
m_ö°
.
rv32i
.
I
.
rd


187 << 
°d
::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' 'Ë<< std::
hex
 << 
m_ö°
.
rv32i
.
I
.
rs1


188 << 
°d
::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' 'Ë<< std::
hex
 << 
m_ö°
.
rv32i
.
I
.
imm_11_0
 << std::
ídl
;

189 
	}
}

191 
	gC‹e
::
	$execuã_imm32_ö°
()

193 
m_ö°
.
rv32i
.
R
.
func3
)

195 0: 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' ') << "ADDIW" ; ;

196 1: 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' ') << "SLLIW" ; ;

198 if(
m_ö°
.
rv32i
.
R
.
func7
 == 0)

200 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' ') << "SRLIW" ;

202 i‡(
m_ö°
.
rv32i
.
R
.
func7
 == 0x20)

204 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' ') << "SRAIW" ;

208 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' ') << "IMM32";

212 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' 'Ë<< std::
hex
 << 
m_ö°
.
rv32i
.
R
.
rd


213 << 
°d
::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' 'Ë<< std::
hex
 << 
m_ö°
.
rv32i
.
R
.
rs1


214 << 
°d
::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' 'Ë<< std::
hex
 << 
m_ö°
.
rv32i
.
R
.
rs2


215 << 
°d
::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' 'Ë<< std::
hex
 << 
m_ö°
.
rv32i
.
R
.
func7
 << std::
ídl
;

217 
	}
}

219 
	gC‹e
::
	$execuã_›32_ö°
()

221 
m_ö°
.
rv32i
.
R
.
func3
)

224 i‡(
m_ö°
.
rv32i
.
R
.
func7
 == 0)

226 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' ') << "ADDW" ;

228 if(
m_ö°
.
rv32i
.
R
.
func7
 == 0x20)

230 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' ') << "SUBW" ;

233 1: 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' ') << "SLLW" ; ;

235 i‡(
m_ö°
.
rv32i
.
R
.
func7
 == 0)

237 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' ') << "SRLW" ;

239 if(
m_ö°
.
rv32i
.
R
.
func7
 == 0x20)

241 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' ') << "SRAW" ;

245 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' ') << "OP32";

249 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' 'Ë<< std::
hex
 << 
m_ö°
.
rv32i
.
R
.
rd


250 << 
°d
::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' 'Ë<< std::
hex
 << 
m_ö°
.
rv32i
.
R
.
rs1


251 << 
°d
::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' 'Ë<< std::
hex
 << 
m_ö°
.
rv32i
.
R
.
rs2


252 << 
°d
::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' 'Ë<< std::
hex
 << 
m_ö°
.
rv32i
.
R
.
func7
 << std::
ídl
;

253 
	}
}

255 
	gC‹e
::
	$execuã_auùc_ö°
()

257 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' ') << "AUIPC"

258 << 
°d
::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' 'Ë<< std::
hex
 << 
m_ö°
.
rv32i
.
U
.
rd


259 << 
°d
::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' 'Ë<< std::
hex
 << 
m_ö°
.
rv32i
.
U
.
imm_31_12
 << std::
ídl
;

261 
	`execuã_auùc
();

262 
	}
}

264 
	gC‹e
::
	$execuã_jÆ_ö°
()

266 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' ') << "JAL"

267 << 
°d
::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' 'Ë<< std::
hex
 << 
m_ö°
.
rv32i
.
UJ
.
rd


268 << 
°d
::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' 'Ë<< std::
hex
 << 
m_ö°
.
rv32i
.
UJ
.
imm_10_1


269 << 
°d
::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' 'Ë<< std::
hex
 << 
m_ö°
.
rv32i
.
UJ
.
imm_11


270 << 
°d
::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' 'Ë<< std::
hex
 << 
m_ö°
.
rv32i
.
UJ
.
imm_19_12


271 << 
°d
::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' 'Ë<< std::
hex
 << 
m_ö°
.
rv32i
.
UJ
.
imm_20
 << std::
ídl
;

273 
	`execuã_jÆ
();

274 
	}
}

276 
	gC‹e
::
	$execuã_jÆr_ö°
()

278 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' ') << "JALR"

279 << 
°d
::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' 'Ë<< std::
hex
 << 
m_ö°
.
rv32i
.
I
.
rd


280 << 
°d
::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' 'Ë<< std::
hex
 << 
m_ö°
.
rv32i
.
I
.
rs1


281 << 
°d
::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' 'Ë<< std::
hex
 << 
m_ö°
.
rv32i
.
I
.
imm_11_0
 << std::
ídl
;

282 
	}
}

284 
	gC‹e
::
	$execuã_lut_ö°
()

286 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' ') << "LUT"

287 << 
°d
::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' 'Ë<< std::
hex
 << 
m_ö°
.
rv32i
.
U
.
rd


288 << 
°d
::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' 'Ë<< std::
hex
 << 
m_ö°
.
rv32i
.
U
.
imm_31_12
 << std::
ídl
;

289 
	}
}

291 
	gC‹e
::
	$execuã_beq
()

293 
öt32_t
 
rs1
 = 
m_c‹e_ªgi°îs
[
m_ö°
.
rv32i
.
SB
.rs1].
fú°
;

294 
öt32_t
 
rs2
 = 
m_c‹e_ªgi°îs
[
m_ö°
.
rv32i
.
SB
.rs2].
fú°
;

296 i‡(
rs1
 =
rs2
)

298 autÿ
off£t
 = 
	`öt32_t
(–(
m_ö°
.
rv32i
.
SB
.
imm_4_1
) | \

299 (
m_ö°
.
rv32i
.
SB
.
imm_10_5
 << 5) | \

300 (
m_ö°
.
rv32i
.
SB
.
imm_11
 << 11) | \

301 (
m_ö°
.
rv32i
.
SB
.
imm_12
 << 12) ) << 19 ) >> 19 ;

302 
DecodeReg
.
m_pc
 +
off£t
;

304 
	}
}

305 
	gC‹e
::
	$execuã_b√
()

307 
öt32_t
 
rs1
 = 
m_c‹e_ªgi°îs
[
m_ö°
.
rv32i
.
SB
.rs1].
fú°
;

308 
öt32_t
 
rs2
 = 
m_c‹e_ªgi°îs
[
m_ö°
.
rv32i
.
SB
.rs2].
fú°
;

310 i‡(
rs1
 !
rs2
)

312 autÿ
off£t
 = 
	`öt32_t
(–(
m_ö°
.
rv32i
.
SB
.
imm_4_1
) | \

313 (
m_ö°
.
rv32i
.
SB
.
imm_10_5
 << 5) | \

314 (
m_ö°
.
rv32i
.
SB
.
imm_11
 << 11) | \

315 (
m_ö°
.
rv32i
.
SB
.
imm_12
 << 12) ) << 19) >> 19;

316 
DecodeReg
.
m_pc
 +
off£t
;

318 
	}
}

319 
	gC‹e
::
	$execuã_b…
()

321 
öt32_t
 
rs1
 = 
m_c‹e_ªgi°îs
[
m_ö°
.
rv32i
.
SB
.rs1].
fú°
;

322 
öt32_t
 
rs2
 = 
m_c‹e_ªgi°îs
[
m_ö°
.
rv32i
.
SB
.rs2].
fú°
;

324 i‡(
rs1
 < 
rs2
)

326 autÿ
off£t
 = 
	`öt32_t
(–(
m_ö°
.
rv32i
.
SB
.
imm_4_1
) | \

327 (
m_ö°
.
rv32i
.
SB
.
imm_10_5
 << 5) | \

328 (
m_ö°
.
rv32i
.
SB
.
imm_11
 << 11) | \

329 (
m_ö°
.
rv32i
.
SB
.
imm_12
 << 12) ) << 19) >> 19;

330 
DecodeReg
.
m_pc
 +
off£t
;

332 
	}
}

333 
	gC‹e
::
	$execuã_bge
()

335 
öt32_t
 
rs1
 = 
m_c‹e_ªgi°îs
[
m_ö°
.
rv32i
.
SB
.rs1].
fú°
;

336 
öt32_t
 
rs2
 = 
m_c‹e_ªgi°îs
[
m_ö°
.
rv32i
.
SB
.rs2].
fú°
;

338 i‡(
rs1
 > 
rs2
)

340 autÿ
off£t
 = 
	`öt32_t
(–(
m_ö°
.
rv32i
.
SB
.
imm_4_1
) | \

341 (
m_ö°
.
rv32i
.
SB
.
imm_10_5
 << 5) | \

342 (
m_ö°
.
rv32i
.
SB
.
imm_11
 << 11) | \

343 (
m_ö°
.
rv32i
.
SB
.
imm_12
 << 12) ) << 19) >> 19;

344 
DecodeReg
.
m_pc
 +
off£t
;

346 
	}
}

347 
	gC‹e
::
	$execuã_b…u
()

349 
uöt32_t
 
rs1
 = 
m_c‹e_ªgi°îs
[
m_ö°
.
rv32i
.
SB
.rs1].
fú°
;

350 
uöt32_t
 
rs2
 = 
m_c‹e_ªgi°îs
[
m_ö°
.
rv32i
.
SB
.rs2].
fú°
;

352 i‡(
rs1
 < 
rs2
)

354 autÿ
off£t
 = 
	`uöt32_t
(–(
m_ö°
.
rv32i
.
SB
.
imm_4_1
) | \

355 (
m_ö°
.
rv32i
.
SB
.
imm_10_5
 << 5) | \

356 (
m_ö°
.
rv32i
.
SB
.
imm_11
 << 11) | \

357 (
m_ö°
.
rv32i
.
SB
.
imm_12
 << 12) ) << 19) >> 19;

358 
DecodeReg
.
m_pc
 +
off£t
;

360 
	}
}

361 
	gC‹e
::
	$execuã_bgeu
()

363 
uöt32_t
 
rs1
 = 
m_c‹e_ªgi°îs
[
m_ö°
.
rv32i
.
SB
.rs1].
fú°
;

364 
uöt32_t
 
rs2
 = 
m_c‹e_ªgi°îs
[
m_ö°
.
rv32i
.
SB
.rs2].
fú°
;

366 i‡(
rs1
 > 
rs2
)

368 autÿ
off£t
 = 
	`uöt32_t
(–(
m_ö°
.
rv32i
.
SB
.
imm_4_1
) | \

369 (
m_ö°
.
rv32i
.
SB
.
imm_10_5
 << 5) | \

370 (
m_ö°
.
rv32i
.
SB
.
imm_11
 << 11) | \

371 (
m_ö°
.
rv32i
.
SB
.
imm_12
 << 12) ) << 19) >> 19;

372 
DecodeReg
.
m_pc
 +
off£t
;

374 
	}
}

377 
	gC‹e
::
	$execuã_lb
()

379 autÿ
off£t
 = 
	`öt32_t
(
m_ö°
.
rv32i
.
I
.
imm_11_0
 << 20) >> 20;

380 autÿ
addªss
 = 
m_c‹e_ªgi°îs
[
m_ö°
.
rv32i
.
I
.
rs1
].
fú°
 + 
off£t
;

381 autÿ
d©a
 = 
m_mem
->
	`ªad8
(
addªss
);

383 
m_c‹e_ªgi°îs
[
m_ö°
.
rv32i
.
I
.
rd
].
fú°
 = 
d©a
;

384 
	}
}

385 
	gC‹e
::
	$execuã_lh
()

387 autÿ
off£t
 = 
	`öt32_t
(
m_ö°
.
rv32i
.
I
.
imm_11_0
 << 20) >> 20;

388 autÿ
addªss
 = 
m_c‹e_ªgi°îs
[
m_ö°
.
rv32i
.
I
.
rs1
].
fú°
 + 
off£t
;

389 autÿ
d©a
 = 
m_mem
->
	`ªad16
(
addªss
);

391 
m_c‹e_ªgi°îs
[
m_ö°
.
rv32i
.
I
.
rd
].
fú°
 = 
d©a
;

392 
	}
}

393 
	gC‹e
::
	$execuã_lw
()

395 autÿ
off£t
 = 
	`öt32_t
(
m_ö°
.
rv32i
.
I
.
imm_11_0
 << 20) >> 20;

396 autÿ
addªss
 = 
m_c‹e_ªgi°îs
[
m_ö°
.
rv32i
.
I
.
rs1
].
fú°
 + 
off£t
;

397 autÿ
d©a
 = 
m_mem
->
	`ªad32
(
addªss
);

399 
m_c‹e_ªgi°îs
[
m_ö°
.
rv32i
.
I
.
rd
].
fú°
 = 
d©a
;

400 
	}
}

401 
	gC‹e
::
	$execuã_lbu
()

403 autÿ
off£t
 = 
	`uöt32_t
(
m_ö°
.
rv32i
.
I
.
imm_11_0
 << 20) >> 20;

404 autÿ
addªss
 = 
m_c‹e_ªgi°îs
[
m_ö°
.
rv32i
.
I
.
rs1
].
fú°
 + 
off£t
;

405 autÿ
d©a
 = 
m_mem
->
	`ªad8
(
addªss
);

407 
m_c‹e_ªgi°îs
[
m_ö°
.
rv32i
.
I
.
rd
].
fú°
 = 
d©a
;

408 
	}
}

409 
	gC‹e
::
	$execuã_lhu
()

411 autÿ
off£t
 = 
	`uöt32_t
(
m_ö°
.
rv32i
.
I
.
imm_11_0
 << 20) >> 20;

412 autÿ
addªss
 = 
m_c‹e_ªgi°îs
[
m_ö°
.
rv32i
.
I
.
rs1
].
fú°
 + 
off£t
;

413 autÿ
d©a
 = 
m_mem
->
	`ªad16
(
addªss
);

415 
m_c‹e_ªgi°îs
[
m_ö°
.
rv32i
.
I
.
rd
].
fú°
 = 
d©a
;

416 
	}
}

417 
	gC‹e
::
	$execuã_lwu
()

419 autÿ
off£t
 = 
	`uöt32_t
(
m_ö°
.
rv32i
.
I
.
imm_11_0
 << 20) >> 20;

420 autÿ
addªss
 = 
m_c‹e_ªgi°îs
[
m_ö°
.
rv32i
.
I
.
rs1
].
fú°
 + 
off£t
;

421 autÿ
d©a
 = 
m_mem
->
	`ªad32
(
addªss
);

423 
m_c‹e_ªgi°îs
[
m_ö°
.
rv32i
.
I
.
rd
].
fú°
 = 
d©a
;

424 
	}
}

425 
	gC‹e
::
	$execuã_ld
()

427 autÿ
off£t
 = 
	`öt32_t
(
m_ö°
.
rv32i
.
I
.
imm_11_0
 << 20) >> 20;

428 autÿ
addªss
 = 
m_c‹e_ªgi°îs
[
m_ö°
.
rv32i
.
I
.
rs1
].
fú°
 + 
off£t
;

429 autÿ
d©a
 = 
m_mem
->
	`ªad64
(
addªss
);

431 
m_c‹e_ªgi°îs
[
m_ö°
.
rv32i
.
I
.
rd
].
fú°
 = 
d©a
;

432 
	}
}

434 
	gC‹e
::
	$execuã_addi
(){

435 autÿ
imm
 = 
	`öt32_t
(
m_ö°
.
rv32i
.
I
.
imm_11_0
 << 20) >> 20;

436 autÿ
rs1
 = 
m_c‹e_ªgi°îs
[
m_ö°
.
rv32i
.
I
.rs1].
fú°
;

438 
m_c‹e_ªgi°îs
[
m_ö°
.
rv32i
.
I
.
rd
].
fú°
 = 
rs1
 + 
imm
;

439 
	}
}

440 
	gC‹e
::
	$execuã_¶ti
(){

442 
	}
}

443 
C‹e
::
	$execuã_¶tu
(){

445 
	}
}

446 
C‹e
::
	$execuã_x‹i
(){

448 
	}
}

449 
C‹e
::
	$execuã_‹i
(){

451 
	}
}

452 
C‹e
::
	$execuã_™di
(){

454 
	}
}

455 
C‹e
::
	$execuã_¶li
(){

457 
	}
}

458 
C‹e
::
	$execuã_§ai
(){

460 
	}
}

462 
C‹e
::
	$execuã_sub
()

464 autÿ
rs1
 = 
m_c‹e_ªgi°îs
[
m_ö°
.
rv32i
.
R
.rs1].
fú°
;

465 autÿ
rs2
 = 
m_c‹e_ªgi°îs
[
m_ö°
.
rv32i
.
R
.rs2].
fú°
;

467 
m_c‹e_ªgi°îs
[
m_ö°
.
rv32i
.
R
.
rd
].
fú°
 = 
rs1
 - 
rs2
;

468 
	}
}

470 
	gC‹e
::
	$execuã_auùc
()

472 autÿ
off£t
 = 
	`öt32_t
(
m_ö°
.
rv32i
.
U
.
imm_31_12
 << 12);

474 
m_c‹e_ªgi°îs
[
m_ö°
.
rv32i
.
U
.
rd
].
fú°
 = 
DecodeReg
.
m_pc
 + 
off£t
;

475 
	}
}

477 
	gC‹e
::
	$execuã_jÆ
()

479 
m_c‹e_ªgi°îs
[
m_ö°
.
rv32i
.
UJ
.
rd
].
fú°
 = 
DecodeReg
.
m_pc
 + 4;

481 autÿ
off£t
 = 
	`öt32_t
((
m_ö°
.
rv32i
.
UJ
.
imm_10_1
 | \

482 (
m_ö°
.
rv32i
.
UJ
.
imm_11
 << 11) | \

483 (
m_ö°
.
rv32i
.
UJ
.
imm_19_12
 << 12) | \

484 (
m_ö°
.
rv32i
.
UJ
.
imm_20
 << 20)) << 12) >> 11;

486 
DecodeReg
.
m_pc
 +
off£t
;

489 
	}
}

491 
	gC‹e
::
	$execuã
()

493 
°d
::
cout
 << std::
	`£tw
(8Ë<< std::
À·
 << std::
	`£tfûl
(' ') << "Execute" << ":";

495 
m_ö°
 = 
DecodeReg
.m_inst;

498 
°d
::
cout
 << std::
	`£tw
(13Ë<< std::
À·
 << std::
	`£tfûl
(' ') << "instruction" ;

499 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' 'Ë<< 
m_ö°
.
DoubÀW‹d
;

500 
°d
::
cout
 << std::
	`£tw
(12Ë<< std::
À·
 << std::
	`£tfûl
(' ') << "atáddress" ;

501 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' 'Ë<< 
DecodeReg
.
m_pc
 ;

502 
°d
::
cout
 << " : ";

504 i‡(
DecodeReg
.
m_°Æl
)

506 
ExecuãReg
.
m_°Æl
 = 
åue
;

510 i‡(
DecodeReg
.
m_bubbÀ
 || (
m_ö°
.
DoubÀW‹d
 == 0))

512 
°d
::
cout
 << "bubbÀ" << std::
ídl
;

513 
ExecuãReg
.
m_bubbÀ
 = 
åue
;

517 
°©ic_ˇ°
<
In°OpCode
>(
m_ö°
.
comm⁄
.
›code
))

519 
In°OpCode
::
REG
 : 
	`execuã_ªg_ö°
() ; ;

520 
In°OpCode
::
IMM
 : 
	`execuã_imm_ö°
() ; ;

521 
In°OpCode
::
LUT
 : 
	`execuã_lut_ö°
() ; ;

522 
In°OpCode
::
BRANCH
 : 
	`execuã_bønch_ö°
(); ;

523 
In°OpCode
::
STORE
 : 
	`execuã_°‹e_ö°
() ; ;

524 
In°OpCode
::
LOAD
 : 
	`execuã_lﬂd_ö°
() ; ;

525 
In°OpCode
::
SYSTEM
 : 
	`execuã_sy°em_ö°
(); ;

526 
In°OpCode
::
AUIPC
 : 
	`execuã_auùc_ö°
() ; ;

527 
In°OpCode
::
JAL
 : 
	`execuã_jÆ_ö°
() ; ;

528 
In°OpCode
::
JALR
 : 
	`execuã_jÆr_ö°
() ; ;

529 
In°OpCode
::
IMM32
 : 
	`execuã_imm32_ö°
() ; ;

530 
In°OpCode
::
OP32
 : 
	`execuã_›32_ö°
() ; ;

532 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' ') << "UNKNOW OpCode !!!!!!!!!!! "

533 << 
°d
::
dec
 << std::
	`£tw
(12Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << 
m_ö°
.
comm⁄
.
›code


535 << 
°d
::
dec
 << std::
	`£tw
(12Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << 
m_ö°
.
DoubÀW‹d
 << std::
ídl
;

539 
ExecuãRegNew
.
m_bubbÀ
 = 
Ál£
;

540 
ExecuãRegNew
.
m_°Æl
 = 
Ál£
;

541 
ExecuãRegNew
.
m_ö°
 = 
DecodeReg
.m_inst;

542 
ExecuãRegNew
.
m_pc
 = 
DecodeReg
.m_pc;

543 
	}
}

	@/home/xinhualu/repo/0_xhlu/0_pppppppp/0_project/0_elf_parser/cpu_fetch.cpp

1 
	~"˝u.hµ
"

2 
	~"ñ„r.hµ
"

4 
usög
 
«me•a˚
 
	g°d
;

6 
	gC‹e
::
	$„tch
()

8 
°d
::
cout
 << std::
ídl
;

9 
°d
::
cout
 << std::
	`£tw
(3Ë<< std::
À·
 << std::
	`£tfûl
(' 'Ë<< "PC:" << std::
hex
 << 
m_pc
 << std::
ídl
;

12 i‡(
m_c‹e_ªgi°îs
[
zîo
].
fú°
 != 0)

14 
m_c‹e_ªgi°îs
[
zîo
].
fú°
 = 0;

17 i‡(
m_c‹e_ªgi°îs
[
•
].
fú°
 < (
m_°ack
.
m_ba£
 - m_°ack.
m_size
))

19 
°d
::
	`ru¡ime_îr‹
("Stack OverFlow !");

23 i‡((
m_pc
 % 2) != 0)

25 
°d
::
	`ru¡ime_îr‹
("illegalÖcÖointer !");

29 
m_ö°
.
DoubÀW‹d
 = 
m_mem
->
	`ªad32
(
m_pc
);

31 
°d
::
cout
 << std::
	`£tw
(8Ë<< std::
À·
 << std::
	`£tfûl
(' ') << "Fetched" << ":";

32 
°d
::
cout
 << std::
	`£tw
(13Ë<< std::
À·
 << std::
	`£tfûl
(' ') << "instruction" ;

33 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' 'Ë<< 
m_ö°
.
DoubÀW‹d
;

34 
°d
::
cout
 << std::
	`£tw
(12Ë<< std::
À·
 << std::
	`£tfûl
(' ') << "atáddress" ;

35 
°d
::
cout
 << std::
	`£tw
(10Ë<< std::
À·
 << std::
	`£tfûl
(' 'Ë<< 
m_pc
 ;

36 
°d
::
cout
 << std::
ídl
;

38 
FëchRegNew
.
m_bubbÀ
 = 
Ál£
;

39 
FëchRegNew
.
m_°Æl
 = 
Ál£
;

40 
FëchRegNew
.
m_pc
 = m_pc;

41 
FëchRegNew
.
m_ö°
 = m_inst;

43 
m_pc
 += 4;

44 
	}
}

	@/home/xinhualu/repo/0_xhlu/0_pppppppp/0_project/0_elf_parser/demo/helloworld.c

1 
	~"lib.h
"

3 
	$maö
() {

4 
	`¥öt_s
("Hello, World!\n");

5 
	`exô_¥oc
();

6 
	}
}

	@/home/xinhualu/repo/0_xhlu/0_pppppppp/0_project/0_elf_parser/demo/lib.c

5 
	~"lib.h
"

7 
	$¥öt_d
(
num
)

9 
	`asm
("liá7, 2;"

11 
	}
}

13 
	$¥öt_s
(c⁄° *
°r
)

15 
	`asm
("liá7, 0;"

17 
	}
}

19 
	$¥öt_c
(
ch
)

21 
	`asm
("liá7, 1;"

23 
	}
}

25 
	$exô_¥oc
() {

26 
	`asm
("liá7, 3;"

28 
	}
}

30 
	$ªad_ch¨
()

32 
ªsu…
;

33 
	`asm
("liá7, 4;"

35 
	`asm
("addò%0,á0, 0" : "Ù" (
ªsu…
));

36  
ªsu…
;

37 
	}
}

39 
	$ªad_num
()

41 
ªsu…
;

42 
	`asm
("liá7, 5;"

44 
	`asm
("addò%0,á0, 0" : "Ù" (
ªsu…
));

45  
ªsu…
;

46 
	}
}

	@/home/xinhualu/repo/0_xhlu/0_pppppppp/0_project/0_elf_parser/demo/lib.h

1 #i‚de‡
RISCV_SIMULATOR_LIB_H


2 
	#RISCV_SIMULATOR_LIB_H


	)

4 
¥öt_d
(
num
);

5 
¥öt_s
(c⁄° *
°r
);

6 
¥öt_c
(
ch
);

8 
exô_¥oc
();

10 
ªad_ch¨
();

11 
ªad_num
();

	@/home/xinhualu/repo/0_xhlu/0_pppppppp/0_project/0_elf_parser/elf.h

19 #i‚de‡
_ELF_H


20 
	#_ELF_H
 1

	)

24 
	~<°döt.h
>

27 
uöt16_t
 
	tElf32_HÆf
;

28 
uöt16_t
 
	tElf64_HÆf
;

31 
uöt32_t
 
	tElf32_W‹d
;

32 
öt32_t
 
	tElf32_Sw‹d
;

33 
uöt32_t
 
	tElf64_W‹d
;

34 
öt32_t
 
	tElf64_Sw‹d
;

37 
uöt64_t
 
	tElf32_Xw‹d
;

38 
öt64_t
 
	tElf32_Sxw‹d
;

39 
uöt64_t
 
	tElf64_Xw‹d
;

40 
öt64_t
 
	tElf64_Sxw‹d
;

43 
uöt32_t
 
	tElf32_Addr
;

44 
uöt64_t
 
	tElf64_Addr
;

47 
uöt32_t
 
	tElf32_Off
;

48 
uöt64_t
 
	tElf64_Off
;

51 
uöt16_t
 
	tElf32_Se˘i⁄
;

52 
uöt16_t
 
	tElf64_Se˘i⁄
;

55 
Elf32_HÆf
 
	tElf32_Vîsym
;

56 
Elf64_HÆf
 
	tElf64_Vîsym
;

61 
	#EI_NIDENT
 (16)

	)

65 
	me_idít
[
EI_NIDENT
];

66 
Elf32_HÆf
 
	me_ty≥
;

67 
Elf32_HÆf
 
	me_machöe
;

68 
Elf32_W‹d
 
	me_vîsi⁄
;

69 
Elf32_Addr
 
	me_íåy
;

70 
Elf32_Off
 
	me_phoff
;

71 
Elf32_Off
 
	me_shoff
;

72 
Elf32_W‹d
 
	me_Êags
;

73 
Elf32_HÆf
 
	me_ehsize
;

74 
Elf32_HÆf
 
	me_phítsize
;

75 
Elf32_HÆf
 
	me_phnum
;

76 
Elf32_HÆf
 
	me_shítsize
;

77 
Elf32_HÆf
 
	me_shnum
;

78 
Elf32_HÆf
 
	me_sh°∫dx
;

79 } 
	tElf32_Ehdr
;

83 
	me_idít
[
EI_NIDENT
];

84 
Elf64_HÆf
 
	me_ty≥
;

85 
Elf64_HÆf
 
	me_machöe
;

86 
Elf64_W‹d
 
	me_vîsi⁄
;

87 
Elf64_Addr
 
	me_íåy
;

88 
Elf64_Off
 
	me_phoff
;

89 
Elf64_Off
 
	me_shoff
;

90 
Elf64_W‹d
 
	me_Êags
;

91 
Elf64_HÆf
 
	me_ehsize
;

92 
Elf64_HÆf
 
	me_phítsize
;

93 
Elf64_HÆf
 
	me_phnum
;

94 
Elf64_HÆf
 
	me_shítsize
;

95 
Elf64_HÆf
 
	me_shnum
;

96 
Elf64_HÆf
 
	me_sh°∫dx
;

97 } 
	tElf64_Ehdr
;

103 
	#EI_MAG0
 0

	)

104 
	#ELFMAG0
 0x7‡

	)

106 
	#EI_MAG1
 1

	)

107 
	#ELFMAG1
 'E'

	)

109 
	#EI_MAG2
 2

	)

110 
	#ELFMAG2
 'L'

	)

112 
	#EI_MAG3
 3

	)

113 
	#ELFMAG3
 'F'

	)

116 
	#ELFMAG
 "\177ELF"

	)

117 
	#SELFMAG
 4

	)

119 
	#EI_CLASS
 4

	)

120 
	#ELFCLASSNONE
 0

	)

121 
	#ELFCLASS32
 1

	)

122 
	#ELFCLASS64
 2

	)

123 
	#ELFCLASSNUM
 3

	)

125 
	#EI_DATA
 5

	)

126 
	#ELFDATANONE
 0

	)

127 
	#ELFDATA2LSB
 1

	)

128 
	#ELFDATA2MSB
 2

	)

129 
	#ELFDATANUM
 3

	)

131 
	#EI_VERSION
 6

	)

134 
	#EI_OSABI
 7

	)

135 
	#ELFOSABI_NONE
 0

	)

136 
	#ELFOSABI_SYSV
 0

	)

137 
	#ELFOSABI_HPUX
 1

	)

138 
	#ELFOSABI_NETBSD
 2

	)

139 
	#ELFOSABI_GNU
 3

	)

140 
	#ELFOSABI_LINUX
 
ELFOSABI_GNU


	)

141 
	#ELFOSABI_SOLARIS
 6

	)

142 
	#ELFOSABI_AIX
 7

	)

143 
	#ELFOSABI_IRIX
 8

	)

144 
	#ELFOSABI_FREEBSD
 9

	)

145 
	#ELFOSABI_TRU64
 10

	)

146 
	#ELFOSABI_MODESTO
 11

	)

147 
	#ELFOSABI_OPENBSD
 12

	)

148 
	#ELFOSABI_ARM_AEABI
 64

	)

149 
	#ELFOSABI_ARM
 97

	)

150 
	#ELFOSABI_STANDALONE
 255

	)

152 
	#EI_ABIVERSION
 8

	)

154 
	#EI_PAD
 9

	)

158 
	#ET_NONE
 0

	)

159 
	#ET_REL
 1

	)

160 
	#ET_EXEC
 2

	)

161 
	#ET_DYN
 3

	)

162 
	#ET_CORE
 4

	)

163 
	#ET_NUM
 5

	)

164 
	#ET_LOOS
 0x„00

	)

165 
	#ET_HIOS
 0x„f‡

	)

166 
	#ET_LOPROC
 0xff00

	)

167 
	#ET_HIPROC
 0xfff‡

	)

171 
	#EM_NONE
 0

	)

172 
	#EM_M32
 1

	)

173 
	#EM_SPARC
 2

	)

174 
	#EM_386
 3

	)

175 
	#EM_68K
 4

	)

176 
	#EM_88K
 5

	)

177 
	#EM_IAMCU
 6

	)

178 
	#EM_860
 7

	)

179 
	#EM_MIPS
 8

	)

180 
	#EM_S370
 9

	)

181 
	#EM_MIPS_RS3_LE
 10

	)

183 
	#EM_PARISC
 15

	)

185 
	#EM_VPP500
 17

	)

186 
	#EM_SPARC32PLUS
 18

	)

187 
	#EM_960
 19

	)

188 
	#EM_PPC
 20

	)

189 
	#EM_PPC64
 21

	)

190 
	#EM_S390
 22

	)

191 
	#EM_SPU
 23

	)

193 
	#EM_V800
 36

	)

194 
	#EM_FR20
 37

	)

195 
	#EM_RH32
 38

	)

196 
	#EM_RCE
 39

	)

197 
	#EM_ARM
 40

	)

198 
	#EM_FAKE_ALPHA
 41

	)

199 
	#EM_SH
 42

	)

200 
	#EM_SPARCV9
 43

	)

201 
	#EM_TRICORE
 44

	)

202 
	#EM_ARC
 45

	)

203 
	#EM_H8_300
 46

	)

204 
	#EM_H8_300H
 47

	)

205 
	#EM_H8S
 48

	)

206 
	#EM_H8_500
 49

	)

207 
	#EM_IA_64
 50

	)

208 
	#EM_MIPS_X
 51

	)

209 
	#EM_COLDFIRE
 52

	)

210 
	#EM_68HC12
 53

	)

211 
	#EM_MMA
 54

	)

212 
	#EM_PCP
 55

	)

213 
	#EM_NCPU
 56

	)

214 
	#EM_NDR1
 57

	)

215 
	#EM_STARCORE
 58

	)

216 
	#EM_ME16
 59

	)

217 
	#EM_ST100
 60

	)

218 
	#EM_TINYJ
 61

	)

219 
	#EM_X86_64
 62

	)

220 
	#EM_PDSP
 63

	)

221 
	#EM_PDP10
 64

	)

222 
	#EM_PDP11
 65

	)

223 
	#EM_FX66
 66

	)

224 
	#EM_ST9PLUS
 67

	)

225 
	#EM_ST7
 68

	)

226 
	#EM_68HC16
 69

	)

227 
	#EM_68HC11
 70

	)

228 
	#EM_68HC08
 71

	)

229 
	#EM_68HC05
 72

	)

230 
	#EM_SVX
 73

	)

231 
	#EM_ST19
 74

	)

232 
	#EM_VAX
 75

	)

233 
	#EM_CRIS
 76

	)

234 
	#EM_JAVELIN
 77

	)

235 
	#EM_FIREPATH
 78

	)

236 
	#EM_ZSP
 79

	)

237 
	#EM_MMIX
 80

	)

238 
	#EM_HUANY
 81

	)

239 
	#EM_PRISM
 82

	)

240 
	#EM_AVR
 83

	)

241 
	#EM_FR30
 84

	)

242 
	#EM_D10V
 85

	)

243 
	#EM_D30V
 86

	)

244 
	#EM_V850
 87

	)

245 
	#EM_M32R
 88

	)

246 
	#EM_MN10300
 89

	)

247 
	#EM_MN10200
 90

	)

248 
	#EM_PJ
 91

	)

249 
	#EM_OPENRISC
 92

	)

250 
	#EM_ARC_COMPACT
 93

	)

251 
	#EM_XTENSA
 94

	)

252 
	#EM_VIDEOCORE
 95

	)

253 
	#EM_TMM_GPP
 96

	)

254 
	#EM_NS32K
 97

	)

255 
	#EM_TPC
 98

	)

256 
	#EM_SNP1K
 99

	)

257 
	#EM_ST200
 100

	)

258 
	#EM_IP2K
 101

	)

259 
	#EM_MAX
 102

	)

260 
	#EM_CR
 103

	)

261 
	#EM_F2MC16
 104

	)

262 
	#EM_MSP430
 105

	)

263 
	#EM_BLACKFIN
 106

	)

264 
	#EM_SE_C33
 107

	)

265 
	#EM_SEP
 108

	)

266 
	#EM_ARCA
 109

	)

267 
	#EM_UNICORE
 110

	)

268 
	#EM_EXCESS
 111

	)

269 
	#EM_DXP
 112

	)

270 
	#EM_ALTERA_NIOS2
 113

	)

271 
	#EM_CRX
 114

	)

272 
	#EM_XGATE
 115

	)

273 
	#EM_C166
 116

	)

274 
	#EM_M16C
 117

	)

275 
	#EM_DSPIC30F
 118

	)

276 
	#EM_CE
 119

	)

277 
	#EM_M32C
 120

	)

279 
	#EM_TSK3000
 131

	)

280 
	#EM_RS08
 132

	)

281 
	#EM_SHARC
 133

	)

282 
	#EM_ECOG2
 134

	)

283 
	#EM_SCORE7
 135

	)

284 
	#EM_DSP24
 136

	)

285 
	#EM_VIDEOCORE3
 137

	)

286 
	#EM_LATTICEMICO32
 138

	)

287 
	#EM_SE_C17
 139

	)

288 
	#EM_TI_C6000
 140

	)

289 
	#EM_TI_C2000
 141

	)

290 
	#EM_TI_C5500
 142

	)

291 
	#EM_TI_ARP32
 143

	)

292 
	#EM_TI_PRU
 144

	)

294 
	#EM_MMDSP_PLUS
 160

	)

295 
	#EM_CYPRESS_M8C
 161

	)

296 
	#EM_R32C
 162

	)

297 
	#EM_TRIMEDIA
 163

	)

298 
	#EM_QDSP6
 164

	)

299 
	#EM_8051
 165

	)

300 
	#EM_STXP7X
 166

	)

301 
	#EM_NDS32
 167

	)

302 
	#EM_ECOG1X
 168

	)

303 
	#EM_MAXQ30
 169

	)

304 
	#EM_XIMO16
 170

	)

305 
	#EM_MANIK
 171

	)

306 
	#EM_CRAYNV2
 172

	)

307 
	#EM_RX
 173

	)

308 
	#EM_METAG
 174

	)

309 
	#EM_MCST_ELBRUS
 175

	)

310 
	#EM_ECOG16
 176

	)

311 
	#EM_CR16
 177

	)

312 
	#EM_ETPU
 178

	)

313 
	#EM_SLE9X
 179

	)

314 
	#EM_L10M
 180

	)

315 
	#EM_K10M
 181

	)

317 
	#EM_AARCH64
 183

	)

319 
	#EM_AVR32
 185

	)

320 
	#EM_STM8
 186

	)

321 
	#EM_TILE64
 187

	)

322 
	#EM_TILEPRO
 188

	)

323 
	#EM_MICROBLAZE
 189

	)

324 
	#EM_CUDA
 190

	)

325 
	#EM_TILEGX
 191

	)

326 
	#EM_CLOUDSHIELD
 192

	)

327 
	#EM_COREA_1ST
 193

	)

328 
	#EM_COREA_2ND
 194

	)

329 
	#EM_ARCV2
 195

	)

330 
	#EM_OPEN8
 196

	)

331 
	#EM_RL78
 197

	)

332 
	#EM_VIDEOCORE5
 198

	)

333 
	#EM_78KOR
 199

	)

334 
	#EM_56800EX
 200

	)

335 
	#EM_BA1
 201

	)

336 
	#EM_BA2
 202

	)

337 
	#EM_XCORE
 203

	)

338 
	#EM_MCHP_PIC
 204

	)

339 
	#EM_INTELGT
 205

	)

341 
	#EM_KM32
 210

	)

342 
	#EM_KMX32
 211

	)

343 
	#EM_EMX16
 212

	)

344 
	#EM_EMX8
 213

	)

345 
	#EM_KVARC
 214

	)

346 
	#EM_CDP
 215

	)

347 
	#EM_COGE
 216

	)

348 
	#EM_COOL
 217

	)

349 
	#EM_NORC
 218

	)

350 
	#EM_CSR_KALIMBA
 219

	)

351 
	#EM_Z80
 220

	)

352 
	#EM_VISIUM
 221

	)

353 
	#EM_FT32
 222

	)

354 
	#EM_MOXIE
 223

	)

355 
	#EM_AMDGPU
 224

	)

357 
	#EM_RISCV
 243

	)

359 
	#EM_BPF
 247

	)

360 
	#EM_CSKY
 252

	)

361 
	#EM_LOONGARCH
 258

	)

363 
	#EM_NUM
 259

	)

367 
	#EM_ARC_A5
 
EM_ARC_COMPACT


	)

373 
	#EM_ALPHA
 0x9026

	)

377 
	#EV_NONE
 0

	)

378 
	#EV_CURRENT
 1

	)

379 
	#EV_NUM
 2

	)

385 
Elf32_W‹d
 
	msh_«me
;

386 
Elf32_W‹d
 
	msh_ty≥
;

387 
Elf32_W‹d
 
	msh_Êags
;

388 
Elf32_Addr
 
	msh_addr
;

389 
Elf32_Off
 
	msh_off£t
;

390 
Elf32_W‹d
 
	msh_size
;

391 
Elf32_W‹d
 
	msh_lök
;

392 
Elf32_W‹d
 
	msh_öfo
;

393 
Elf32_W‹d
 
	msh_addølign
;

394 
Elf32_W‹d
 
	msh_ítsize
;

395 } 
	tElf32_Shdr
;

399 
Elf64_W‹d
 
	msh_«me
;

400 
Elf64_W‹d
 
	msh_ty≥
;

401 
Elf64_Xw‹d
 
	msh_Êags
;

402 
Elf64_Addr
 
	msh_addr
;

403 
Elf64_Off
 
	msh_off£t
;

404 
Elf64_Xw‹d
 
	msh_size
;

405 
Elf64_W‹d
 
	msh_lök
;

406 
Elf64_W‹d
 
	msh_öfo
;

407 
Elf64_Xw‹d
 
	msh_addølign
;

408 
Elf64_Xw‹d
 
	msh_ítsize
;

409 } 
	tElf64_Shdr
;

413 
	#SHN_UNDEF
 0

	)

414 
	#SHN_LORESERVE
 0xff00

	)

415 
	#SHN_LOPROC
 0xff00

	)

416 
	#SHN_BEFORE
 0xff00

	)

418 
	#SHN_AFTER
 0xff01

	)

420 
	#SHN_HIPROC
 0xff1‡

	)

421 
	#SHN_LOOS
 0xff20

	)

422 
	#SHN_HIOS
 0xff3‡

	)

423 
	#SHN_ABS
 0xfff1

	)

424 
	#SHN_COMMON
 0xfff2

	)

425 
	#SHN_XINDEX
 0xfff‡

	)

426 
	#SHN_HIRESERVE
 0xfff‡

	)

430 
	#SHT_NULL
 0

	)

431 
	#SHT_PROGBITS
 1

	)

432 
	#SHT_SYMTAB
 2

	)

433 
	#SHT_STRTAB
 3

	)

434 
	#SHT_RELA
 4

	)

435 
	#SHT_HASH
 5

	)

436 
	#SHT_DYNAMIC
 6

	)

437 
	#SHT_NOTE
 7

	)

438 
	#SHT_NOBITS
 8

	)

439 
	#SHT_REL
 9

	)

440 
	#SHT_SHLIB
 10

	)

441 
	#SHT_DYNSYM
 11

	)

442 
	#SHT_INIT_ARRAY
 14

	)

443 
	#SHT_FINI_ARRAY
 15

	)

444 
	#SHT_PREINIT_ARRAY
 16

	)

445 
	#SHT_GROUP
 17

	)

446 
	#SHT_SYMTAB_SHNDX
 18

	)

447 
	#SHT_RELR
 19

	)

448 
	#SHT_NUM
 20

	)

449 
	#SHT_LOOS
 0x60000000

	)

450 
	#SHT_GNU_ATTRIBUTES
 0x6ffffff5

	)

451 
	#SHT_GNU_HASH
 0x6ffffff6

	)

452 
	#SHT_GNU_LIBLIST
 0x6ffffff7

	)

453 
	#SHT_CHECKSUM
 0x6ffffff8

	)

454 
	#SHT_LOSUNW
 0x6fffffÁ

	)

455 
	#SHT_SUNW_move
 0x6fffffÁ

	)

456 
	#SHT_SUNW_COMDAT
 0x6ffffffb

	)

457 
	#SHT_SUNW_symöfo
 0x6ffffffc

	)

458 
	#SHT_GNU_vîdef
 0x6ffffffd

	)

459 
	#SHT_GNU_vî√ed
 0x6fffff„

	)

460 
	#SHT_GNU_vîsym
 0x6ffffff‡

	)

461 
	#SHT_HISUNW
 0x6ffffff‡

	)

462 
	#SHT_HIOS
 0x6ffffff‡

	)

463 
	#SHT_LOPROC
 0x70000000

	)

464 
	#SHT_HIPROC
 0x7ffffff‡

	)

465 
	#SHT_LOUSER
 0x80000000

	)

466 
	#SHT_HIUSER
 0x8ffffff‡

	)

470 
	#SHF_WRITE
 (1 << 0Ë

	)

471 
	#SHF_ALLOC
 (1 << 1Ë

	)

472 
	#SHF_EXECINSTR
 (1 << 2Ë

	)

473 
	#SHF_MERGE
 (1 << 4Ë

	)

474 
	#SHF_STRINGS
 (1 << 5Ë

	)

475 
	#SHF_INFO_LINK
 (1 << 6Ë

	)

476 
	#SHF_LINK_ORDER
 (1 << 7Ë

	)

477 
	#SHF_OS_NONCONFORMING
 (1 << 8Ë

	)

479 
	#SHF_GROUP
 (1 << 9Ë

	)

480 
	#SHF_TLS
 (1 << 10Ë

	)

481 
	#SHF_COMPRESSED
 (1 << 11Ë

	)

482 
	#SHF_MASKOS
 0x0ff00000

	)

483 
	#SHF_MASKPROC
 0xf0000000

	)

484 
	#SHF_GNU_RETAIN
 (1 << 21Ë

	)

485 
	#SHF_ORDERED
 (1 << 30Ë

	)

487 
	#SHF_EXCLUDE
 (1U << 31Ë

	)

494 
Elf32_W‹d
 
	mch_ty≥
;

495 
Elf32_W‹d
 
	mch_size
;

496 
Elf32_W‹d
 
	mch_addølign
;

497 } 
	tElf32_Chdr
;

501 
Elf64_W‹d
 
	mch_ty≥
;

502 
Elf64_W‹d
 
	mch_ª£rved
;

503 
Elf64_Xw‹d
 
	mch_size
;

504 
Elf64_Xw‹d
 
	mch_addølign
;

505 } 
	tElf64_Chdr
;

508 
	#ELFCOMPRESS_ZLIB
 1

	)

509 
	#ELFCOMPRESS_ZSTD
 2

	)

510 
	#ELFCOMPRESS_LOOS
 0x60000000

	)

511 
	#ELFCOMPRESS_HIOS
 0x6ffffff‡

	)

512 
	#ELFCOMPRESS_LOPROC
 0x70000000

	)

513 
	#ELFCOMPRESS_HIPROC
 0x7ffffff‡

	)

516 
	#GRP_COMDAT
 0x1

	)

522 
Elf32_W‹d
 
	m°_«me
;

523 
Elf32_Addr
 
	m°_vÆue
;

524 
Elf32_W‹d
 
	m°_size
;

525 
	m°_öfo
;

526 
	m°_Ÿhî
;

527 
Elf32_Se˘i⁄
 
	m°_shndx
;

528 } 
	tElf32_Sym
;

532 
Elf64_W‹d
 
	m°_«me
;

533 
	m°_öfo
;

534 
	m°_Ÿhî
;

535 
Elf64_Se˘i⁄
 
	m°_shndx
;

536 
Elf64_Addr
 
	m°_vÆue
;

537 
Elf64_Xw‹d
 
	m°_size
;

538 } 
	tElf64_Sym
;

545 
Elf32_HÆf
 
	msi_boundto
;

546 
Elf32_HÆf
 
	msi_Êags
;

547 } 
	tElf32_Symöfo
;

551 
Elf64_HÆf
 
	msi_boundto
;

552 
Elf64_HÆf
 
	msi_Êags
;

553 } 
	tElf64_Symöfo
;

556 
	#SYMINFO_BT_SELF
 0xfff‡

	)

557 
	#SYMINFO_BT_PARENT
 0xff„

	)

558 
	#SYMINFO_BT_LOWRESERVE
 0xff00

	)

561 
	#SYMINFO_FLG_DIRECT
 0x0001

	)

562 
	#SYMINFO_FLG_PASSTHRU
 0x0002

	)

563 
	#SYMINFO_FLG_COPY
 0x0004

	)

564 
	#SYMINFO_FLG_LAZYLOAD
 0x0008

	)

567 
	#SYMINFO_NONE
 0

	)

568 
	#SYMINFO_CURRENT
 1

	)

569 
	#SYMINFO_NUM
 2

	)

574 
	#ELF32_ST_BIND
(
vÆ
Ë(((Ë(vÆ)Ë>> 4)

	)

575 
	#ELF32_ST_TYPE
(
vÆ
Ë((vÆË& 0xf)

	)

576 
	#ELF32_ST_INFO
(
böd
, 
ty≥
Ë(((bödË<< 4Ë+ (—y≥Ë& 0xf))

	)

579 
	#ELF64_ST_BIND
(
vÆ
Ë
	`ELF32_ST_BIND
 (vÆ)

	)

580 
	#ELF64_ST_TYPE
(
vÆ
Ë
	`ELF32_ST_TYPE
 (vÆ)

	)

581 
	#ELF64_ST_INFO
(
böd
, 
ty≥
Ë
	`ELF32_ST_INFO
 ((böd), (ty≥))

	)

585 
	#STB_LOCAL
 0

	)

586 
	#STB_GLOBAL
 1

	)

587 
	#STB_WEAK
 2

	)

588 
	#STB_NUM
 3

	)

589 
	#STB_LOOS
 10

	)

590 
	#STB_GNU_UNIQUE
 10

	)

591 
	#STB_HIOS
 12

	)

592 
	#STB_LOPROC
 13

	)

593 
	#STB_HIPROC
 15

	)

597 
	#STT_NOTYPE
 0

	)

598 
	#STT_OBJECT
 1

	)

599 
	#STT_FUNC
 2

	)

600 
	#STT_SECTION
 3

	)

601 
	#STT_FILE
 4

	)

602 
	#STT_COMMON
 5

	)

603 
	#STT_TLS
 6

	)

604 
	#STT_NUM
 7

	)

605 
	#STT_LOOS
 10

	)

606 
	#STT_GNU_IFUNC
 10

	)

607 
	#STT_HIOS
 12

	)

608 
	#STT_LOPROC
 13

	)

609 
	#STT_HIPROC
 15

	)

616 
	#STN_UNDEF
 0

	)

621 
	#ELF32_ST_VISIBILITY
(
o
Ë((oË& 0x03)

	)

624 
	#ELF64_ST_VISIBILITY
(
o
Ë
	`ELF32_ST_VISIBILITY
 (o)

	)

627 
	#STV_DEFAULT
 0

	)

628 
	#STV_INTERNAL
 1

	)

629 
	#STV_HIDDEN
 2

	)

630 
	#STV_PROTECTED
 3

	)

637 
Elf32_Addr
 
	mr_off£t
;

638 
Elf32_W‹d
 
	mr_öfo
;

639 } 
	tElf32_Rñ
;

648 
Elf64_Addr
 
	mr_off£t
;

649 
Elf64_Xw‹d
 
	mr_öfo
;

650 } 
	tElf64_Rñ
;

656 
Elf32_Addr
 
	mr_off£t
;

657 
Elf32_W‹d
 
	mr_öfo
;

658 
Elf32_Sw‹d
 
	mr_addíd
;

659 } 
	tElf32_Rña
;

663 
Elf64_Addr
 
	mr_off£t
;

664 
Elf64_Xw‹d
 
	mr_öfo
;

665 
Elf64_Sxw‹d
 
	mr_addíd
;

666 } 
	tElf64_Rña
;

670 
Elf32_W‹d
 
	tElf32_Rñr
;

671 
Elf64_Xw‹d
 
	tElf64_Rñr
;

675 
	#ELF32_R_SYM
(
vÆ
Ë((vÆË>> 8)

	)

676 
	#ELF32_R_TYPE
(
vÆ
Ë((vÆË& 0xff)

	)

677 
	#ELF32_R_INFO
(
sym
, 
ty≥
Ë(((symË<< 8Ë+ (—y≥Ë& 0xff))

	)

679 
	#ELF64_R_SYM
(
i
Ë((iË>> 32)

	)

680 
	#ELF64_R_TYPE
(
i
Ë((iË& 0xffffffff)

	)

681 
	#ELF64_R_INFO
(
sym
,
ty≥
Ë((((
Elf64_Xw‹d
Ë(sym)Ë<< 32Ë+ (ty≥))

	)

687 
Elf32_W‹d
 
	mp_ty≥
;

688 
Elf32_Off
 
	mp_off£t
;

689 
Elf32_Addr
 
	mp_vaddr
;

690 
Elf32_Addr
 
	mp_∑ddr
;

691 
Elf32_W‹d
 
	mp_fûesz
;

692 
Elf32_W‹d
 
	mp_memsz
;

693 
Elf32_W‹d
 
	mp_Êags
;

694 
Elf32_W‹d
 
	mp_Æign
;

695 } 
	tElf32_Phdr
;

699 
Elf64_W‹d
 
	mp_ty≥
;

700 
Elf64_W‹d
 
	mp_Êags
;

701 
Elf64_Off
 
	mp_off£t
;

702 
Elf64_Addr
 
	mp_vaddr
;

703 
Elf64_Addr
 
	mp_∑ddr
;

704 
Elf64_Xw‹d
 
	mp_fûesz
;

705 
Elf64_Xw‹d
 
	mp_memsz
;

706 
Elf64_Xw‹d
 
	mp_Æign
;

707 } 
	tElf64_Phdr
;

713 
	#PN_XNUM
 0xffff

	)

717 
	#PT_NULL
 0

	)

718 
	#PT_LOAD
 1

	)

719 
	#PT_DYNAMIC
 2

	)

720 
	#PT_INTERP
 3

	)

721 
	#PT_NOTE
 4

	)

722 
	#PT_SHLIB
 5

	)

723 
	#PT_PHDR
 6

	)

724 
	#PT_TLS
 7

	)

725 
	#PT_NUM
 8

	)

726 
	#PT_LOOS
 0x60000000

	)

727 
	#PT_GNU_EH_FRAME
 0x6474e550

	)

728 
	#PT_GNU_STACK
 0x6474e551

	)

729 
	#PT_GNU_RELRO
 0x6474e552

	)

730 
	#PT_GNU_PROPERTY
 0x6474e553

	)

731 
	#PT_GNU_SFRAME
 0x6474e554

	)

732 
	#PT_LOSUNW
 0x6fffffÁ

	)

733 
	#PT_SUNWBSS
 0x6fffffÁ

	)

734 
	#PT_SUNWSTACK
 0x6ffffffb

	)

735 
	#PT_HISUNW
 0x6fffffff

	)

736 
	#PT_HIOS
 0x6ffffff‡

	)

737 
	#PT_LOPROC
 0x70000000

	)

738 
	#PT_HIPROC
 0x7ffffff‡

	)

742 
	#PF_X
 (1 << 0Ë

	)

743 
	#PF_W
 (1 << 1Ë

	)

744 
	#PF_R
 (1 << 2Ë

	)

745 
	#PF_MASKOS
 0x0ff00000

	)

746 
	#PF_MASKPROC
 0xf0000000

	)

750 
	#NT_PRSTATUS
 1

	)

751 
	#NT_PRFPREG
 2

	)

753 
	#NT_FPREGSET
 2

	)

754 
	#NT_PRPSINFO
 3

	)

755 
	#NT_PRXREG
 4

	)

756 
	#NT_TASKSTRUCT
 4

	)

757 
	#NT_PLATFORM
 5

	)

758 
	#NT_AUXV
 6

	)

759 
	#NT_GWINDOWS
 7

	)

760 
	#NT_ASRS
 8

	)

761 
	#NT_PSTATUS
 10

	)

762 
	#NT_PSINFO
 13

	)

763 
	#NT_PRCRED
 14

	)

764 
	#NT_UTSNAME
 15

	)

765 
	#NT_LWPSTATUS
 16

	)

766 
	#NT_LWPSINFO
 17

	)

767 
	#NT_PRFPXREG
 20

	)

768 
	#NT_SIGINFO
 0x53494749

	)

770 
	#NT_FILE
 0x46494c45

	)

772 
	#NT_PRXFPREG
 0x46e62b7‡

	)

773 
	#NT_PPC_VMX
 0x100

	)

774 
	#NT_PPC_SPE
 0x101

	)

775 
	#NT_PPC_VSX
 0x102

	)

776 
	#NT_PPC_TAR
 0x103

	)

777 
	#NT_PPC_PPR
 0x104

	)

778 
	#NT_PPC_DSCR
 0x105

	)

779 
	#NT_PPC_EBB
 0x106

	)

780 
	#NT_PPC_PMU
 0x107

	)

781 
	#NT_PPC_TM_CGPR
 0x108

	)

782 
	#NT_PPC_TM_CFPR
 0x109

	)

783 
	#NT_PPC_TM_CVMX
 0x10®

	)

784 
	#NT_PPC_TM_CVSX
 0x10b

	)

785 
	#NT_PPC_TM_SPR
 0x10¯

	)

786 
	#NT_PPC_TM_CTAR
 0x10d

	)

788 
	#NT_PPC_TM_CPPR
 0x10ê

	)

790 
	#NT_PPC_TM_CDSCR
 0x10‡

	)

792 
	#NT_PPC_PKEY
 0x110

	)

794 
	#NT_386_TLS
 0x200

	)

795 
	#NT_386_IOPERM
 0x201

	)

796 
	#NT_X86_XSTATE
 0x202

	)

797 
	#NT_S390_HIGH_GPRS
 0x300

	)

798 
	#NT_S390_TIMER
 0x301

	)

799 
	#NT_S390_TODCMP
 0x302

	)

800 
	#NT_S390_TODPREG
 0x303

	)

801 
	#NT_S390_CTRS
 0x304

	)

802 
	#NT_S390_PREFIX
 0x305

	)

803 
	#NT_S390_LAST_BREAK
 0x306

	)

804 
	#NT_S390_SYSTEM_CALL
 0x307

	)

805 
	#NT_S390_TDB
 0x308

	)

806 
	#NT_S390_VXRS_LOW
 0x309

	)

808 
	#NT_S390_VXRS_HIGH
 0x30®

	)

809 
	#NT_S390_GS_CB
 0x30b

	)

810 
	#NT_S390_GS_BC
 0x30¯

	)

812 
	#NT_S390_RI_CB
 0x30d

	)

813 
	#NT_S390_PV_CPU_DATA
 0x30ê

	)

814 
	#NT_ARM_VFP
 0x400

	)

815 
	#NT_ARM_TLS
 0x401

	)

816 
	#NT_ARM_HW_BREAK
 0x402

	)

817 
	#NT_ARM_HW_WATCH
 0x403

	)

818 
	#NT_ARM_SYSTEM_CALL
 0x404

	)

819 
	#NT_ARM_SVE
 0x405

	)

821 
	#NT_ARM_PAC_MASK
 0x406

	)

823 
	#NT_ARM_PACA_KEYS
 0x407

	)

825 
	#NT_ARM_PACG_KEYS
 0x408

	)

827 
	#NT_ARM_TAGGED_ADDR_CTRL
 0x409

	)

829 
	#NT_ARM_PAC_ENABLED_KEYS
 0x40®

	)

831 
	#NT_VMCOREDD
 0x700

	)

832 
	#NT_MIPS_DSP
 0x800

	)

833 
	#NT_MIPS_FP_MODE
 0x801

	)

834 
	#NT_MIPS_MSA
 0x802

	)

835 
	#NT_LOONGARCH_CPUCFG
 0xa00

	)

836 
	#NT_LOONGARCH_CSR
 0xa01

	)

838 
	#NT_LOONGARCH_LSX
 0xa02

	)

840 
	#NT_LOONGARCH_LASX
 0xa03

	)

842 
	#NT_LOONGARCH_LBT
 0xa04

	)

847 
	#NT_VERSION
 1

	)

854 
Elf32_Sw‹d
 
	md_èg
;

857 
Elf32_W‹d
 
	md_vÆ
;

858 
Elf32_Addr
 
	md_±r
;

859 } 
	md_un
;

860 } 
	tElf32_Dyn
;

864 
Elf64_Sxw‹d
 
	md_èg
;

867 
Elf64_Xw‹d
 
	md_vÆ
;

868 
Elf64_Addr
 
	md_±r
;

869 } 
	md_un
;

870 } 
	tElf64_Dyn
;

874 
	#DT_NULL
 0

	)

875 
	#DT_NEEDED
 1

	)

876 
	#DT_PLTRELSZ
 2

	)

877 
	#DT_PLTGOT
 3

	)

878 
	#DT_HASH
 4

	)

879 
	#DT_STRTAB
 5

	)

880 
	#DT_SYMTAB
 6

	)

881 
	#DT_RELA
 7

	)

882 
	#DT_RELASZ
 8

	)

883 
	#DT_RELAENT
 9

	)

884 
	#DT_STRSZ
 10

	)

885 
	#DT_SYMENT
 11

	)

886 
	#DT_INIT
 12

	)

887 
	#DT_FINI
 13

	)

888 
	#DT_SONAME
 14

	)

889 
	#DT_RPATH
 15

	)

890 
	#DT_SYMBOLIC
 16

	)

891 
	#DT_REL
 17

	)

892 
	#DT_RELSZ
 18

	)

893 
	#DT_RELENT
 19

	)

894 
	#DT_PLTREL
 20

	)

895 
	#DT_DEBUG
 21

	)

896 
	#DT_TEXTREL
 22

	)

897 
	#DT_JMPREL
 23

	)

898 
	#DT_BIND_NOW
 24

	)

899 
	#DT_INIT_ARRAY
 25

	)

900 
	#DT_FINI_ARRAY
 26

	)

901 
	#DT_INIT_ARRAYSZ
 27

	)

902 
	#DT_FINI_ARRAYSZ
 28

	)

903 
	#DT_RUNPATH
 29

	)

904 
	#DT_FLAGS
 30

	)

905 
	#DT_ENCODING
 32

	)

906 
	#DT_PREINIT_ARRAY
 32

	)

907 
	#DT_PREINIT_ARRAYSZ
 33

	)

908 
	#DT_SYMTAB_SHNDX
 34

	)

909 
	#DT_RELRSZ
 35

	)

910 
	#DT_RELR
 36

	)

911 
	#DT_RELRENT
 37

	)

912 
	#DT_NUM
 38

	)

913 
	#DT_LOOS
 0x6000000d

	)

914 
	#DT_HIOS
 0x6ffff000

	)

915 
	#DT_LOPROC
 0x70000000

	)

916 
	#DT_HIPROC
 0x7ffffff‡

	)

917 
	#DT_PROCNUM
 
DT_MIPS_NUM


	)

922 
	#DT_VALRNGLO
 0x6ffffd00

	)

923 
	#DT_GNU_PRELINKED
 0x6ffffdf5

	)

924 
	#DT_GNU_CONFLICTSZ
 0x6ffffdf6

	)

925 
	#DT_GNU_LIBLISTSZ
 0x6ffffdf7

	)

926 
	#DT_CHECKSUM
 0x6ffffdf8

	)

927 
	#DT_PLTPADSZ
 0x6ffffdf9

	)

928 
	#DT_MOVEENT
 0x6ffffdÁ

	)

929 
	#DT_MOVESZ
 0x6ffffdfb

	)

930 
	#DT_FEATURE_1
 0x6ffffdf¯

	)

931 
	#DT_POSFLAG_1
 0x6ffffdfd

	)

933 
	#DT_SYMINSZ
 0x6ffffd„

	)

934 
	#DT_SYMINENT
 0x6ffffdf‡

	)

935 
	#DT_VALRNGHI
 0x6ffffdff

	)

936 
	#DT_VALTAGIDX
(
èg
Ë(
DT_VALRNGHI
 - (èg)Ë

	)

937 
	#DT_VALNUM
 12

	)

944 
	#DT_ADDRRNGLO
 0x6fff„00

	)

945 
	#DT_GNU_HASH
 0x6fff„f5

	)

946 
	#DT_TLSDESC_PLT
 0x6fff„f6

	)

947 
	#DT_TLSDESC_GOT
 0x6fff„f7

	)

948 
	#DT_GNU_CONFLICT
 0x6fff„f8

	)

949 
	#DT_GNU_LIBLIST
 0x6fff„f9

	)

950 
	#DT_CONFIG
 0x6fff„Á

	)

951 
	#DT_DEPAUDIT
 0x6fff„fb

	)

952 
	#DT_AUDIT
 0x6fff„f¯

	)

953 
	#DT_PLTPAD
 0x6fff„fd

	)

954 
	#DT_MOVETAB
 0x6fff„„

	)

955 
	#DT_SYMINFO
 0x6fff„f‡

	)

956 
	#DT_ADDRRNGHI
 0x6fff„ff

	)

957 
	#DT_ADDRTAGIDX
(
èg
Ë(
DT_ADDRRNGHI
 - (èg)Ë

	)

958 
	#DT_ADDRNUM
 11

	)

962 
	#DT_VERSYM
 0x6ffffff0

	)

964 
	#DT_RELACOUNT
 0x6ffffff9

	)

965 
	#DT_RELCOUNT
 0x6fffffÁ

	)

968 
	#DT_FLAGS_1
 0x6ffffffb

	)

969 
	#DT_VERDEF
 0x6ffffff¯

	)

971 
	#DT_VERDEFNUM
 0x6ffffffd

	)

972 
	#DT_VERNEED
 0x6fffff„

	)

974 
	#DT_VERNEEDNUM
 0x6ffffff‡

	)

975 
	#DT_VERSIONTAGIDX
(
èg
Ë(
DT_VERNEEDNUM
 - (èg)Ë

	)

976 
	#DT_VERSIONTAGNUM
 16

	)

980 
	#DT_AUXILIARY
 0x7ffffffd

	)

981 
	#DT_FILTER
 0x7ffffff‡

	)

982 
	#DT_EXTRATAGIDX
(
èg
Ë((
Elf32_W‹d
)-((
Elf32_Sw‹d
Ë—agË<<1>>1)-1)

	)

983 
	#DT_EXTRANUM
 3

	)

986 
	#DF_ORIGIN
 0x00000001

	)

987 
	#DF_SYMBOLIC
 0x00000002

	)

988 
	#DF_TEXTREL
 0x00000004

	)

989 
	#DF_BIND_NOW
 0x00000008

	)

990 
	#DF_STATIC_TLS
 0x00000010

	)

994 
	#DF_1_NOW
 0x00000001

	)

995 
	#DF_1_GLOBAL
 0x00000002

	)

996 
	#DF_1_GROUP
 0x00000004

	)

997 
	#DF_1_NODELETE
 0x00000008

	)

998 
	#DF_1_LOADFLTR
 0x00000010

	)

999 
	#DF_1_INITFIRST
 0x00000020

	)

1000 
	#DF_1_NOOPEN
 0x00000040

	)

1001 
	#DF_1_ORIGIN
 0x00000080

	)

1002 
	#DF_1_DIRECT
 0x00000100

	)

1003 
	#DF_1_TRANS
 0x00000200

	)

1004 
	#DF_1_INTERPOSE
 0x00000400

	)

1005 
	#DF_1_NODEFLIB
 0x00000800

	)

1006 
	#DF_1_NODUMP
 0x00001000

	)

1007 
	#DF_1_CONFALT
 0x00002000

	)

1008 
	#DF_1_ENDFILTEE
 0x00004000

	)

1009 
	#DF_1_DISPRELDNE
 0x00008000

	)

1010 
	#DF_1_DISPRELPND
 0x00010000

	)

1011 
	#DF_1_NODIRECT
 0x00020000

	)

1012 
	#DF_1_IGNMULDEF
 0x00040000

	)

1013 
	#DF_1_NOKSYMS
 0x00080000

	)

1014 
	#DF_1_NOHDR
 0x00100000

	)

1015 
	#DF_1_EDITED
 0x00200000

	)

1016 
	#DF_1_NORELOC
 0x00400000

	)

1017 
	#DF_1_SYMINTPOSE
 0x00800000

	)

1018 
	#DF_1_GLOBAUDIT
 0x01000000

	)

1019 
	#DF_1_SINGLETON
 0x02000000

	)

1020 
	#DF_1_STUB
 0x04000000

	)

1021 
	#DF_1_PIE
 0x08000000

	)

1022 
	#DF_1_KMOD
 0x10000000

	)

1023 
	#DF_1_WEAKFILTER
 0x20000000

	)

1024 
	#DF_1_NOCOMMON
 0x40000000

	)

1027 
	#DTF_1_PARINIT
 0x00000001

	)

1028 
	#DTF_1_CONFEXP
 0x00000002

	)

1031 
	#DF_P1_LAZYLOAD
 0x00000001

	)

1032 
	#DF_P1_GROUPPERM
 0x00000002

	)

1039 
Elf32_HÆf
 
	mvd_vîsi⁄
;

1040 
Elf32_HÆf
 
	mvd_Êags
;

1041 
Elf32_HÆf
 
	mvd_ndx
;

1042 
Elf32_HÆf
 
	mvd_˙t
;

1043 
Elf32_W‹d
 
	mvd_hash
;

1044 
Elf32_W‹d
 
	mvd_aux
;

1045 
Elf32_W‹d
 
	mvd_√xt
;

1047 } 
	tElf32_Vîdef
;

1051 
Elf64_HÆf
 
	mvd_vîsi⁄
;

1052 
Elf64_HÆf
 
	mvd_Êags
;

1053 
Elf64_HÆf
 
	mvd_ndx
;

1054 
Elf64_HÆf
 
	mvd_˙t
;

1055 
Elf64_W‹d
 
	mvd_hash
;

1056 
Elf64_W‹d
 
	mvd_aux
;

1057 
Elf64_W‹d
 
	mvd_√xt
;

1059 } 
	tElf64_Vîdef
;

1063 
	#VER_DEF_NONE
 0

	)

1064 
	#VER_DEF_CURRENT
 1

	)

1065 
	#VER_DEF_NUM
 2

	)

1068 
	#VER_FLG_BASE
 0x1

	)

1069 
	#VER_FLG_WEAK
 0x2

	)

1073 
	#VER_NDX_LOCAL
 0

	)

1074 
	#VER_NDX_GLOBAL
 1

	)

1075 
	#VER_NDX_LORESERVE
 0xff00

	)

1076 
	#VER_NDX_ELIMINATE
 0xff01

	)

1082 
Elf32_W‹d
 
	mvda_«me
;

1083 
Elf32_W‹d
 
	mvda_√xt
;

1085 } 
	tElf32_Vîdaux
;

1089 
Elf64_W‹d
 
	mvda_«me
;

1090 
Elf64_W‹d
 
	mvda_√xt
;

1092 } 
	tElf64_Vîdaux
;

1099 
Elf32_HÆf
 
	mvn_vîsi⁄
;

1100 
Elf32_HÆf
 
	mvn_˙t
;

1101 
Elf32_W‹d
 
	mvn_fûe
;

1103 
Elf32_W‹d
 
	mvn_aux
;

1104 
Elf32_W‹d
 
	mvn_√xt
;

1106 } 
	tElf32_Vî√ed
;

1110 
Elf64_HÆf
 
	mvn_vîsi⁄
;

1111 
Elf64_HÆf
 
	mvn_˙t
;

1112 
Elf64_W‹d
 
	mvn_fûe
;

1114 
Elf64_W‹d
 
	mvn_aux
;

1115 
Elf64_W‹d
 
	mvn_√xt
;

1117 } 
	tElf64_Vî√ed
;

1121 
	#VER_NEED_NONE
 0

	)

1122 
	#VER_NEED_CURRENT
 1

	)

1123 
	#VER_NEED_NUM
 2

	)

1129 
Elf32_W‹d
 
	mv«_hash
;

1130 
Elf32_HÆf
 
	mv«_Êags
;

1131 
Elf32_HÆf
 
	mv«_Ÿhî
;

1132 
Elf32_W‹d
 
	mv«_«me
;

1133 
Elf32_W‹d
 
	mv«_√xt
;

1135 } 
	tElf32_Vî«ux
;

1139 
Elf64_W‹d
 
	mv«_hash
;

1140 
Elf64_HÆf
 
	mv«_Êags
;

1141 
Elf64_HÆf
 
	mv«_Ÿhî
;

1142 
Elf64_W‹d
 
	mv«_«me
;

1143 
Elf64_W‹d
 
	mv«_√xt
;

1145 } 
	tElf64_Vî«ux
;

1159 
uöt32_t
 
	ma_ty≥
;

1162 
uöt32_t
 
	ma_vÆ
;

1166 } 
	ma_un
;

1167 } 
	tElf32_auxv_t
;

1171 
uöt64_t
 
	ma_ty≥
;

1174 
uöt64_t
 
	ma_vÆ
;

1178 } 
	ma_un
;

1179 } 
	tElf64_auxv_t
;

1183 
	#AT_NULL
 0

	)

1184 
	#AT_IGNORE
 1

	)

1185 
	#AT_EXECFD
 2

	)

1186 
	#AT_PHDR
 3

	)

1187 
	#AT_PHENT
 4

	)

1188 
	#AT_PHNUM
 5

	)

1189 
	#AT_PAGESZ
 6

	)

1190 
	#AT_BASE
 7

	)

1191 
	#AT_FLAGS
 8

	)

1192 
	#AT_ENTRY
 9

	)

1193 
	#AT_NOTELF
 10

	)

1194 
	#AT_UID
 11

	)

1195 
	#AT_EUID
 12

	)

1196 
	#AT_GID
 13

	)

1197 
	#AT_EGID
 14

	)

1198 
	#AT_CLKTCK
 17

	)

1201 
	#AT_PLATFORM
 15

	)

1202 
	#AT_HWCAP
 16

	)

1207 
	#AT_FPUCW
 18

	)

1210 
	#AT_DCACHEBSIZE
 19

	)

1211 
	#AT_ICACHEBSIZE
 20

	)

1212 
	#AT_UCACHEBSIZE
 21

	)

1216 
	#AT_IGNOREPPC
 22

	)

1218 
	#AT_SECURE
 23

	)

1220 
	#AT_BASE_PLATFORM
 24

	)

1222 
	#AT_RANDOM
 25

	)

1224 
	#AT_HWCAP2
 26

	)

1227 
	#AT_RSEQ_FEATURE_SIZE
 27

	)

1228 
	#AT_RSEQ_ALIGN
 28

	)

1230 
	#AT_EXECFN
 31

	)

1234 
	#AT_SYSINFO
 32

	)

1235 
	#AT_SYSINFO_EHDR
 33

	)

1239 
	#AT_L1I_CACHESHAPE
 34

	)

1240 
	#AT_L1D_CACHESHAPE
 35

	)

1241 
	#AT_L2_CACHESHAPE
 36

	)

1242 
	#AT_L3_CACHESHAPE
 37

	)

1247 
	#AT_L1I_CACHESIZE
 40

	)

1248 
	#AT_L1I_CACHEGEOMETRY
 41

	)

1249 
	#AT_L1D_CACHESIZE
 42

	)

1250 
	#AT_L1D_CACHEGEOMETRY
 43

	)

1251 
	#AT_L2_CACHESIZE
 44

	)

1252 
	#AT_L2_CACHEGEOMETRY
 45

	)

1253 
	#AT_L3_CACHESIZE
 46

	)

1254 
	#AT_L3_CACHEGEOMETRY
 47

	)

1256 
	#AT_MINSIGSTKSZ
 51

	)

1263 
Elf32_W‹d
 
	mn_«mesz
;

1264 
Elf32_W‹d
 
	mn_descsz
;

1265 
Elf32_W‹d
 
	mn_ty≥
;

1266 } 
	tElf32_Nhdr
;

1270 
Elf64_W‹d
 
	mn_«mesz
;

1271 
Elf64_W‹d
 
	mn_descsz
;

1272 
Elf64_W‹d
 
	mn_ty≥
;

1273 } 
	tElf64_Nhdr
;

1278 
	#ELF_NOTE_SOLARIS
 "SUNW Sﬁ¨is"

	)

1281 
	#ELF_NOTE_GNU
 "GNU"

	)

1284 
	#ELF_NOTE_FDO
 "FDO"

	)

1289 
	#ELF_NOTE_PAGESIZE_HINT
 1

	)

1300 
	#NT_GNU_ABI_TAG
 1

	)

1301 
	#ELF_NOTE_ABI
 
NT_GNU_ABI_TAG


	)

1305 
	#ELF_NOTE_OS_LINUX
 0

	)

1306 
	#ELF_NOTE_OS_GNU
 1

	)

1307 
	#ELF_NOTE_OS_SOLARIS2
 2

	)

1308 
	#ELF_NOTE_OS_FREEBSD
 3

	)

1316 
	#NT_GNU_HWCAP
 2

	)

1320 
	#NT_GNU_BUILD_ID
 3

	)

1323 
	#NT_GNU_GOLD_VERSION
 4

	)

1326 
	#NT_GNU_PROPERTY_TYPE_0
 5

	)

1330 
	#NT_FDO_PACKAGING_METADATA
 0xˇ„1a7e

	)

1333 
	#NOTE_GNU_PROPERTY_SECTION_NAME
 ".nŸe.gnu.¥›îty"

	)

1338 
	#GNU_PROPERTY_STACK_SIZE
 1

	)

1340 
	#GNU_PROPERTY_NO_COPY_ON_PROTECTED
 2

	)

1344 
	#GNU_PROPERTY_UINT32_AND_LO
 0xb0000000

	)

1345 
	#GNU_PROPERTY_UINT32_AND_HI
 0xb0007fff

	)

1349 
	#GNU_PROPERTY_UINT32_OR_LO
 0xb0008000

	)

1350 
	#GNU_PROPERTY_UINT32_OR_HI
 0xb000ffff

	)

1353 
	#GNU_PROPERTY_1_NEEDED
 
GNU_PROPERTY_UINT32_OR_LO


	)

1357 
	#GNU_PROPERTY_1_NEEDED_INDIRECT_EXTERN_ACCESS
 (1U << 0)

	)

1360 
	#GNU_PROPERTY_LOPROC
 0xc0000000

	)

1362 
	#GNU_PROPERTY_HIPROC
 0xdfffffff

	)

1364 
	#GNU_PROPERTY_LOUSER
 0xe0000000

	)

1366 
	#GNU_PROPERTY_HIUSER
 0xffffffff

	)

1369 
	#GNU_PROPERTY_AARCH64_FEATURE_1_AND
 0xc0000000

	)

1371 
	#GNU_PROPERTY_AARCH64_FEATURE_1_BTI
 (1U << 0)

	)

1372 
	#GNU_PROPERTY_AARCH64_FEATURE_1_PAC
 (1U << 1)

	)

1376 
	#GNU_PROPERTY_X86_ISA_1_USED
 0xc0010002

	)

1379 
	#GNU_PROPERTY_X86_ISA_1_NEEDED
 0xc0008002

	)

1381 
	#GNU_PROPERTY_X86_FEATURE_1_AND
 0xc0000002

	)

1385 
	#GNU_PROPERTY_X86_ISA_1_BASELINE
 (1U << 0)

	)

1389 
	#GNU_PROPERTY_X86_ISA_1_V2
 (1U << 1)

	)

1392 
	#GNU_PROPERTY_X86_ISA_1_V3
 (1U << 2)

	)

1395 
	#GNU_PROPERTY_X86_ISA_1_V4
 (1U << 3)

	)

1399 
	#GNU_PROPERTY_X86_FEATURE_1_IBT
 (1U << 0)

	)

1402 
	#GNU_PROPERTY_X86_FEATURE_1_SHSTK
 (1U << 1)

	)

1407 
Elf32_Xw‹d
 
	mm_vÆue
;

1408 
Elf32_W‹d
 
	mm_öfo
;

1409 
Elf32_W‹d
 
	mm_poff£t
;

1410 
Elf32_HÆf
 
	mm_ª≥©
;

1411 
Elf32_HÆf
 
	mm_°ride
;

1412 } 
	tElf32_Move
;

1416 
Elf64_Xw‹d
 
	mm_vÆue
;

1417 
Elf64_Xw‹d
 
	mm_öfo
;

1418 
Elf64_Xw‹d
 
	mm_poff£t
;

1419 
Elf64_HÆf
 
	mm_ª≥©
;

1420 
Elf64_HÆf
 
	mm_°ride
;

1421 } 
	tElf64_Move
;

1424 
	#ELF32_M_SYM
(
öfo
Ë((öfoË>> 8)

	)

1425 
	#ELF32_M_SIZE
(
öfo
Ë((Ë(öfo))

	)

1426 
	#ELF32_M_INFO
(
sym
, 
size
Ë(((symË<< 8Ë+ (Ë(size))

	)

1428 
	#ELF64_M_SYM
(
öfo
Ë
	`ELF32_M_SYM
 (öfo)

	)

1429 
	#ELF64_M_SIZE
(
öfo
Ë
	`ELF32_M_SIZE
 (öfo)

	)

1430 
	#ELF64_M_INFO
(
sym
, 
size
Ë
	`ELF32_M_INFO
 (sym, size)

	)

1436 
	#EF_CPU32
 0x00810000

	)

1440 
	#R_68K_NONE
 0

	)

1441 
	#R_68K_32
 1

	)

1442 
	#R_68K_16
 2

	)

1443 
	#R_68K_8
 3

	)

1444 
	#R_68K_PC32
 4

	)

1445 
	#R_68K_PC16
 5

	)

1446 
	#R_68K_PC8
 6

	)

1447 
	#R_68K_GOT32
 7

	)

1448 
	#R_68K_GOT16
 8

	)

1449 
	#R_68K_GOT8
 9

	)

1450 
	#R_68K_GOT32O
 10

	)

1451 
	#R_68K_GOT16O
 11

	)

1452 
	#R_68K_GOT8O
 12

	)

1453 
	#R_68K_PLT32
 13

	)

1454 
	#R_68K_PLT16
 14

	)

1455 
	#R_68K_PLT8
 15

	)

1456 
	#R_68K_PLT32O
 16

	)

1457 
	#R_68K_PLT16O
 17

	)

1458 
	#R_68K_PLT8O
 18

	)

1459 
	#R_68K_COPY
 19

	)

1460 
	#R_68K_GLOB_DAT
 20

	)

1461 
	#R_68K_JMP_SLOT
 21

	)

1462 
	#R_68K_RELATIVE
 22

	)

1463 
	#R_68K_TLS_GD32
 25

	)

1464 
	#R_68K_TLS_GD16
 26

	)

1465 
	#R_68K_TLS_GD8
 27

	)

1466 
	#R_68K_TLS_LDM32
 28

	)

1467 
	#R_68K_TLS_LDM16
 29

	)

1468 
	#R_68K_TLS_LDM8
 30

	)

1469 
	#R_68K_TLS_LDO32
 31

	)

1470 
	#R_68K_TLS_LDO16
 32

	)

1471 
	#R_68K_TLS_LDO8
 33

	)

1472 
	#R_68K_TLS_IE32
 34

	)

1473 
	#R_68K_TLS_IE16
 35

	)

1474 
	#R_68K_TLS_IE8
 36

	)

1475 
	#R_68K_TLS_LE32
 37

	)

1477 
	#R_68K_TLS_LE16
 38

	)

1479 
	#R_68K_TLS_LE8
 39

	)

1481 
	#R_68K_TLS_DTPMOD32
 40

	)

1482 
	#R_68K_TLS_DTPREL32
 41

	)

1483 
	#R_68K_TLS_TPREL32
 42

	)

1485 
	#R_68K_NUM
 43

	)

1491 
	#R_386_NONE
 0

	)

1492 
	#R_386_32
 1

	)

1493 
	#R_386_PC32
 2

	)

1494 
	#R_386_GOT32
 3

	)

1495 
	#R_386_PLT32
 4

	)

1496 
	#R_386_COPY
 5

	)

1497 
	#R_386_GLOB_DAT
 6

	)

1498 
	#R_386_JMP_SLOT
 7

	)

1499 
	#R_386_RELATIVE
 8

	)

1500 
	#R_386_GOTOFF
 9

	)

1501 
	#R_386_GOTPC
 10

	)

1502 
	#R_386_32PLT
 11

	)

1503 
	#R_386_TLS_TPOFF
 14

	)

1504 
	#R_386_TLS_IE
 15

	)

1506 
	#R_386_TLS_GOTIE
 16

	)

1508 
	#R_386_TLS_LE
 17

	)

1510 
	#R_386_TLS_GD
 18

	)

1512 
	#R_386_TLS_LDM
 19

	)

1515 
	#R_386_16
 20

	)

1516 
	#R_386_PC16
 21

	)

1517 
	#R_386_8
 22

	)

1518 
	#R_386_PC8
 23

	)

1519 
	#R_386_TLS_GD_32
 24

	)

1521 
	#R_386_TLS_GD_PUSH
 25

	)

1522 
	#R_386_TLS_GD_CALL
 26

	)

1524 
	#R_386_TLS_GD_POP
 27

	)

1525 
	#R_386_TLS_LDM_32
 28

	)

1527 
	#R_386_TLS_LDM_PUSH
 29

	)

1528 
	#R_386_TLS_LDM_CALL
 30

	)

1530 
	#R_386_TLS_LDM_POP
 31

	)

1531 
	#R_386_TLS_LDO_32
 32

	)

1532 
	#R_386_TLS_IE_32
 33

	)

1534 
	#R_386_TLS_LE_32
 34

	)

1536 
	#R_386_TLS_DTPMOD32
 35

	)

1537 
	#R_386_TLS_DTPOFF32
 36

	)

1538 
	#R_386_TLS_TPOFF32
 37

	)

1539 
	#R_386_SIZE32
 38

	)

1540 
	#R_386_TLS_GOTDESC
 39

	)

1541 
	#R_386_TLS_DESC_CALL
 40

	)

1544 
	#R_386_TLS_DESC
 41

	)

1548 
	#R_386_IRELATIVE
 42

	)

1549 
	#R_386_GOT32X
 43

	)

1552 
	#R_386_NUM
 44

	)

1558 
	#STT_SPARC_REGISTER
 13

	)

1562 
	#EF_SPARCV9_MM
 3

	)

1563 
	#EF_SPARCV9_TSO
 0

	)

1564 
	#EF_SPARCV9_PSO
 1

	)

1565 
	#EF_SPARCV9_RMO
 2

	)

1566 
	#EF_SPARC_LEDATA
 0x800000

	)

1567 
	#EF_SPARC_EXT_MASK
 0xFFFF00

	)

1568 
	#EF_SPARC_32PLUS
 0x000100

	)

1569 
	#EF_SPARC_SUN_US1
 0x000200

	)

1570 
	#EF_SPARC_HAL_R1
 0x000400

	)

1571 
	#EF_SPARC_SUN_US3
 0x000800

	)

1575 
	#R_SPARC_NONE
 0

	)

1576 
	#R_SPARC_8
 1

	)

1577 
	#R_SPARC_16
 2

	)

1578 
	#R_SPARC_32
 3

	)

1579 
	#R_SPARC_DISP8
 4

	)

1580 
	#R_SPARC_DISP16
 5

	)

1581 
	#R_SPARC_DISP32
 6

	)

1582 
	#R_SPARC_WDISP30
 7

	)

1583 
	#R_SPARC_WDISP22
 8

	)

1584 
	#R_SPARC_HI22
 9

	)

1585 
	#R_SPARC_22
 10

	)

1586 
	#R_SPARC_13
 11

	)

1587 
	#R_SPARC_LO10
 12

	)

1588 
	#R_SPARC_GOT10
 13

	)

1589 
	#R_SPARC_GOT13
 14

	)

1590 
	#R_SPARC_GOT22
 15

	)

1591 
	#R_SPARC_PC10
 16

	)

1592 
	#R_SPARC_PC22
 17

	)

1593 
	#R_SPARC_WPLT30
 18

	)

1594 
	#R_SPARC_COPY
 19

	)

1595 
	#R_SPARC_GLOB_DAT
 20

	)

1596 
	#R_SPARC_JMP_SLOT
 21

	)

1597 
	#R_SPARC_RELATIVE
 22

	)

1598 
	#R_SPARC_UA32
 23

	)

1602 
	#R_SPARC_PLT32
 24

	)

1603 
	#R_SPARC_HIPLT22
 25

	)

1604 
	#R_SPARC_LOPLT10
 26

	)

1605 
	#R_SPARC_PCPLT32
 27

	)

1606 
	#R_SPARC_PCPLT22
 28

	)

1607 
	#R_SPARC_PCPLT10
 29

	)

1608 
	#R_SPARC_10
 30

	)

1609 
	#R_SPARC_11
 31

	)

1610 
	#R_SPARC_64
 32

	)

1611 
	#R_SPARC_OLO10
 33

	)

1612 
	#R_SPARC_HH22
 34

	)

1613 
	#R_SPARC_HM10
 35

	)

1614 
	#R_SPARC_LM22
 36

	)

1615 
	#R_SPARC_PC_HH22
 37

	)

1616 
	#R_SPARC_PC_HM10
 38

	)

1617 
	#R_SPARC_PC_LM22
 39

	)

1618 
	#R_SPARC_WDISP16
 40

	)

1619 
	#R_SPARC_WDISP19
 41

	)

1620 
	#R_SPARC_GLOB_JMP
 42

	)

1621 
	#R_SPARC_7
 43

	)

1622 
	#R_SPARC_5
 44

	)

1623 
	#R_SPARC_6
 45

	)

1624 
	#R_SPARC_DISP64
 46

	)

1625 
	#R_SPARC_PLT64
 47

	)

1626 
	#R_SPARC_HIX22
 48

	)

1627 
	#R_SPARC_LOX10
 49

	)

1628 
	#R_SPARC_H44
 50

	)

1629 
	#R_SPARC_M44
 51

	)

1630 
	#R_SPARC_L44
 52

	)

1631 
	#R_SPARC_REGISTER
 53

	)

1632 
	#R_SPARC_UA64
 54

	)

1633 
	#R_SPARC_UA16
 55

	)

1634 
	#R_SPARC_TLS_GD_HI22
 56

	)

1635 
	#R_SPARC_TLS_GD_LO10
 57

	)

1636 
	#R_SPARC_TLS_GD_ADD
 58

	)

1637 
	#R_SPARC_TLS_GD_CALL
 59

	)

1638 
	#R_SPARC_TLS_LDM_HI22
 60

	)

1639 
	#R_SPARC_TLS_LDM_LO10
 61

	)

1640 
	#R_SPARC_TLS_LDM_ADD
 62

	)

1641 
	#R_SPARC_TLS_LDM_CALL
 63

	)

1642 
	#R_SPARC_TLS_LDO_HIX22
 64

	)

1643 
	#R_SPARC_TLS_LDO_LOX10
 65

	)

1644 
	#R_SPARC_TLS_LDO_ADD
 66

	)

1645 
	#R_SPARC_TLS_IE_HI22
 67

	)

1646 
	#R_SPARC_TLS_IE_LO10
 68

	)

1647 
	#R_SPARC_TLS_IE_LD
 69

	)

1648 
	#R_SPARC_TLS_IE_LDX
 70

	)

1649 
	#R_SPARC_TLS_IE_ADD
 71

	)

1650 
	#R_SPARC_TLS_LE_HIX22
 72

	)

1651 
	#R_SPARC_TLS_LE_LOX10
 73

	)

1652 
	#R_SPARC_TLS_DTPMOD32
 74

	)

1653 
	#R_SPARC_TLS_DTPMOD64
 75

	)

1654 
	#R_SPARC_TLS_DTPOFF32
 76

	)

1655 
	#R_SPARC_TLS_DTPOFF64
 77

	)

1656 
	#R_SPARC_TLS_TPOFF32
 78

	)

1657 
	#R_SPARC_TLS_TPOFF64
 79

	)

1658 
	#R_SPARC_GOTDATA_HIX22
 80

	)

1659 
	#R_SPARC_GOTDATA_LOX10
 81

	)

1660 
	#R_SPARC_GOTDATA_OP_HIX22
 82

	)

1661 
	#R_SPARC_GOTDATA_OP_LOX10
 83

	)

1662 
	#R_SPARC_GOTDATA_OP
 84

	)

1663 
	#R_SPARC_H34
 85

	)

1664 
	#R_SPARC_SIZE32
 86

	)

1665 
	#R_SPARC_SIZE64
 87

	)

1666 
	#R_SPARC_WDISP10
 88

	)

1667 
	#R_SPARC_JMP_IREL
 248

	)

1668 
	#R_SPARC_IRELATIVE
 249

	)

1669 
	#R_SPARC_GNU_VTINHERIT
 250

	)

1670 
	#R_SPARC_GNU_VTENTRY
 251

	)

1671 
	#R_SPARC_REV32
 252

	)

1673 
	#R_SPARC_NUM
 253

	)

1677 
	#DT_SPARC_REGISTER
 0x70000001

	)

1678 
	#DT_SPARC_NUM
 2

	)

1684 
	#EF_MIPS_NOREORDER
 1

	)

1685 
	#EF_MIPS_PIC
 2

	)

1686 
	#EF_MIPS_CPIC
 4

	)

1687 
	#EF_MIPS_XGOT
 8

	)

1688 
	#EF_MIPS_64BIT_WHIRL
 16

	)

1689 
	#EF_MIPS_ABI2
 32

	)

1690 
	#EF_MIPS_ABI_ON32
 64

	)

1691 
	#EF_MIPS_FP64
 512

	)

1692 
	#EF_MIPS_NAN2008
 1024

	)

1693 
	#EF_MIPS_ARCH
 0xf0000000

	)

1697 
	#EF_MIPS_ARCH_1
 0x00000000

	)

1698 
	#EF_MIPS_ARCH_2
 0x10000000

	)

1699 
	#EF_MIPS_ARCH_3
 0x20000000

	)

1700 
	#EF_MIPS_ARCH_4
 0x30000000

	)

1701 
	#EF_MIPS_ARCH_5
 0x40000000

	)

1702 
	#EF_MIPS_ARCH_32
 0x50000000

	)

1703 
	#EF_MIPS_ARCH_64
 0x60000000

	)

1704 
	#EF_MIPS_ARCH_32R2
 0x70000000

	)

1705 
	#EF_MIPS_ARCH_64R2
 0x80000000

	)

1709 
	#E_MIPS_ARCH_1
 
EF_MIPS_ARCH_1


	)

1710 
	#E_MIPS_ARCH_2
 
EF_MIPS_ARCH_2


	)

1711 
	#E_MIPS_ARCH_3
 
EF_MIPS_ARCH_3


	)

1712 
	#E_MIPS_ARCH_4
 
EF_MIPS_ARCH_4


	)

1713 
	#E_MIPS_ARCH_5
 
EF_MIPS_ARCH_5


	)

1714 
	#E_MIPS_ARCH_32
 
EF_MIPS_ARCH_32


	)

1715 
	#E_MIPS_ARCH_64
 
EF_MIPS_ARCH_64


	)

1719 
	#SHN_MIPS_ACOMMON
 0xff00

	)

1720 
	#SHN_MIPS_TEXT
 0xff01

	)

1721 
	#SHN_MIPS_DATA
 0xff02

	)

1722 
	#SHN_MIPS_SCOMMON
 0xff03

	)

1723 
	#SHN_MIPS_SUNDEFINED
 0xff04

	)

1727 
	#SHT_MIPS_LIBLIST
 0x70000000

	)

1728 
	#SHT_MIPS_MSYM
 0x70000001

	)

1729 
	#SHT_MIPS_CONFLICT
 0x70000002

	)

1730 
	#SHT_MIPS_GPTAB
 0x70000003

	)

1731 
	#SHT_MIPS_UCODE
 0x70000004

	)

1732 
	#SHT_MIPS_DEBUG
 0x70000005

	)

1733 
	#SHT_MIPS_REGINFO
 0x70000006

	)

1734 
	#SHT_MIPS_PACKAGE
 0x70000007

	)

1735 
	#SHT_MIPS_PACKSYM
 0x70000008

	)

1736 
	#SHT_MIPS_RELD
 0x70000009

	)

1737 
	#SHT_MIPS_IFACE
 0x7000000b

	)

1738 
	#SHT_MIPS_CONTENT
 0x7000000c

	)

1739 
	#SHT_MIPS_OPTIONS
 0x7000000d

	)

1740 
	#SHT_MIPS_SHDR
 0x70000010

	)

1741 
	#SHT_MIPS_FDESC
 0x70000011

	)

1742 
	#SHT_MIPS_EXTSYM
 0x70000012

	)

1743 
	#SHT_MIPS_DENSE
 0x70000013

	)

1744 
	#SHT_MIPS_PDESC
 0x70000014

	)

1745 
	#SHT_MIPS_LOCSYM
 0x70000015

	)

1746 
	#SHT_MIPS_AUXSYM
 0x70000016

	)

1747 
	#SHT_MIPS_OPTSYM
 0x70000017

	)

1748 
	#SHT_MIPS_LOCSTR
 0x70000018

	)

1749 
	#SHT_MIPS_LINE
 0x70000019

	)

1750 
	#SHT_MIPS_RFDESC
 0x7000001a

	)

1751 
	#SHT_MIPS_DELTASYM
 0x7000001b

	)

1752 
	#SHT_MIPS_DELTAINST
 0x7000001c

	)

1753 
	#SHT_MIPS_DELTACLASS
 0x7000001d

	)

1754 
	#SHT_MIPS_DWARF
 0x7000001ê

	)

1755 
	#SHT_MIPS_DELTADECL
 0x7000001f

	)

1756 
	#SHT_MIPS_SYMBOL_LIB
 0x70000020

	)

1757 
	#SHT_MIPS_EVENTS
 0x70000021

	)

1758 
	#SHT_MIPS_TRANSLATE
 0x70000022

	)

1759 
	#SHT_MIPS_PIXIE
 0x70000023

	)

1760 
	#SHT_MIPS_XLATE
 0x70000024

	)

1761 
	#SHT_MIPS_XLATE_DEBUG
 0x70000025

	)

1762 
	#SHT_MIPS_WHIRL
 0x70000026

	)

1763 
	#SHT_MIPS_EH_REGION
 0x70000027

	)

1764 
	#SHT_MIPS_XLATE_OLD
 0x70000028

	)

1765 
	#SHT_MIPS_PDR_EXCEPTION
 0x70000029

	)

1766 
	#SHT_MIPS_XHASH
 0x7000002b

	)

1770 
	#SHF_MIPS_GPREL
 0x10000000

	)

1771 
	#SHF_MIPS_MERGE
 0x20000000

	)

1772 
	#SHF_MIPS_ADDR
 0x40000000

	)

1773 
	#SHF_MIPS_STRINGS
 0x80000000

	)

1774 
	#SHF_MIPS_NOSTRIP
 0x08000000

	)

1775 
	#SHF_MIPS_LOCAL
 0x04000000

	)

1776 
	#SHF_MIPS_NAMES
 0x02000000

	)

1777 
	#SHF_MIPS_NODUPE
 0x01000000

	)

1783 
	#STO_MIPS_DEFAULT
 0x0

	)

1784 
	#STO_MIPS_INTERNAL
 0x1

	)

1785 
	#STO_MIPS_HIDDEN
 0x2

	)

1786 
	#STO_MIPS_PROTECTED
 0x3

	)

1787 
	#STO_MIPS_PLT
 0x8

	)

1788 
	#STO_MIPS_SC_ALIGN_UNUSED
 0xff

	)

1791 
	#STB_MIPS_SPLIT_COMMON
 13

	)

1799 
Elf32_W‹d
 
	mgt_cuºít_g_vÆue
;

1800 
Elf32_W‹d
 
	mgt_unu£d
;

1801 } 
	mgt_hódî
;

1804 
Elf32_W‹d
 
	mgt_g_vÆue
;

1805 
Elf32_W‹d
 
	mgt_byãs
;

1806 } 
	mgt_íåy
;

1807 } 
	tElf32_g±ab
;

1813 
Elf32_W‹d
 
	mri_g¥mask
;

1814 
Elf32_W‹d
 
	mri_˝rmask
[4];

1815 
Elf32_Sw‹d
 
	mri_gp_vÆue
;

1816 } 
	tElf32_RegInfo
;

1822 
	mköd
;

1824 
	msize
;

1825 
Elf32_Se˘i⁄
 
	m£˘i⁄
;

1827 
Elf32_W‹d
 
	möfo
;

1828 } 
	tElf_O±i⁄s
;

1832 
	#ODK_NULL
 0

	)

1833 
	#ODK_REGINFO
 1

	)

1834 
	#ODK_EXCEPTIONS
 2

	)

1835 
	#ODK_PAD
 3

	)

1836 
	#ODK_HWPATCH
 4

	)

1837 
	#ODK_FILL
 5

	)

1838 
	#ODK_TAGS
 6

	)

1839 
	#ODK_HWAND
 7

	)

1840 
	#ODK_HWOR
 8

	)

1844 
	#OEX_FPU_MIN
 0x1‡

	)

1845 
	#OEX_FPU_MAX
 0x1f00

	)

1846 
	#OEX_PAGE0
 0x10000

	)

1847 
	#OEX_SMM
 0x20000

	)

1848 
	#OEX_FPDBUG
 0x40000

	)

1849 
	#OEX_PRECISEFP
 
OEX_FPDBUG


	)

1850 
	#OEX_DISMISS
 0x80000

	)

1852 
	#OEX_FPU_INVAL
 0x10

	)

1853 
	#OEX_FPU_DIV0
 0x08

	)

1854 
	#OEX_FPU_OFLO
 0x04

	)

1855 
	#OEX_FPU_UFLO
 0x02

	)

1856 
	#OEX_FPU_INEX
 0x01

	)

1860 
	#OHW_R4KEOP
 0x1

	)

1861 
	#OHW_R8KPFETCH
 0x2

	)

1862 
	#OHW_R5KEOP
 0x4

	)

1863 
	#OHW_R5KCVTL
 0x8

	)

1865 
	#OPAD_PREFIX
 0x1

	)

1866 
	#OPAD_POSTFIX
 0x2

	)

1867 
	#OPAD_SYMBOL
 0x4

	)

1873 
Elf32_W‹d
 
	mhwp_Êags1
;

1874 
Elf32_W‹d
 
	mhwp_Êags2
;

1875 } 
	tElf_O±i⁄s_Hw
;

1879 
	#OHWA0_R4KEOP_CHECKED
 0x00000001

	)

1880 
	#OHWA1_R4KEOP_CLEAN
 0x00000002

	)

1884 
	#R_MIPS_NONE
 0

	)

1885 
	#R_MIPS_16
 1

	)

1886 
	#R_MIPS_32
 2

	)

1887 
	#R_MIPS_REL32
 3

	)

1888 
	#R_MIPS_26
 4

	)

1889 
	#R_MIPS_HI16
 5

	)

1890 
	#R_MIPS_LO16
 6

	)

1891 
	#R_MIPS_GPREL16
 7

	)

1892 
	#R_MIPS_LITERAL
 8

	)

1893 
	#R_MIPS_GOT16
 9

	)

1894 
	#R_MIPS_PC16
 10

	)

1895 
	#R_MIPS_CALL16
 11

	)

1896 
	#R_MIPS_GPREL32
 12

	)

1898 
	#R_MIPS_SHIFT5
 16

	)

1899 
	#R_MIPS_SHIFT6
 17

	)

1900 
	#R_MIPS_64
 18

	)

1901 
	#R_MIPS_GOT_DISP
 19

	)

1902 
	#R_MIPS_GOT_PAGE
 20

	)

1903 
	#R_MIPS_GOT_OFST
 21

	)

1904 
	#R_MIPS_GOT_HI16
 22

	)

1905 
	#R_MIPS_GOT_LO16
 23

	)

1906 
	#R_MIPS_SUB
 24

	)

1907 
	#R_MIPS_INSERT_A
 25

	)

1908 
	#R_MIPS_INSERT_B
 26

	)

1909 
	#R_MIPS_DELETE
 27

	)

1910 
	#R_MIPS_HIGHER
 28

	)

1911 
	#R_MIPS_HIGHEST
 29

	)

1912 
	#R_MIPS_CALL_HI16
 30

	)

1913 
	#R_MIPS_CALL_LO16
 31

	)

1914 
	#R_MIPS_SCN_DISP
 32

	)

1915 
	#R_MIPS_REL16
 33

	)

1916 
	#R_MIPS_ADD_IMMEDIATE
 34

	)

1917 
	#R_MIPS_PJUMP
 35

	)

1918 
	#R_MIPS_RELGOT
 36

	)

1919 
	#R_MIPS_JALR
 37

	)

1920 
	#R_MIPS_TLS_DTPMOD32
 38

	)

1921 
	#R_MIPS_TLS_DTPREL32
 39

	)

1922 
	#R_MIPS_TLS_DTPMOD64
 40

	)

1923 
	#R_MIPS_TLS_DTPREL64
 41

	)

1924 
	#R_MIPS_TLS_GD
 42

	)

1925 
	#R_MIPS_TLS_LDM
 43

	)

1926 
	#R_MIPS_TLS_DTPREL_HI16
 44

	)

1927 
	#R_MIPS_TLS_DTPREL_LO16
 45

	)

1928 
	#R_MIPS_TLS_GOTTPREL
 46

	)

1929 
	#R_MIPS_TLS_TPREL32
 47

	)

1930 
	#R_MIPS_TLS_TPREL64
 48

	)

1931 
	#R_MIPS_TLS_TPREL_HI16
 49

	)

1932 
	#R_MIPS_TLS_TPREL_LO16
 50

	)

1933 
	#R_MIPS_GLOB_DAT
 51

	)

1934 
	#R_MIPS_COPY
 126

	)

1935 
	#R_MIPS_JUMP_SLOT
 127

	)

1937 
	#R_MIPS_NUM
 128

	)

1941 
	#PT_MIPS_REGINFO
 0x70000000

	)

1942 
	#PT_MIPS_RTPROC
 0x70000001

	)

1943 
	#PT_MIPS_OPTIONS
 0x70000002

	)

1944 
	#PT_MIPS_ABIFLAGS
 0x70000003

	)

1948 
	#PF_MIPS_LOCAL
 0x10000000

	)

1952 
	#DT_MIPS_RLD_VERSION
 0x70000001

	)

1953 
	#DT_MIPS_TIME_STAMP
 0x70000002

	)

1954 
	#DT_MIPS_ICHECKSUM
 0x70000003

	)

1955 
	#DT_MIPS_IVERSION
 0x70000004

	)

1956 
	#DT_MIPS_FLAGS
 0x70000005

	)

1957 
	#DT_MIPS_BASE_ADDRESS
 0x70000006

	)

1958 
	#DT_MIPS_MSYM
 0x70000007

	)

1959 
	#DT_MIPS_CONFLICT
 0x70000008

	)

1960 
	#DT_MIPS_LIBLIST
 0x70000009

	)

1961 
	#DT_MIPS_LOCAL_GOTNO
 0x7000000®

	)

1962 
	#DT_MIPS_CONFLICTNO
 0x7000000b

	)

1963 
	#DT_MIPS_LIBLISTNO
 0x70000010

	)

1964 
	#DT_MIPS_SYMTABNO
 0x70000011

	)

1965 
	#DT_MIPS_UNREFEXTNO
 0x70000012

	)

1966 
	#DT_MIPS_GOTSYM
 0x70000013

	)

1967 
	#DT_MIPS_HIPAGENO
 0x70000014

	)

1968 
	#DT_MIPS_RLD_MAP
 0x70000016

	)

1969 
	#DT_MIPS_DELTA_CLASS
 0x70000017

	)

1970 
	#DT_MIPS_DELTA_CLASS_NO
 0x70000018

	)

1972 
	#DT_MIPS_DELTA_INSTANCE
 0x70000019

	)

1973 
	#DT_MIPS_DELTA_INSTANCE_NO
 0x7000001®

	)

1975 
	#DT_MIPS_DELTA_RELOC
 0x7000001b

	)

1976 
	#DT_MIPS_DELTA_RELOC_NO
 0x7000001¯

	)

1978 
	#DT_MIPS_DELTA_SYM
 0x7000001d

	)

1980 
	#DT_MIPS_DELTA_SYM_NO
 0x7000001ê

	)

1982 
	#DT_MIPS_DELTA_CLASSSYM
 0x70000020

	)

1984 
	#DT_MIPS_DELTA_CLASSSYM_NO
 0x70000021

	)

1986 
	#DT_MIPS_CXX_FLAGS
 0x70000022

	)

1987 
	#DT_MIPS_PIXIE_INIT
 0x70000023

	)

1988 
	#DT_MIPS_SYMBOL_LIB
 0x70000024

	)

1989 
	#DT_MIPS_LOCALPAGE_GOTIDX
 0x70000025

	)

1990 
	#DT_MIPS_LOCAL_GOTIDX
 0x70000026

	)

1991 
	#DT_MIPS_HIDDEN_GOTIDX
 0x70000027

	)

1992 
	#DT_MIPS_PROTECTED_GOTIDX
 0x70000028

	)

1993 
	#DT_MIPS_OPTIONS
 0x70000029

	)

1994 
	#DT_MIPS_INTERFACE
 0x7000002®

	)

1995 
	#DT_MIPS_DYNSTR_ALIGN
 0x7000002b

	)

1996 
	#DT_MIPS_INTERFACE_SIZE
 0x7000002¯

	)

1997 
	#DT_MIPS_RLD_TEXT_RESOLVE_ADDR
 0x7000002d

	)

1999 
	#DT_MIPS_PERF_SUFFIX
 0x7000002ê

	)

2001 
	#DT_MIPS_COMPACT_SIZE
 0x7000002‡

	)

2002 
	#DT_MIPS_GP_VALUE
 0x70000030

	)

2003 
	#DT_MIPS_AUX_DYNAMIC
 0x70000031

	)

2005 
	#DT_MIPS_PLTGOT
 0x70000032

	)

2009 
	#DT_MIPS_RWPLT
 0x70000034

	)

2013 
	#DT_MIPS_RLD_MAP_REL
 0x70000035

	)

2015 
	#DT_MIPS_XHASH
 0x70000036

	)

2016 
	#DT_MIPS_NUM
 0x37

	)

2020 
	#RHF_NONE
 0

	)

2021 
	#RHF_QUICKSTART
 (1 << 0Ë

	)

2022 
	#RHF_NOTPOT
 (1 << 1Ë

	)

2023 
	#RHF_NO_LIBRARY_REPLACEMENT
 (1 << 2Ë

	)

2024 
	#RHF_NO_MOVE
 (1 << 3)

	)

2025 
	#RHF_SGI_ONLY
 (1 << 4)

	)

2026 
	#RHF_GUARANTEE_INIT
 (1 << 5)

	)

2027 
	#RHF_DELTA_C_PLUS_PLUS
 (1 << 6)

	)

2028 
	#RHF_GUARANTEE_START_INIT
 (1 << 7)

	)

2029 
	#RHF_PIXIE
 (1 << 8)

	)

2030 
	#RHF_DEFAULT_DELAY_LOAD
 (1 << 9)

	)

2031 
	#RHF_REQUICKSTART
 (1 << 10)

	)

2032 
	#RHF_REQUICKSTARTED
 (1 << 11)

	)

2033 
	#RHF_CORD
 (1 << 12)

	)

2034 
	#RHF_NO_UNRES_UNDEF
 (1 << 13)

	)

2035 
	#RHF_RLD_ORDER_SAFE
 (1 << 14)

	)

2041 
Elf32_W‹d
 
	ml_«me
;

2042 
Elf32_W‹d
 
	ml_time_°amp
;

2043 
Elf32_W‹d
 
	ml_checksum
;

2044 
Elf32_W‹d
 
	ml_vîsi⁄
;

2045 
Elf32_W‹d
 
	ml_Êags
;

2046 } 
	tElf32_Lib
;

2050 
Elf64_W‹d
 
	ml_«me
;

2051 
Elf64_W‹d
 
	ml_time_°amp
;

2052 
Elf64_W‹d
 
	ml_checksum
;

2053 
Elf64_W‹d
 
	ml_vîsi⁄
;

2054 
Elf64_W‹d
 
	ml_Êags
;

2055 } 
	tElf64_Lib
;

2060 
	#LL_NONE
 0

	)

2061 
	#LL_EXACT_MATCH
 (1 << 0Ë

	)

2062 
	#LL_IGNORE_INT_VER
 (1 << 1Ë

	)

2063 
	#LL_REQUIRE_MINOR
 (1 << 2)

	)

2064 
	#LL_EXPORTS
 (1 << 3)

	)

2065 
	#LL_DELAY_LOAD
 (1 << 4)

	)

2066 
	#LL_DELTA
 (1 << 5)

	)

2070 
Elf32_Addr
 
	tElf32_C⁄Êi˘
;

2075 
Elf32_HÆf
 
	mvîsi⁄
;

2077 
	miß_Àvñ
;

2079 
	miß_ªv
;

2081 
	mg¥_size
;

2083 
	m˝r1_size
;

2085 
	m˝r2_size
;

2087 
	mÂ_abi
;

2089 
Elf32_W‹d
 
	miß_ext
;

2091 
Elf32_W‹d
 
	ma£s
;

2093 
Elf32_W‹d
 
	mÊags1
;

2094 
Elf32_W‹d
 
	mÊags2
;

2095 } 
	tElf_MIPS_ABIFœgs_v0
;

2099 
	#MIPS_AFL_REG_NONE
 0x00

	)

2100 
	#MIPS_AFL_REG_32
 0x01

	)

2101 
	#MIPS_AFL_REG_64
 0x02

	)

2102 
	#MIPS_AFL_REG_128
 0x03

	)

2106 
	#MIPS_AFL_ASE_DSP
 0x00000001

	)

2107 
	#MIPS_AFL_ASE_DSPR2
 0x00000002

	)

2108 
	#MIPS_AFL_ASE_EVA
 0x00000004

	)

2109 
	#MIPS_AFL_ASE_MCU
 0x00000008

	)

2110 
	#MIPS_AFL_ASE_MDMX
 0x00000010

	)

2111 
	#MIPS_AFL_ASE_MIPS3D
 0x00000020

	)

2112 
	#MIPS_AFL_ASE_MT
 0x00000040

	)

2113 
	#MIPS_AFL_ASE_SMARTMIPS
 0x00000080

	)

2114 
	#MIPS_AFL_ASE_VIRT
 0x00000100

	)

2115 
	#MIPS_AFL_ASE_MSA
 0x00000200

	)

2116 
	#MIPS_AFL_ASE_MIPS16
 0x00000400

	)

2117 
	#MIPS_AFL_ASE_MICROMIPS
 0x00000800

	)

2118 
	#MIPS_AFL_ASE_XPA
 0x00001000

	)

2119 
	#MIPS_AFL_ASE_MASK
 0x00001ff‡

	)

2123 
	#MIPS_AFL_EXT_XLR
 1

	)

2124 
	#MIPS_AFL_EXT_OCTEON2
 2

	)

2125 
	#MIPS_AFL_EXT_OCTEONP
 3

	)

2126 
	#MIPS_AFL_EXT_LOONGSON_3A
 4

	)

2127 
	#MIPS_AFL_EXT_OCTEON
 5

	)

2128 
	#MIPS_AFL_EXT_5900
 6

	)

2129 
	#MIPS_AFL_EXT_4650
 7

	)

2130 
	#MIPS_AFL_EXT_4010
 8

	)

2131 
	#MIPS_AFL_EXT_4100
 9

	)

2132 
	#MIPS_AFL_EXT_3900
 10

	)

2133 
	#MIPS_AFL_EXT_10000
 11

	)

2134 
	#MIPS_AFL_EXT_SB1
 12

	)

2135 
	#MIPS_AFL_EXT_4111
 13

	)

2136 
	#MIPS_AFL_EXT_4120
 14

	)

2137 
	#MIPS_AFL_EXT_5400
 15

	)

2138 
	#MIPS_AFL_EXT_5500
 16

	)

2139 
	#MIPS_AFL_EXT_LOONGSON_2E
 17

	)

2140 
	#MIPS_AFL_EXT_LOONGSON_2F
 18

	)

2143 
	#MIPS_AFL_FLAGS1_ODDSPREG
 1

	)

2149 
	mVÆ_GNU_MIPS_ABI_FP_ANY
 = 0,

2151 
	mVÆ_GNU_MIPS_ABI_FP_DOUBLE
 = 1,

2153 
	mVÆ_GNU_MIPS_ABI_FP_SINGLE
 = 2,

2155 
	mVÆ_GNU_MIPS_ABI_FP_SOFT
 = 3,

2157 
	mVÆ_GNU_MIPS_ABI_FP_OLD_64
 = 4,

2159 
	mVÆ_GNU_MIPS_ABI_FP_XX
 = 5,

2161 
	mVÆ_GNU_MIPS_ABI_FP_64
 = 6,

2163 
	mVÆ_GNU_MIPS_ABI_FP_64A
 = 7,

2165 
	mVÆ_GNU_MIPS_ABI_FP_MAX
 = 7

2172 
	#EF_PARISC_TRAPNIL
 0x00010000

	)

2173 
	#EF_PARISC_EXT
 0x00020000

	)

2174 
	#EF_PARISC_LSB
 0x00040000

	)

2175 
	#EF_PARISC_WIDE
 0x00080000

	)

2176 
	#EF_PARISC_NO_KABP
 0x00100000

	)

2178 
	#EF_PARISC_LAZYSWAP
 0x00400000

	)

2179 
	#EF_PARISC_ARCH
 0x0000fff‡

	)

2183 
	#EFA_PARISC_1_0
 0x020b

	)

2184 
	#EFA_PARISC_1_1
 0x0210

	)

2185 
	#EFA_PARISC_2_0
 0x0214

	)

2189 
	#SHN_PARISC_ANSI_COMMON
 0xff00

	)

2191 
	#SHN_PARISC_HUGE_COMMON
 0xff01

	)

2195 
	#SHT_PARISC_EXT
 0x70000000

	)

2196 
	#SHT_PARISC_UNWIND
 0x70000001

	)

2197 
	#SHT_PARISC_DOC
 0x70000002

	)

2201 
	#SHF_PARISC_SHORT
 0x20000000

	)

2202 
	#SHF_PARISC_HUGE
 0x40000000

	)

2203 
	#SHF_PARISC_SBP
 0x80000000

	)

2207 
	#STT_PARISC_MILLICODE
 13

	)

2209 
	#STT_HP_OPAQUE
 (
STT_LOOS
 + 0x1)

	)

2210 
	#STT_HP_STUB
 (
STT_LOOS
 + 0x2)

	)

2214 
	#R_PARISC_NONE
 0

	)

2215 
	#R_PARISC_DIR32
 1

	)

2216 
	#R_PARISC_DIR21L
 2

	)

2217 
	#R_PARISC_DIR17R
 3

	)

2218 
	#R_PARISC_DIR17F
 4

	)

2219 
	#R_PARISC_DIR14R
 6

	)

2220 
	#R_PARISC_PCREL32
 9

	)

2221 
	#R_PARISC_PCREL21L
 10

	)

2222 
	#R_PARISC_PCREL17R
 11

	)

2223 
	#R_PARISC_PCREL17F
 12

	)

2224 
	#R_PARISC_PCREL14R
 14

	)

2225 
	#R_PARISC_DPREL21L
 18

	)

2226 
	#R_PARISC_DPREL14R
 22

	)

2227 
	#R_PARISC_GPREL21L
 26

	)

2228 
	#R_PARISC_GPREL14R
 30

	)

2229 
	#R_PARISC_LTOFF21L
 34

	)

2230 
	#R_PARISC_LTOFF14R
 38

	)

2231 
	#R_PARISC_SECREL32
 41

	)

2232 
	#R_PARISC_SEGBASE
 48

	)

2233 
	#R_PARISC_SEGREL32
 49

	)

2234 
	#R_PARISC_PLTOFF21L
 50

	)

2235 
	#R_PARISC_PLTOFF14R
 54

	)

2236 
	#R_PARISC_LTOFF_FPTR32
 57

	)

2237 
	#R_PARISC_LTOFF_FPTR21L
 58

	)

2238 
	#R_PARISC_LTOFF_FPTR14R
 62

	)

2239 
	#R_PARISC_FPTR64
 64

	)

2240 
	#R_PARISC_PLABEL32
 65

	)

2241 
	#R_PARISC_PLABEL21L
 66

	)

2242 
	#R_PARISC_PLABEL14R
 70

	)

2243 
	#R_PARISC_PCREL64
 72

	)

2244 
	#R_PARISC_PCREL22F
 74

	)

2245 
	#R_PARISC_PCREL14WR
 75

	)

2246 
	#R_PARISC_PCREL14DR
 76

	)

2247 
	#R_PARISC_PCREL16F
 77

	)

2248 
	#R_PARISC_PCREL16WF
 78

	)

2249 
	#R_PARISC_PCREL16DF
 79

	)

2250 
	#R_PARISC_DIR64
 80

	)

2251 
	#R_PARISC_DIR14WR
 83

	)

2252 
	#R_PARISC_DIR14DR
 84

	)

2253 
	#R_PARISC_DIR16F
 85

	)

2254 
	#R_PARISC_DIR16WF
 86

	)

2255 
	#R_PARISC_DIR16DF
 87

	)

2256 
	#R_PARISC_GPREL64
 88

	)

2257 
	#R_PARISC_GPREL14WR
 91

	)

2258 
	#R_PARISC_GPREL14DR
 92

	)

2259 
	#R_PARISC_GPREL16F
 93

	)

2260 
	#R_PARISC_GPREL16WF
 94

	)

2261 
	#R_PARISC_GPREL16DF
 95

	)

2262 
	#R_PARISC_LTOFF64
 96

	)

2263 
	#R_PARISC_LTOFF14WR
 99

	)

2264 
	#R_PARISC_LTOFF14DR
 100

	)

2265 
	#R_PARISC_LTOFF16F
 101

	)

2266 
	#R_PARISC_LTOFF16WF
 102

	)

2267 
	#R_PARISC_LTOFF16DF
 103

	)

2268 
	#R_PARISC_SECREL64
 104

	)

2269 
	#R_PARISC_SEGREL64
 112

	)

2270 
	#R_PARISC_PLTOFF14WR
 115

	)

2271 
	#R_PARISC_PLTOFF14DR
 116

	)

2272 
	#R_PARISC_PLTOFF16F
 117

	)

2273 
	#R_PARISC_PLTOFF16WF
 118

	)

2274 
	#R_PARISC_PLTOFF16DF
 119

	)

2275 
	#R_PARISC_LTOFF_FPTR64
 120

	)

2276 
	#R_PARISC_LTOFF_FPTR14WR
 123

	)

2277 
	#R_PARISC_LTOFF_FPTR14DR
 124

	)

2278 
	#R_PARISC_LTOFF_FPTR16F
 125

	)

2279 
	#R_PARISC_LTOFF_FPTR16WF
 126

	)

2280 
	#R_PARISC_LTOFF_FPTR16DF
 127

	)

2281 
	#R_PARISC_LORESERVE
 128

	)

2282 
	#R_PARISC_COPY
 128

	)

2283 
	#R_PARISC_IPLT
 129

	)

2284 
	#R_PARISC_EPLT
 130

	)

2285 
	#R_PARISC_TPREL32
 153

	)

2286 
	#R_PARISC_TPREL21L
 154

	)

2287 
	#R_PARISC_TPREL14R
 158

	)

2288 
	#R_PARISC_LTOFF_TP21L
 162

	)

2289 
	#R_PARISC_LTOFF_TP14R
 166

	)

2290 
	#R_PARISC_LTOFF_TP14F
 167

	)

2291 
	#R_PARISC_TPREL64
 216

	)

2292 
	#R_PARISC_TPREL14WR
 219

	)

2293 
	#R_PARISC_TPREL14DR
 220

	)

2294 
	#R_PARISC_TPREL16F
 221

	)

2295 
	#R_PARISC_TPREL16WF
 222

	)

2296 
	#R_PARISC_TPREL16DF
 223

	)

2297 
	#R_PARISC_LTOFF_TP64
 224

	)

2298 
	#R_PARISC_LTOFF_TP14WR
 227

	)

2299 
	#R_PARISC_LTOFF_TP14DR
 228

	)

2300 
	#R_PARISC_LTOFF_TP16F
 229

	)

2301 
	#R_PARISC_LTOFF_TP16WF
 230

	)

2302 
	#R_PARISC_LTOFF_TP16DF
 231

	)

2303 
	#R_PARISC_GNU_VTENTRY
 232

	)

2304 
	#R_PARISC_GNU_VTINHERIT
 233

	)

2305 
	#R_PARISC_TLS_GD21L
 234

	)

2306 
	#R_PARISC_TLS_GD14R
 235

	)

2307 
	#R_PARISC_TLS_GDCALL
 236

	)

2308 
	#R_PARISC_TLS_LDM21L
 237

	)

2309 
	#R_PARISC_TLS_LDM14R
 238

	)

2310 
	#R_PARISC_TLS_LDMCALL
 239

	)

2311 
	#R_PARISC_TLS_LDO21L
 240

	)

2312 
	#R_PARISC_TLS_LDO14R
 241

	)

2313 
	#R_PARISC_TLS_DTPMOD32
 242

	)

2314 
	#R_PARISC_TLS_DTPMOD64
 243

	)

2315 
	#R_PARISC_TLS_DTPOFF32
 244

	)

2316 
	#R_PARISC_TLS_DTPOFF64
 245

	)

2317 
	#R_PARISC_TLS_LE21L
 
R_PARISC_TPREL21L


	)

2318 
	#R_PARISC_TLS_LE14R
 
R_PARISC_TPREL14R


	)

2319 
	#R_PARISC_TLS_IE21L
 
R_PARISC_LTOFF_TP21L


	)

2320 
	#R_PARISC_TLS_IE14R
 
R_PARISC_LTOFF_TP14R


	)

2321 
	#R_PARISC_TLS_TPREL32
 
R_PARISC_TPREL32


	)

2322 
	#R_PARISC_TLS_TPREL64
 
R_PARISC_TPREL64


	)

2323 
	#R_PARISC_HIRESERVE
 255

	)

2327 
	#PT_HP_TLS
 (
PT_LOOS
 + 0x0)

	)

2328 
	#PT_HP_CORE_NONE
 (
PT_LOOS
 + 0x1)

	)

2329 
	#PT_HP_CORE_VERSION
 (
PT_LOOS
 + 0x2)

	)

2330 
	#PT_HP_CORE_KERNEL
 (
PT_LOOS
 + 0x3)

	)

2331 
	#PT_HP_CORE_COMM
 (
PT_LOOS
 + 0x4)

	)

2332 
	#PT_HP_CORE_PROC
 (
PT_LOOS
 + 0x5)

	)

2333 
	#PT_HP_CORE_LOADABLE
 (
PT_LOOS
 + 0x6)

	)

2334 
	#PT_HP_CORE_STACK
 (
PT_LOOS
 + 0x7)

	)

2335 
	#PT_HP_CORE_SHM
 (
PT_LOOS
 + 0x8)

	)

2336 
	#PT_HP_CORE_MMF
 (
PT_LOOS
 + 0x9)

	)

2337 
	#PT_HP_PARALLEL
 (
PT_LOOS
 + 0x10)

	)

2338 
	#PT_HP_FASTBIND
 (
PT_LOOS
 + 0x11)

	)

2339 
	#PT_HP_OPT_ANNOT
 (
PT_LOOS
 + 0x12)

	)

2340 
	#PT_HP_HSL_ANNOT
 (
PT_LOOS
 + 0x13)

	)

2341 
	#PT_HP_STACK
 (
PT_LOOS
 + 0x14)

	)

2343 
	#PT_PARISC_ARCHEXT
 0x70000000

	)

2344 
	#PT_PARISC_UNWIND
 0x70000001

	)

2348 
	#PF_PARISC_SBP
 0x08000000

	)

2350 
	#PF_HP_PAGE_SIZE
 0x00100000

	)

2351 
	#PF_HP_FAR_SHARED
 0x00200000

	)

2352 
	#PF_HP_NEAR_SHARED
 0x00400000

	)

2353 
	#PF_HP_CODE
 0x01000000

	)

2354 
	#PF_HP_MODIFY
 0x02000000

	)

2355 
	#PF_HP_LAZYSWAP
 0x04000000

	)

2356 
	#PF_HP_SBP
 0x08000000

	)

2363 
	#EF_ALPHA_32BIT
 1

	)

2364 
	#EF_ALPHA_CANRELAX
 2

	)

2369 
	#SHT_ALPHA_DEBUG
 0x70000001

	)

2370 
	#SHT_ALPHA_REGINFO
 0x70000002

	)

2374 
	#SHF_ALPHA_GPREL
 0x10000000

	)

2377 
	#STO_ALPHA_NOPV
 0x80

	)

2378 
	#STO_ALPHA_STD_GPLOAD
 0x88

	)

2382 
	#R_ALPHA_NONE
 0

	)

2383 
	#R_ALPHA_REFLONG
 1

	)

2384 
	#R_ALPHA_REFQUAD
 2

	)

2385 
	#R_ALPHA_GPREL32
 3

	)

2386 
	#R_ALPHA_LITERAL
 4

	)

2387 
	#R_ALPHA_LITUSE
 5

	)

2388 
	#R_ALPHA_GPDISP
 6

	)

2389 
	#R_ALPHA_BRADDR
 7

	)

2390 
	#R_ALPHA_HINT
 8

	)

2391 
	#R_ALPHA_SREL16
 9

	)

2392 
	#R_ALPHA_SREL32
 10

	)

2393 
	#R_ALPHA_SREL64
 11

	)

2394 
	#R_ALPHA_GPRELHIGH
 17

	)

2395 
	#R_ALPHA_GPRELLOW
 18

	)

2396 
	#R_ALPHA_GPREL16
 19

	)

2397 
	#R_ALPHA_COPY
 24

	)

2398 
	#R_ALPHA_GLOB_DAT
 25

	)

2399 
	#R_ALPHA_JMP_SLOT
 26

	)

2400 
	#R_ALPHA_RELATIVE
 27

	)

2401 
	#R_ALPHA_TLS_GD_HI
 28

	)

2402 
	#R_ALPHA_TLSGD
 29

	)

2403 
	#R_ALPHA_TLS_LDM
 30

	)

2404 
	#R_ALPHA_DTPMOD64
 31

	)

2405 
	#R_ALPHA_GOTDTPREL
 32

	)

2406 
	#R_ALPHA_DTPREL64
 33

	)

2407 
	#R_ALPHA_DTPRELHI
 34

	)

2408 
	#R_ALPHA_DTPRELLO
 35

	)

2409 
	#R_ALPHA_DTPREL16
 36

	)

2410 
	#R_ALPHA_GOTTPREL
 37

	)

2411 
	#R_ALPHA_TPREL64
 38

	)

2412 
	#R_ALPHA_TPRELHI
 39

	)

2413 
	#R_ALPHA_TPRELLO
 40

	)

2414 
	#R_ALPHA_TPREL16
 41

	)

2416 
	#R_ALPHA_NUM
 46

	)

2419 
	#LITUSE_ALPHA_ADDR
 0

	)

2420 
	#LITUSE_ALPHA_BASE
 1

	)

2421 
	#LITUSE_ALPHA_BYTOFF
 2

	)

2422 
	#LITUSE_ALPHA_JSR
 3

	)

2423 
	#LITUSE_ALPHA_TLS_GD
 4

	)

2424 
	#LITUSE_ALPHA_TLS_LDM
 5

	)

2427 
	#DT_ALPHA_PLTRO
 (
DT_LOPROC
 + 0)

	)

2428 
	#DT_ALPHA_NUM
 1

	)

2433 
	#EF_PPC_EMB
 0x80000000

	)

2436 
	#EF_PPC_RELOCATABLE
 0x00010000

	)

2437 
	#EF_PPC_RELOCATABLE_LIB
 0x00008000

	)

2441 
	#R_PPC_NONE
 0

	)

2442 
	#R_PPC_ADDR32
 1

	)

2443 
	#R_PPC_ADDR24
 2

	)

2444 
	#R_PPC_ADDR16
 3

	)

2445 
	#R_PPC_ADDR16_LO
 4

	)

2446 
	#R_PPC_ADDR16_HI
 5

	)

2447 
	#R_PPC_ADDR16_HA
 6

	)

2448 
	#R_PPC_ADDR14
 7

	)

2449 
	#R_PPC_ADDR14_BRTAKEN
 8

	)

2450 
	#R_PPC_ADDR14_BRNTAKEN
 9

	)

2451 
	#R_PPC_REL24
 10

	)

2452 
	#R_PPC_REL14
 11

	)

2453 
	#R_PPC_REL14_BRTAKEN
 12

	)

2454 
	#R_PPC_REL14_BRNTAKEN
 13

	)

2455 
	#R_PPC_GOT16
 14

	)

2456 
	#R_PPC_GOT16_LO
 15

	)

2457 
	#R_PPC_GOT16_HI
 16

	)

2458 
	#R_PPC_GOT16_HA
 17

	)

2459 
	#R_PPC_PLTREL24
 18

	)

2460 
	#R_PPC_COPY
 19

	)

2461 
	#R_PPC_GLOB_DAT
 20

	)

2462 
	#R_PPC_JMP_SLOT
 21

	)

2463 
	#R_PPC_RELATIVE
 22

	)

2464 
	#R_PPC_LOCAL24PC
 23

	)

2465 
	#R_PPC_UADDR32
 24

	)

2466 
	#R_PPC_UADDR16
 25

	)

2467 
	#R_PPC_REL32
 26

	)

2468 
	#R_PPC_PLT32
 27

	)

2469 
	#R_PPC_PLTREL32
 28

	)

2470 
	#R_PPC_PLT16_LO
 29

	)

2471 
	#R_PPC_PLT16_HI
 30

	)

2472 
	#R_PPC_PLT16_HA
 31

	)

2473 
	#R_PPC_SDAREL16
 32

	)

2474 
	#R_PPC_SECTOFF
 33

	)

2475 
	#R_PPC_SECTOFF_LO
 34

	)

2476 
	#R_PPC_SECTOFF_HI
 35

	)

2477 
	#R_PPC_SECTOFF_HA
 36

	)

2480 
	#R_PPC_TLS
 67

	)

2481 
	#R_PPC_DTPMOD32
 68

	)

2482 
	#R_PPC_TPREL16
 69

	)

2483 
	#R_PPC_TPREL16_LO
 70

	)

2484 
	#R_PPC_TPREL16_HI
 71

	)

2485 
	#R_PPC_TPREL16_HA
 72

	)

2486 
	#R_PPC_TPREL32
 73

	)

2487 
	#R_PPC_DTPREL16
 74

	)

2488 
	#R_PPC_DTPREL16_LO
 75

	)

2489 
	#R_PPC_DTPREL16_HI
 76

	)

2490 
	#R_PPC_DTPREL16_HA
 77

	)

2491 
	#R_PPC_DTPREL32
 78

	)

2492 
	#R_PPC_GOT_TLSGD16
 79

	)

2493 
	#R_PPC_GOT_TLSGD16_LO
 80

	)

2494 
	#R_PPC_GOT_TLSGD16_HI
 81

	)

2495 
	#R_PPC_GOT_TLSGD16_HA
 82

	)

2496 
	#R_PPC_GOT_TLSLD16
 83

	)

2497 
	#R_PPC_GOT_TLSLD16_LO
 84

	)

2498 
	#R_PPC_GOT_TLSLD16_HI
 85

	)

2499 
	#R_PPC_GOT_TLSLD16_HA
 86

	)

2500 
	#R_PPC_GOT_TPREL16
 87

	)

2501 
	#R_PPC_GOT_TPREL16_LO
 88

	)

2502 
	#R_PPC_GOT_TPREL16_HI
 89

	)

2503 
	#R_PPC_GOT_TPREL16_HA
 90

	)

2504 
	#R_PPC_GOT_DTPREL16
 91

	)

2505 
	#R_PPC_GOT_DTPREL16_LO
 92

	)

2506 
	#R_PPC_GOT_DTPREL16_HI
 93

	)

2507 
	#R_PPC_GOT_DTPREL16_HA
 94

	)

2508 
	#R_PPC_TLSGD
 95

	)

2509 
	#R_PPC_TLSLD
 96

	)

2513 
	#R_PPC_EMB_NADDR32
 101

	)

2514 
	#R_PPC_EMB_NADDR16
 102

	)

2515 
	#R_PPC_EMB_NADDR16_LO
 103

	)

2516 
	#R_PPC_EMB_NADDR16_HI
 104

	)

2517 
	#R_PPC_EMB_NADDR16_HA
 105

	)

2518 
	#R_PPC_EMB_SDAI16
 106

	)

2519 
	#R_PPC_EMB_SDA2I16
 107

	)

2520 
	#R_PPC_EMB_SDA2REL
 108

	)

2521 
	#R_PPC_EMB_SDA21
 109

	)

2522 
	#R_PPC_EMB_MRKREF
 110

	)

2523 
	#R_PPC_EMB_RELSEC16
 111

	)

2524 
	#R_PPC_EMB_RELST_LO
 112

	)

2525 
	#R_PPC_EMB_RELST_HI
 113

	)

2526 
	#R_PPC_EMB_RELST_HA
 114

	)

2527 
	#R_PPC_EMB_BIT_FLD
 115

	)

2528 
	#R_PPC_EMB_RELSDA
 116

	)

2531 
	#R_PPC_DIAB_SDA21_LO
 180

	)

2532 
	#R_PPC_DIAB_SDA21_HI
 181

	)

2533 
	#R_PPC_DIAB_SDA21_HA
 182

	)

2534 
	#R_PPC_DIAB_RELSDA_LO
 183

	)

2535 
	#R_PPC_DIAB_RELSDA_HI
 184

	)

2536 
	#R_PPC_DIAB_RELSDA_HA
 185

	)

2539 
	#R_PPC_IRELATIVE
 248

	)

2542 
	#R_PPC_REL16
 249

	)

2543 
	#R_PPC_REL16_LO
 250

	)

2544 
	#R_PPC_REL16_HI
 251

	)

2545 
	#R_PPC_REL16_HA
 252

	)

2549 
	#R_PPC_TOC16
 255

	)

2552 
	#DT_PPC_GOT
 (
DT_LOPROC
 + 0)

	)

2553 
	#DT_PPC_OPT
 (
DT_LOPROC
 + 1)

	)

2554 
	#DT_PPC_NUM
 2

	)

2557 
	#PPC_OPT_TLS
 1

	)

2560 
	#R_PPC64_NONE
 
R_PPC_NONE


	)

2561 
	#R_PPC64_ADDR32
 
R_PPC_ADDR32


	)

2562 
	#R_PPC64_ADDR24
 
R_PPC_ADDR24


	)

2563 
	#R_PPC64_ADDR16
 
R_PPC_ADDR16


	)

2564 
	#R_PPC64_ADDR16_LO
 
R_PPC_ADDR16_LO


	)

2565 
	#R_PPC64_ADDR16_HI
 
R_PPC_ADDR16_HI


	)

2566 
	#R_PPC64_ADDR16_HA
 
R_PPC_ADDR16_HA


	)

2567 
	#R_PPC64_ADDR14
 
R_PPC_ADDR14


	)

2568 
	#R_PPC64_ADDR14_BRTAKEN
 
R_PPC_ADDR14_BRTAKEN


	)

2569 
	#R_PPC64_ADDR14_BRNTAKEN
 
R_PPC_ADDR14_BRNTAKEN


	)

2570 
	#R_PPC64_REL24
 
R_PPC_REL24


	)

2571 
	#R_PPC64_REL14
 
R_PPC_REL14


	)

2572 
	#R_PPC64_REL14_BRTAKEN
 
R_PPC_REL14_BRTAKEN


	)

2573 
	#R_PPC64_REL14_BRNTAKEN
 
R_PPC_REL14_BRNTAKEN


	)

2574 
	#R_PPC64_GOT16
 
R_PPC_GOT16


	)

2575 
	#R_PPC64_GOT16_LO
 
R_PPC_GOT16_LO


	)

2576 
	#R_PPC64_GOT16_HI
 
R_PPC_GOT16_HI


	)

2577 
	#R_PPC64_GOT16_HA
 
R_PPC_GOT16_HA


	)

2579 
	#R_PPC64_COPY
 
R_PPC_COPY


	)

2580 
	#R_PPC64_GLOB_DAT
 
R_PPC_GLOB_DAT


	)

2581 
	#R_PPC64_JMP_SLOT
 
R_PPC_JMP_SLOT


	)

2582 
	#R_PPC64_RELATIVE
 
R_PPC_RELATIVE


	)

2584 
	#R_PPC64_UADDR32
 
R_PPC_UADDR32


	)

2585 
	#R_PPC64_UADDR16
 
R_PPC_UADDR16


	)

2586 
	#R_PPC64_REL32
 
R_PPC_REL32


	)

2587 
	#R_PPC64_PLT32
 
R_PPC_PLT32


	)

2588 
	#R_PPC64_PLTREL32
 
R_PPC_PLTREL32


	)

2589 
	#R_PPC64_PLT16_LO
 
R_PPC_PLT16_LO


	)

2590 
	#R_PPC64_PLT16_HI
 
R_PPC_PLT16_HI


	)

2591 
	#R_PPC64_PLT16_HA
 
R_PPC_PLT16_HA


	)

2593 
	#R_PPC64_SECTOFF
 
R_PPC_SECTOFF


	)

2594 
	#R_PPC64_SECTOFF_LO
 
R_PPC_SECTOFF_LO


	)

2595 
	#R_PPC64_SECTOFF_HI
 
R_PPC_SECTOFF_HI


	)

2596 
	#R_PPC64_SECTOFF_HA
 
R_PPC_SECTOFF_HA


	)

2597 
	#R_PPC64_ADDR30
 37

	)

2598 
	#R_PPC64_ADDR64
 38

	)

2599 
	#R_PPC64_ADDR16_HIGHER
 39

	)

2600 
	#R_PPC64_ADDR16_HIGHERA
 40

	)

2601 
	#R_PPC64_ADDR16_HIGHEST
 41

	)

2602 
	#R_PPC64_ADDR16_HIGHESTA
 42

	)

2603 
	#R_PPC64_UADDR64
 43

	)

2604 
	#R_PPC64_REL64
 44

	)

2605 
	#R_PPC64_PLT64
 45

	)

2606 
	#R_PPC64_PLTREL64
 46

	)

2607 
	#R_PPC64_TOC16
 47

	)

2608 
	#R_PPC64_TOC16_LO
 48

	)

2609 
	#R_PPC64_TOC16_HI
 49

	)

2610 
	#R_PPC64_TOC16_HA
 50

	)

2611 
	#R_PPC64_TOC
 51

	)

2612 
	#R_PPC64_PLTGOT16
 52

	)

2613 
	#R_PPC64_PLTGOT16_LO
 53

	)

2614 
	#R_PPC64_PLTGOT16_HI
 54

	)

2615 
	#R_PPC64_PLTGOT16_HA
 55

	)

2617 
	#R_PPC64_ADDR16_DS
 56

	)

2618 
	#R_PPC64_ADDR16_LO_DS
 57

	)

2619 
	#R_PPC64_GOT16_DS
 58

	)

2620 
	#R_PPC64_GOT16_LO_DS
 59

	)

2621 
	#R_PPC64_PLT16_LO_DS
 60

	)

2622 
	#R_PPC64_SECTOFF_DS
 61

	)

2623 
	#R_PPC64_SECTOFF_LO_DS
 62

	)

2624 
	#R_PPC64_TOC16_DS
 63

	)

2625 
	#R_PPC64_TOC16_LO_DS
 64

	)

2626 
	#R_PPC64_PLTGOT16_DS
 65

	)

2627 
	#R_PPC64_PLTGOT16_LO_DS
 66

	)

2630 
	#R_PPC64_TLS
 67

	)

2631 
	#R_PPC64_DTPMOD64
 68

	)

2632 
	#R_PPC64_TPREL16
 69

	)

2633 
	#R_PPC64_TPREL16_LO
 70

	)

2634 
	#R_PPC64_TPREL16_HI
 71

	)

2635 
	#R_PPC64_TPREL16_HA
 72

	)

2636 
	#R_PPC64_TPREL64
 73

	)

2637 
	#R_PPC64_DTPREL16
 74

	)

2638 
	#R_PPC64_DTPREL16_LO
 75

	)

2639 
	#R_PPC64_DTPREL16_HI
 76

	)

2640 
	#R_PPC64_DTPREL16_HA
 77

	)

2641 
	#R_PPC64_DTPREL64
 78

	)

2642 
	#R_PPC64_GOT_TLSGD16
 79

	)

2643 
	#R_PPC64_GOT_TLSGD16_LO
 80

	)

2644 
	#R_PPC64_GOT_TLSGD16_HI
 81

	)

2645 
	#R_PPC64_GOT_TLSGD16_HA
 82

	)

2646 
	#R_PPC64_GOT_TLSLD16
 83

	)

2647 
	#R_PPC64_GOT_TLSLD16_LO
 84

	)

2648 
	#R_PPC64_GOT_TLSLD16_HI
 85

	)

2649 
	#R_PPC64_GOT_TLSLD16_HA
 86

	)

2650 
	#R_PPC64_GOT_TPREL16_DS
 87

	)

2651 
	#R_PPC64_GOT_TPREL16_LO_DS
 88

	)

2652 
	#R_PPC64_GOT_TPREL16_HI
 89

	)

2653 
	#R_PPC64_GOT_TPREL16_HA
 90

	)

2654 
	#R_PPC64_GOT_DTPREL16_DS
 91

	)

2655 
	#R_PPC64_GOT_DTPREL16_LO_DS
 92

	)

2656 
	#R_PPC64_GOT_DTPREL16_HI
 93

	)

2657 
	#R_PPC64_GOT_DTPREL16_HA
 94

	)

2658 
	#R_PPC64_TPREL16_DS
 95

	)

2659 
	#R_PPC64_TPREL16_LO_DS
 96

	)

2660 
	#R_PPC64_TPREL16_HIGHER
 97

	)

2661 
	#R_PPC64_TPREL16_HIGHERA
 98

	)

2662 
	#R_PPC64_TPREL16_HIGHEST
 99

	)

2663 
	#R_PPC64_TPREL16_HIGHESTA
 100

	)

2664 
	#R_PPC64_DTPREL16_DS
 101

	)

2665 
	#R_PPC64_DTPREL16_LO_DS
 102

	)

2666 
	#R_PPC64_DTPREL16_HIGHER
 103

	)

2667 
	#R_PPC64_DTPREL16_HIGHERA
 104

	)

2668 
	#R_PPC64_DTPREL16_HIGHEST
 105

	)

2669 
	#R_PPC64_DTPREL16_HIGHESTA
 106

	)

2670 
	#R_PPC64_TLSGD
 107

	)

2671 
	#R_PPC64_TLSLD
 108

	)

2672 
	#R_PPC64_TOCSAVE
 109

	)

2675 
	#R_PPC64_ADDR16_HIGH
 110

	)

2676 
	#R_PPC64_ADDR16_HIGHA
 111

	)

2677 
	#R_PPC64_TPREL16_HIGH
 112

	)

2678 
	#R_PPC64_TPREL16_HIGHA
 113

	)

2679 
	#R_PPC64_DTPREL16_HIGH
 114

	)

2680 
	#R_PPC64_DTPREL16_HIGHA
 115

	)

2683 
	#R_PPC64_JMP_IREL
 247

	)

2684 
	#R_PPC64_IRELATIVE
 248

	)

2685 
	#R_PPC64_REL16
 249

	)

2686 
	#R_PPC64_REL16_LO
 250

	)

2687 
	#R_PPC64_REL16_HI
 251

	)

2688 
	#R_PPC64_REL16_HA
 252

	)

2694 
	#EF_PPC64_ABI
 3

	)

2697 
	#DT_PPC64_GLINK
 (
DT_LOPROC
 + 0)

	)

2698 
	#DT_PPC64_OPD
 (
DT_LOPROC
 + 1)

	)

2699 
	#DT_PPC64_OPDSZ
 (
DT_LOPROC
 + 2)

	)

2700 
	#DT_PPC64_OPT
 (
DT_LOPROC
 + 3)

	)

2701 
	#DT_PPC64_NUM
 4

	)

2704 
	#PPC64_OPT_TLS
 1

	)

2705 
	#PPC64_OPT_MULTI_TOC
 2

	)

2706 
	#PPC64_OPT_LOCALENTRY
 4

	)

2709 
	#STO_PPC64_LOCAL_BIT
 5

	)

2710 
	#STO_PPC64_LOCAL_MASK
 (7 << 
STO_PPC64_LOCAL_BIT
)

	)

2711 
	#PPC64_LOCAL_ENTRY_OFFSET
(
Ÿhî
) \

2712 (((1 << (((
Ÿhî
Ë& 
STO_PPC64_LOCAL_MASK
Ë>> 
STO_PPC64_LOCAL_BIT
)Ë>> 2Ë<< 2)

	)

2718 
	#EF_ARM_RELEXEC
 0x01

	)

2719 
	#EF_ARM_HASENTRY
 0x02

	)

2720 
	#EF_ARM_INTERWORK
 0x04

	)

2721 
	#EF_ARM_APCS_26
 0x08

	)

2722 
	#EF_ARM_APCS_FLOAT
 0x10

	)

2723 
	#EF_ARM_PIC
 0x20

	)

2724 
	#EF_ARM_ALIGN8
 0x40

	)

2725 
	#EF_ARM_NEW_ABI
 0x80

	)

2726 
	#EF_ARM_OLD_ABI
 0x100

	)

2727 
	#EF_ARM_SOFT_FLOAT
 0x200

	)

2728 
	#EF_ARM_VFP_FLOAT
 0x400

	)

2729 
	#EF_ARM_MAVERICK_FLOAT
 0x800

	)

2731 
	#EF_ARM_ABI_FLOAT_SOFT
 0x200

	)

2732 
	#EF_ARM_ABI_FLOAT_HARD
 0x400

	)

2737 
	#EF_ARM_SYMSARESORTED
 0x04

	)

2738 
	#EF_ARM_DYNSYMSUSESEGIDX
 0x08

	)

2739 
	#EF_ARM_MAPSYMSFIRST
 0x10

	)

2740 
	#EF_ARM_EABIMASK
 0XFF000000

	)

2743 
	#EF_ARM_BE8
 0x00800000

	)

2744 
	#EF_ARM_LE8
 0x00400000

	)

2746 
	#EF_ARM_EABI_VERSION
(
Êags
Ë((ÊagsË& 
EF_ARM_EABIMASK
)

	)

2747 
	#EF_ARM_EABI_UNKNOWN
 0x00000000

	)

2748 
	#EF_ARM_EABI_VER1
 0x01000000

	)

2749 
	#EF_ARM_EABI_VER2
 0x02000000

	)

2750 
	#EF_ARM_EABI_VER3
 0x03000000

	)

2751 
	#EF_ARM_EABI_VER4
 0x04000000

	)

2752 
	#EF_ARM_EABI_VER5
 0x05000000

	)

2755 
	#STT_ARM_TFUNC
 
STT_LOPROC


	)

2756 
	#STT_ARM_16BIT
 
STT_HIPROC


	)

2759 
	#SHF_ARM_ENTRYSECT
 0x10000000

	)

2760 
	#SHF_ARM_COMDEF
 0x80000000

	)

2764 
	#PF_ARM_SB
 0x10000000

	)

2766 
	#PF_ARM_PI
 0x20000000

	)

2767 
	#PF_ARM_ABS
 0x40000000

	)

2770 
	#PT_ARM_EXIDX
 (
PT_LOPROC
 + 1Ë

	)

2773 
	#SHT_ARM_EXIDX
 (
SHT_LOPROC
 + 1Ë

	)

2774 
	#SHT_ARM_PREEMPTMAP
 (
SHT_LOPROC
 + 2Ë

	)

2775 
	#SHT_ARM_ATTRIBUTES
 (
SHT_LOPROC
 + 3Ë

	)

2780 
	#R_AARCH64_NONE
 0

	)

2783 
	#R_AARCH64_P32_ABS32
 1

	)

2784 
	#R_AARCH64_P32_COPY
 180

	)

2785 
	#R_AARCH64_P32_GLOB_DAT
 181

	)

2786 
	#R_AARCH64_P32_JUMP_SLOT
 182

	)

2787 
	#R_AARCH64_P32_RELATIVE
 183

	)

2788 
	#R_AARCH64_P32_TLS_DTPMOD
 184

	)

2789 
	#R_AARCH64_P32_TLS_DTPREL
 185

	)

2790 
	#R_AARCH64_P32_TLS_TPREL
 186

	)

2791 
	#R_AARCH64_P32_TLSDESC
 187

	)

2792 
	#R_AARCH64_P32_IRELATIVE
 188

	)

2795 
	#R_AARCH64_ABS64
 257

	)

2796 
	#R_AARCH64_ABS32
 258

	)

2797 
	#R_AARCH64_ABS16
 259

	)

2798 
	#R_AARCH64_PREL64
 260

	)

2799 
	#R_AARCH64_PREL32
 261

	)

2800 
	#R_AARCH64_PREL16
 262

	)

2801 
	#R_AARCH64_MOVW_UABS_G0
 263

	)

2802 
	#R_AARCH64_MOVW_UABS_G0_NC
 264

	)

2803 
	#R_AARCH64_MOVW_UABS_G1
 265

	)

2804 
	#R_AARCH64_MOVW_UABS_G1_NC
 266

	)

2805 
	#R_AARCH64_MOVW_UABS_G2
 267

	)

2806 
	#R_AARCH64_MOVW_UABS_G2_NC
 268

	)

2807 
	#R_AARCH64_MOVW_UABS_G3
 269

	)

2808 
	#R_AARCH64_MOVW_SABS_G0
 270

	)

2809 
	#R_AARCH64_MOVW_SABS_G1
 271

	)

2810 
	#R_AARCH64_MOVW_SABS_G2
 272

	)

2811 
	#R_AARCH64_LD_PREL_LO19
 273

	)

2812 
	#R_AARCH64_ADR_PREL_LO21
 274

	)

2813 
	#R_AARCH64_ADR_PREL_PG_HI21
 275

	)

2814 
	#R_AARCH64_ADR_PREL_PG_HI21_NC
 276

	)

2815 
	#R_AARCH64_ADD_ABS_LO12_NC
 277

	)

2816 
	#R_AARCH64_LDST8_ABS_LO12_NC
 278

	)

2817 
	#R_AARCH64_TSTBR14
 279

	)

2818 
	#R_AARCH64_CONDBR19
 280

	)

2819 
	#R_AARCH64_JUMP26
 282

	)

2820 
	#R_AARCH64_CALL26
 283

	)

2821 
	#R_AARCH64_LDST16_ABS_LO12_NC
 284

	)

2822 
	#R_AARCH64_LDST32_ABS_LO12_NC
 285

	)

2823 
	#R_AARCH64_LDST64_ABS_LO12_NC
 286

	)

2824 
	#R_AARCH64_MOVW_PREL_G0
 287

	)

2825 
	#R_AARCH64_MOVW_PREL_G0_NC
 288

	)

2826 
	#R_AARCH64_MOVW_PREL_G1
 289

	)

2827 
	#R_AARCH64_MOVW_PREL_G1_NC
 290

	)

2828 
	#R_AARCH64_MOVW_PREL_G2
 291

	)

2829 
	#R_AARCH64_MOVW_PREL_G2_NC
 292

	)

2830 
	#R_AARCH64_MOVW_PREL_G3
 293

	)

2831 
	#R_AARCH64_LDST128_ABS_LO12_NC
 299

	)

2832 
	#R_AARCH64_MOVW_GOTOFF_G0
 300

	)

2833 
	#R_AARCH64_MOVW_GOTOFF_G0_NC
 301

	)

2834 
	#R_AARCH64_MOVW_GOTOFF_G1
 302

	)

2835 
	#R_AARCH64_MOVW_GOTOFF_G1_NC
 303

	)

2836 
	#R_AARCH64_MOVW_GOTOFF_G2
 304

	)

2837 
	#R_AARCH64_MOVW_GOTOFF_G2_NC
 305

	)

2838 
	#R_AARCH64_MOVW_GOTOFF_G3
 306

	)

2839 
	#R_AARCH64_GOTREL64
 307

	)

2840 
	#R_AARCH64_GOTREL32
 308

	)

2841 
	#R_AARCH64_GOT_LD_PREL19
 309

	)

2842 
	#R_AARCH64_LD64_GOTOFF_LO15
 310

	)

2843 
	#R_AARCH64_ADR_GOT_PAGE
 311

	)

2844 
	#R_AARCH64_LD64_GOT_LO12_NC
 312

	)

2845 
	#R_AARCH64_LD64_GOTPAGE_LO15
 313

	)

2846 
	#R_AARCH64_TLSGD_ADR_PREL21
 512

	)

2847 
	#R_AARCH64_TLSGD_ADR_PAGE21
 513

	)

2848 
	#R_AARCH64_TLSGD_ADD_LO12_NC
 514

	)

2849 
	#R_AARCH64_TLSGD_MOVW_G1
 515

	)

2850 
	#R_AARCH64_TLSGD_MOVW_G0_NC
 516

	)

2851 
	#R_AARCH64_TLSLD_ADR_PREL21
 517

	)

2852 
	#R_AARCH64_TLSLD_ADR_PAGE21
 518

	)

2853 
	#R_AARCH64_TLSLD_ADD_LO12_NC
 519

	)

2854 
	#R_AARCH64_TLSLD_MOVW_G1
 520

	)

2855 
	#R_AARCH64_TLSLD_MOVW_G0_NC
 521

	)

2856 
	#R_AARCH64_TLSLD_LD_PREL19
 522

	)

2857 
	#R_AARCH64_TLSLD_MOVW_DTPREL_G2
 523

	)

2858 
	#R_AARCH64_TLSLD_MOVW_DTPREL_G1
 524

	)

2859 
	#R_AARCH64_TLSLD_MOVW_DTPREL_G1_NC
 525

	)

2860 
	#R_AARCH64_TLSLD_MOVW_DTPREL_G0
 526

	)

2861 
	#R_AARCH64_TLSLD_MOVW_DTPREL_G0_NC
 527

	)

2862 
	#R_AARCH64_TLSLD_ADD_DTPREL_HI12
 528

	)

2863 
	#R_AARCH64_TLSLD_ADD_DTPREL_LO12
 529

	)

2864 
	#R_AARCH64_TLSLD_ADD_DTPREL_LO12_NC
 530

	)

2865 
	#R_AARCH64_TLSLD_LDST8_DTPREL_LO12
 531

	)

2866 
	#R_AARCH64_TLSLD_LDST8_DTPREL_LO12_NC
 532

	)

2867 
	#R_AARCH64_TLSLD_LDST16_DTPREL_LO12
 533

	)

2868 
	#R_AARCH64_TLSLD_LDST16_DTPREL_LO12_NC
 534

	)

2869 
	#R_AARCH64_TLSLD_LDST32_DTPREL_LO12
 535

	)

2870 
	#R_AARCH64_TLSLD_LDST32_DTPREL_LO12_NC
 536

	)

2871 
	#R_AARCH64_TLSLD_LDST64_DTPREL_LO12
 537

	)

2872 
	#R_AARCH64_TLSLD_LDST64_DTPREL_LO12_NC
 538

	)

2873 
	#R_AARCH64_TLSIE_MOVW_GOTTPREL_G1
 539

	)

2874 
	#R_AARCH64_TLSIE_MOVW_GOTTPREL_G0_NC
 540

	)

2875 
	#R_AARCH64_TLSIE_ADR_GOTTPREL_PAGE21
 541

	)

2876 
	#R_AARCH64_TLSIE_LD64_GOTTPREL_LO12_NC
 542

	)

2877 
	#R_AARCH64_TLSIE_LD_GOTTPREL_PREL19
 543

	)

2878 
	#R_AARCH64_TLSLE_MOVW_TPREL_G2
 544

	)

2879 
	#R_AARCH64_TLSLE_MOVW_TPREL_G1
 545

	)

2880 
	#R_AARCH64_TLSLE_MOVW_TPREL_G1_NC
 546

	)

2881 
	#R_AARCH64_TLSLE_MOVW_TPREL_G0
 547

	)

2882 
	#R_AARCH64_TLSLE_MOVW_TPREL_G0_NC
 548

	)

2883 
	#R_AARCH64_TLSLE_ADD_TPREL_HI12
 549

	)

2884 
	#R_AARCH64_TLSLE_ADD_TPREL_LO12
 550

	)

2885 
	#R_AARCH64_TLSLE_ADD_TPREL_LO12_NC
 551

	)

2886 
	#R_AARCH64_TLSLE_LDST8_TPREL_LO12
 552

	)

2887 
	#R_AARCH64_TLSLE_LDST8_TPREL_LO12_NC
 553

	)

2888 
	#R_AARCH64_TLSLE_LDST16_TPREL_LO12
 554

	)

2889 
	#R_AARCH64_TLSLE_LDST16_TPREL_LO12_NC
 555

	)

2890 
	#R_AARCH64_TLSLE_LDST32_TPREL_LO12
 556

	)

2891 
	#R_AARCH64_TLSLE_LDST32_TPREL_LO12_NC
 557

	)

2892 
	#R_AARCH64_TLSLE_LDST64_TPREL_LO12
 558

	)

2893 
	#R_AARCH64_TLSLE_LDST64_TPREL_LO12_NC
 559

	)

2894 
	#R_AARCH64_TLSDESC_LD_PREL19
 560

	)

2895 
	#R_AARCH64_TLSDESC_ADR_PREL21
 561

	)

2896 
	#R_AARCH64_TLSDESC_ADR_PAGE21
 562

	)

2897 
	#R_AARCH64_TLSDESC_LD64_LO12
 563

	)

2898 
	#R_AARCH64_TLSDESC_ADD_LO12
 564

	)

2899 
	#R_AARCH64_TLSDESC_OFF_G1
 565

	)

2900 
	#R_AARCH64_TLSDESC_OFF_G0_NC
 566

	)

2901 
	#R_AARCH64_TLSDESC_LDR
 567

	)

2902 
	#R_AARCH64_TLSDESC_ADD
 568

	)

2903 
	#R_AARCH64_TLSDESC_CALL
 569

	)

2904 
	#R_AARCH64_TLSLE_LDST128_TPREL_LO12
 570

	)

2905 
	#R_AARCH64_TLSLE_LDST128_TPREL_LO12_NC
 571

	)

2906 
	#R_AARCH64_TLSLD_LDST128_DTPREL_LO12
 572

	)

2907 
	#R_AARCH64_TLSLD_LDST128_DTPREL_LO12_NC
 573

	)

2908 
	#R_AARCH64_COPY
 1024

	)

2909 
	#R_AARCH64_GLOB_DAT
 1025

	)

2910 
	#R_AARCH64_JUMP_SLOT
 1026

	)

2911 
	#R_AARCH64_RELATIVE
 1027

	)

2912 
	#R_AARCH64_TLS_DTPMOD
 1028

	)

2913 
	#R_AARCH64_TLS_DTPREL
 1029

	)

2914 
	#R_AARCH64_TLS_TPREL
 1030

	)

2915 
	#R_AARCH64_TLSDESC
 1031

	)

2916 
	#R_AARCH64_IRELATIVE
 1032

	)

2919 
	#PT_AARCH64_MEMTAG_MTE
 (
PT_LOPROC
 + 2)

	)

2922 
	#DT_AARCH64_BTI_PLT
 (
DT_LOPROC
 + 1)

	)

2923 
	#DT_AARCH64_PAC_PLT
 (
DT_LOPROC
 + 3)

	)

2924 
	#DT_AARCH64_VARIANT_PCS
 (
DT_LOPROC
 + 5)

	)

2925 
	#DT_AARCH64_NUM
 6

	)

2928 
	#STO_AARCH64_VARIANT_PCS
 0x80

	)

2932 
	#R_ARM_NONE
 0

	)

2933 
	#R_ARM_PC24
 1

	)

2935 
	#R_ARM_ABS32
 2

	)

2936 
	#R_ARM_REL32
 3

	)

2937 
	#R_ARM_PC13
 4

	)

2938 
	#R_ARM_ABS16
 5

	)

2939 
	#R_ARM_ABS12
 6

	)

2940 
	#R_ARM_THM_ABS5
 7

	)

2941 
	#R_ARM_ABS8
 8

	)

2942 
	#R_ARM_SBREL32
 9

	)

2943 
	#R_ARM_THM_PC22
 10

	)

2944 
	#R_ARM_THM_PC8
 11

	)

2946 
	#R_ARM_AMP_VCALL9
 12

	)

2947 
	#R_ARM_SWI24
 13

	)

2948 
	#R_ARM_TLS_DESC
 13

	)

2949 
	#R_ARM_THM_SWI8
 14

	)

2950 
	#R_ARM_XPC25
 15

	)

2951 
	#R_ARM_THM_XPC22
 16

	)

2952 
	#R_ARM_TLS_DTPMOD32
 17

	)

2953 
	#R_ARM_TLS_DTPOFF32
 18

	)

2954 
	#R_ARM_TLS_TPOFF32
 19

	)

2955 
	#R_ARM_COPY
 20

	)

2956 
	#R_ARM_GLOB_DAT
 21

	)

2957 
	#R_ARM_JUMP_SLOT
 22

	)

2958 
	#R_ARM_RELATIVE
 23

	)

2959 
	#R_ARM_GOTOFF
 24

	)

2960 
	#R_ARM_GOTPC
 25

	)

2961 
	#R_ARM_GOT32
 26

	)

2962 
	#R_ARM_PLT32
 27

	)

2963 
	#R_ARM_CALL
 28

	)

2964 
	#R_ARM_JUMP24
 29

	)

2966 
	#R_ARM_THM_JUMP24
 30

	)

2967 
	#R_ARM_BASE_ABS
 31

	)

2968 
	#R_ARM_ALU_PCREL_7_0
 32

	)

2969 
	#R_ARM_ALU_PCREL_15_8
 33

	)

2970 
	#R_ARM_ALU_PCREL_23_15
 34

	)

2971 
	#R_ARM_LDR_SBREL_11_0
 35

	)

2972 
	#R_ARM_ALU_SBREL_19_12
 36

	)

2973 
	#R_ARM_ALU_SBREL_27_20
 37

	)

2974 
	#R_ARM_TARGET1
 38

	)

2975 
	#R_ARM_SBREL31
 39

	)

2976 
	#R_ARM_V4BX
 40

	)

2977 
	#R_ARM_TARGET2
 41

	)

2978 
	#R_ARM_PREL31
 42

	)

2979 
	#R_ARM_MOVW_ABS_NC
 43

	)

2980 
	#R_ARM_MOVT_ABS
 44

	)

2981 
	#R_ARM_MOVW_PREL_NC
 45

	)

2982 
	#R_ARM_MOVT_PREL
 46

	)

2983 
	#R_ARM_THM_MOVW_ABS_NC
 47

	)

2984 
	#R_ARM_THM_MOVT_ABS
 48

	)

2986 
	#R_ARM_THM_MOVW_PREL_NC
 49

	)

2988 
	#R_ARM_THM_MOVT_PREL
 50

	)

2990 
	#R_ARM_THM_JUMP19
 51

	)

2992 
	#R_ARM_THM_JUMP6
 52

	)

2994 
	#R_ARM_THM_ALU_PREL_11_0
 53

	)

2996 
	#R_ARM_THM_PC12
 54

	)

2998 
	#R_ARM_ABS32_NOI
 55

	)

2999 
	#R_ARM_REL32_NOI
 56

	)

3000 
	#R_ARM_ALU_PC_G0_NC
 57

	)

3001 
	#R_ARM_ALU_PC_G0
 58

	)

3002 
	#R_ARM_ALU_PC_G1_NC
 59

	)

3003 
	#R_ARM_ALU_PC_G1
 60

	)

3004 
	#R_ARM_ALU_PC_G2
 61

	)

3005 
	#R_ARM_LDR_PC_G1
 62

	)

3006 
	#R_ARM_LDR_PC_G2
 63

	)

3007 
	#R_ARM_LDRS_PC_G0
 64

	)

3009 
	#R_ARM_LDRS_PC_G1
 65

	)

3011 
	#R_ARM_LDRS_PC_G2
 66

	)

3013 
	#R_ARM_LDC_PC_G0
 67

	)

3014 
	#R_ARM_LDC_PC_G1
 68

	)

3015 
	#R_ARM_LDC_PC_G2
 69

	)

3016 
	#R_ARM_ALU_SB_G0_NC
 70

	)

3017 
	#R_ARM_ALU_SB_G0
 71

	)

3018 
	#R_ARM_ALU_SB_G1_NC
 72

	)

3019 
	#R_ARM_ALU_SB_G1
 73

	)

3020 
	#R_ARM_ALU_SB_G2
 74

	)

3021 
	#R_ARM_LDR_SB_G0
 75

	)

3023 
	#R_ARM_LDR_SB_G1
 76

	)

3025 
	#R_ARM_LDR_SB_G2
 77

	)

3027 
	#R_ARM_LDRS_SB_G0
 78

	)

3029 
	#R_ARM_LDRS_SB_G1
 79

	)

3031 
	#R_ARM_LDRS_SB_G2
 80

	)

3033 
	#R_ARM_LDC_SB_G0
 81

	)

3034 
	#R_ARM_LDC_SB_G1
 82

	)

3035 
	#R_ARM_LDC_SB_G2
 83

	)

3036 
	#R_ARM_MOVW_BREL_NC
 84

	)

3038 
	#R_ARM_MOVT_BREL
 85

	)

3040 
	#R_ARM_MOVW_BREL
 86

	)

3042 
	#R_ARM_THM_MOVW_BREL_NC
 87

	)

3044 
	#R_ARM_THM_MOVT_BREL
 88

	)

3046 
	#R_ARM_THM_MOVW_BREL
 89

	)

3048 
	#R_ARM_TLS_GOTDESC
 90

	)

3049 
	#R_ARM_TLS_CALL
 91

	)

3050 
	#R_ARM_TLS_DESCSEQ
 92

	)

3051 
	#R_ARM_THM_TLS_CALL
 93

	)

3052 
	#R_ARM_PLT32_ABS
 94

	)

3053 
	#R_ARM_GOT_ABS
 95

	)

3054 
	#R_ARM_GOT_PREL
 96

	)

3055 
	#R_ARM_GOT_BREL12
 97

	)

3057 
	#R_ARM_GOTOFF12
 98

	)

3059 
	#R_ARM_GOTRELAX
 99

	)

3060 
	#R_ARM_GNU_VTENTRY
 100

	)

3061 
	#R_ARM_GNU_VTINHERIT
 101

	)

3062 
	#R_ARM_THM_PC11
 102

	)

3063 
	#R_ARM_THM_PC9
 103

	)

3065 
	#R_ARM_TLS_GD32
 104

	)

3067 
	#R_ARM_TLS_LDM32
 105

	)

3069 
	#R_ARM_TLS_LDO32
 106

	)

3071 
	#R_ARM_TLS_IE32
 107

	)

3073 
	#R_ARM_TLS_LE32
 108

	)

3075 
	#R_ARM_TLS_LDO12
 109

	)

3077 
	#R_ARM_TLS_LE12
 110

	)

3079 
	#R_ARM_TLS_IE12GP
 111

	)

3081 
	#R_ARM_ME_TOO
 128

	)

3082 
	#R_ARM_THM_TLS_DESCSEQ
 129

	)

3083 
	#R_ARM_THM_TLS_DESCSEQ16
 129

	)

3084 
	#R_ARM_THM_TLS_DESCSEQ32
 130

	)

3085 
	#R_ARM_THM_GOT_BREL12
 131

	)

3087 
	#R_ARM_IRELATIVE
 160

	)

3088 
	#R_ARM_RXPC25
 249

	)

3089 
	#R_ARM_RSBREL32
 250

	)

3090 
	#R_ARM_THM_RPC22
 251

	)

3091 
	#R_ARM_RREL32
 252

	)

3092 
	#R_ARM_RABS22
 253

	)

3093 
	#R_ARM_RPC24
 254

	)

3094 
	#R_ARM_RBASE
 255

	)

3096 
	#R_ARM_NUM
 256

	)

3099 
	#R_CKCORE_NONE
 0

	)

3100 
	#R_CKCORE_ADDR32
 1

	)

3101 
	#R_CKCORE_PCRELIMM8BY4
 2

	)

3102 
	#R_CKCORE_PCRELIMM11BY2
 3

	)

3103 
	#R_CKCORE_PCREL32
 5

	)

3104 
	#R_CKCORE_PCRELJSR_IMM11BY2
 6

	)

3105 
	#R_CKCORE_RELATIVE
 9

	)

3106 
	#R_CKCORE_COPY
 10

	)

3107 
	#R_CKCORE_GLOB_DAT
 11

	)

3108 
	#R_CKCORE_JUMP_SLOT
 12

	)

3109 
	#R_CKCORE_GOTOFF
 13

	)

3110 
	#R_CKCORE_GOTPC
 14

	)

3111 
	#R_CKCORE_GOT32
 15

	)

3112 
	#R_CKCORE_PLT32
 16

	)

3113 
	#R_CKCORE_ADDRGOT
 17

	)

3114 
	#R_CKCORE_ADDRPLT
 18

	)

3115 
	#R_CKCORE_PCREL_IMM26BY2
 19

	)

3116 
	#R_CKCORE_PCREL_IMM16BY2
 20

	)

3117 
	#R_CKCORE_PCREL_IMM16BY4
 21

	)

3118 
	#R_CKCORE_PCREL_IMM10BY2
 22

	)

3119 
	#R_CKCORE_PCREL_IMM10BY4
 23

	)

3120 
	#R_CKCORE_ADDR_HI16
 24

	)

3122 
	#R_CKCORE_ADDR_LO16
 25

	)

3123 
	#R_CKCORE_GOTPC_HI16
 26

	)

3125 
	#R_CKCORE_GOTPC_LO16
 27

	)

3126 
	#R_CKCORE_GOTOFF_HI16
 28

	)

3128 
	#R_CKCORE_GOTOFF_LO16
 29

	)

3129 
	#R_CKCORE_GOT12
 30

	)

3130 
	#R_CKCORE_GOT_HI16
 31

	)

3132 
	#R_CKCORE_GOT_LO16
 32

	)

3133 
	#R_CKCORE_PLT12
 33

	)

3134 
	#R_CKCORE_PLT_HI16
 34

	)

3136 
	#R_CKCORE_PLT_LO16
 35

	)

3137 
	#R_CKCORE_ADDRGOT_HI16
 36

	)

3139 
	#R_CKCORE_ADDRGOT_LO16
 37

	)

3140 
	#R_CKCORE_ADDRPLT_HI16
 38

	)

3142 
	#R_CKCORE_ADDRPLT_LO16
 39

	)

3143 
	#R_CKCORE_PCREL_JSR_IMM26BY2
 40

	)

3144 
	#R_CKCORE_TOFFSET_LO16
 41

	)

3145 
	#R_CKCORE_DOFFSET_LO16
 42

	)

3146 
	#R_CKCORE_PCREL_IMM18BY2
 43

	)

3147 
	#R_CKCORE_DOFFSET_IMM18
 44

	)

3148 
	#R_CKCORE_DOFFSET_IMM18BY2
 45

	)

3149 
	#R_CKCORE_DOFFSET_IMM18BY4
 46

	)

3150 
	#R_CKCORE_GOT_IMM18BY4
 48

	)

3151 
	#R_CKCORE_PLT_IMM18BY4
 49

	)

3152 
	#R_CKCORE_PCREL_IMM7BY4
 50

	)

3153 
	#R_CKCORE_TLS_LE32
 51

	)

3154 
	#R_CKCORE_TLS_IE32
 52

	)

3155 
	#R_CKCORE_TLS_GD32
 53

	)

3156 
	#R_CKCORE_TLS_LDM32
 54

	)

3157 
	#R_CKCORE_TLS_LDO32
 55

	)

3158 
	#R_CKCORE_TLS_DTPMOD32
 56

	)

3159 
	#R_CKCORE_TLS_DTPOFF32
 57

	)

3160 
	#R_CKCORE_TLS_TPOFF32
 58

	)

3163 
	#EF_CSKY_ABIMASK
 0XF0000000

	)

3164 
	#EF_CSKY_OTHER
 0X0FFF0000

	)

3165 
	#EF_CSKY_PROCESSOR
 0X0000FFFF

	)

3167 
	#EF_CSKY_ABIV1
 0X10000000

	)

3168 
	#EF_CSKY_ABIV2
 0X20000000

	)

3171 
	#SHT_CSKY_ATTRIBUTES
 (
SHT_LOPROC
 + 1)

	)

3176 
	#EF_IA_64_MASKOS
 0x0000000‡

	)

3177 
	#EF_IA_64_ABI64
 0x00000010

	)

3178 
	#EF_IA_64_ARCH
 0xff000000

	)

3181 
	#PT_IA_64_ARCHEXT
 (
PT_LOPROC
 + 0Ë

	)

3182 
	#PT_IA_64_UNWIND
 (
PT_LOPROC
 + 1Ë

	)

3183 
	#PT_IA_64_HP_OPT_ANOT
 (
PT_LOOS
 + 0x12)

	)

3184 
	#PT_IA_64_HP_HSL_ANOT
 (
PT_LOOS
 + 0x13)

	)

3185 
	#PT_IA_64_HP_STACK
 (
PT_LOOS
 + 0x14)

	)

3188 
	#PF_IA_64_NORECOV
 0x80000000

	)

3191 
	#SHT_IA_64_EXT
 (
SHT_LOPROC
 + 0Ë

	)

3192 
	#SHT_IA_64_UNWIND
 (
SHT_LOPROC
 + 1Ë

	)

3195 
	#SHF_IA_64_SHORT
 0x10000000

	)

3196 
	#SHF_IA_64_NORECOV
 0x20000000

	)

3199 
	#DT_IA_64_PLT_RESERVE
 (
DT_LOPROC
 + 0)

	)

3200 
	#DT_IA_64_NUM
 1

	)

3203 
	#R_IA64_NONE
 0x00

	)

3204 
	#R_IA64_IMM14
 0x21

	)

3205 
	#R_IA64_IMM22
 0x22

	)

3206 
	#R_IA64_IMM64
 0x23

	)

3207 
	#R_IA64_DIR32MSB
 0x24

	)

3208 
	#R_IA64_DIR32LSB
 0x25

	)

3209 
	#R_IA64_DIR64MSB
 0x26

	)

3210 
	#R_IA64_DIR64LSB
 0x27

	)

3211 
	#R_IA64_GPREL22
 0x2®

	)

3212 
	#R_IA64_GPREL64I
 0x2b

	)

3213 
	#R_IA64_GPREL32MSB
 0x2¯

	)

3214 
	#R_IA64_GPREL32LSB
 0x2d

	)

3215 
	#R_IA64_GPREL64MSB
 0x2ê

	)

3216 
	#R_IA64_GPREL64LSB
 0x2‡

	)

3217 
	#R_IA64_LTOFF22
 0x32

	)

3218 
	#R_IA64_LTOFF64I
 0x33

	)

3219 
	#R_IA64_PLTOFF22
 0x3®

	)

3220 
	#R_IA64_PLTOFF64I
 0x3b

	)

3221 
	#R_IA64_PLTOFF64MSB
 0x3ê

	)

3222 
	#R_IA64_PLTOFF64LSB
 0x3‡

	)

3223 
	#R_IA64_FPTR64I
 0x43

	)

3224 
	#R_IA64_FPTR32MSB
 0x44

	)

3225 
	#R_IA64_FPTR32LSB
 0x45

	)

3226 
	#R_IA64_FPTR64MSB
 0x46

	)

3227 
	#R_IA64_FPTR64LSB
 0x47

	)

3228 
	#R_IA64_PCREL60B
 0x48

	)

3229 
	#R_IA64_PCREL21B
 0x49

	)

3230 
	#R_IA64_PCREL21M
 0x4®

	)

3231 
	#R_IA64_PCREL21F
 0x4b

	)

3232 
	#R_IA64_PCREL32MSB
 0x4¯

	)

3233 
	#R_IA64_PCREL32LSB
 0x4d

	)

3234 
	#R_IA64_PCREL64MSB
 0x4ê

	)

3235 
	#R_IA64_PCREL64LSB
 0x4‡

	)

3236 
	#R_IA64_LTOFF_FPTR22
 0x52

	)

3237 
	#R_IA64_LTOFF_FPTR64I
 0x53

	)

3238 
	#R_IA64_LTOFF_FPTR32MSB
 0x54

	)

3239 
	#R_IA64_LTOFF_FPTR32LSB
 0x55

	)

3240 
	#R_IA64_LTOFF_FPTR64MSB
 0x56

	)

3241 
	#R_IA64_LTOFF_FPTR64LSB
 0x57

	)

3242 
	#R_IA64_SEGREL32MSB
 0x5¯

	)

3243 
	#R_IA64_SEGREL32LSB
 0x5d

	)

3244 
	#R_IA64_SEGREL64MSB
 0x5ê

	)

3245 
	#R_IA64_SEGREL64LSB
 0x5‡

	)

3246 
	#R_IA64_SECREL32MSB
 0x64

	)

3247 
	#R_IA64_SECREL32LSB
 0x65

	)

3248 
	#R_IA64_SECREL64MSB
 0x66

	)

3249 
	#R_IA64_SECREL64LSB
 0x67

	)

3250 
	#R_IA64_REL32MSB
 0x6¯

	)

3251 
	#R_IA64_REL32LSB
 0x6d

	)

3252 
	#R_IA64_REL64MSB
 0x6ê

	)

3253 
	#R_IA64_REL64LSB
 0x6‡

	)

3254 
	#R_IA64_LTV32MSB
 0x74

	)

3255 
	#R_IA64_LTV32LSB
 0x75

	)

3256 
	#R_IA64_LTV64MSB
 0x76

	)

3257 
	#R_IA64_LTV64LSB
 0x77

	)

3258 
	#R_IA64_PCREL21BI
 0x79

	)

3259 
	#R_IA64_PCREL22
 0x7®

	)

3260 
	#R_IA64_PCREL64I
 0x7b

	)

3261 
	#R_IA64_IPLTMSB
 0x80

	)

3262 
	#R_IA64_IPLTLSB
 0x81

	)

3263 
	#R_IA64_COPY
 0x84

	)

3264 
	#R_IA64_SUB
 0x85

	)

3265 
	#R_IA64_LTOFF22X
 0x86

	)

3266 
	#R_IA64_LDXMOV
 0x87

	)

3267 
	#R_IA64_TPREL14
 0x91

	)

3268 
	#R_IA64_TPREL22
 0x92

	)

3269 
	#R_IA64_TPREL64I
 0x93

	)

3270 
	#R_IA64_TPREL64MSB
 0x96

	)

3271 
	#R_IA64_TPREL64LSB
 0x97

	)

3272 
	#R_IA64_LTOFF_TPREL22
 0x9®

	)

3273 
	#R_IA64_DTPMOD64MSB
 0xa6

	)

3274 
	#R_IA64_DTPMOD64LSB
 0xa7

	)

3275 
	#R_IA64_LTOFF_DTPMOD22
 0xØ

	)

3276 
	#R_IA64_DTPREL14
 0xb1

	)

3277 
	#R_IA64_DTPREL22
 0xb2

	)

3278 
	#R_IA64_DTPREL64I
 0xb3

	)

3279 
	#R_IA64_DTPREL32MSB
 0xb4

	)

3280 
	#R_IA64_DTPREL32LSB
 0xb5

	)

3281 
	#R_IA64_DTPREL64MSB
 0xb6

	)

3282 
	#R_IA64_DTPREL64LSB
 0xb7

	)

3283 
	#R_IA64_LTOFF_DTPREL22
 0xb®

	)

3288 
	#EF_SH_MACH_MASK
 0x1f

	)

3289 
	#EF_SH_UNKNOWN
 0x0

	)

3290 
	#EF_SH1
 0x1

	)

3291 
	#EF_SH2
 0x2

	)

3292 
	#EF_SH3
 0x3

	)

3293 
	#EF_SH_DSP
 0x4

	)

3294 
	#EF_SH3_DSP
 0x5

	)

3295 
	#EF_SH4AL_DSP
 0x6

	)

3296 
	#EF_SH3E
 0x8

	)

3297 
	#EF_SH4
 0x9

	)

3298 
	#EF_SH2E
 0xb

	)

3299 
	#EF_SH4A
 0xc

	)

3300 
	#EF_SH2A
 0xd

	)

3301 
	#EF_SH4_NOFPU
 0x10

	)

3302 
	#EF_SH4A_NOFPU
 0x11

	)

3303 
	#EF_SH4_NOMMU_NOFPU
 0x12

	)

3304 
	#EF_SH2A_NOFPU
 0x13

	)

3305 
	#EF_SH3_NOMMU
 0x14

	)

3306 
	#EF_SH2A_SH4_NOFPU
 0x15

	)

3307 
	#EF_SH2A_SH3_NOFPU
 0x16

	)

3308 
	#EF_SH2A_SH4
 0x17

	)

3309 
	#EF_SH2A_SH3E
 0x18

	)

3312 
	#R_SH_NONE
 0

	)

3313 
	#R_SH_DIR32
 1

	)

3314 
	#R_SH_REL32
 2

	)

3315 
	#R_SH_DIR8WPN
 3

	)

3316 
	#R_SH_IND12W
 4

	)

3317 
	#R_SH_DIR8WPL
 5

	)

3318 
	#R_SH_DIR8WPZ
 6

	)

3319 
	#R_SH_DIR8BP
 7

	)

3320 
	#R_SH_DIR8W
 8

	)

3321 
	#R_SH_DIR8L
 9

	)

3322 
	#R_SH_SWITCH16
 25

	)

3323 
	#R_SH_SWITCH32
 26

	)

3324 
	#R_SH_USES
 27

	)

3325 
	#R_SH_COUNT
 28

	)

3326 
	#R_SH_ALIGN
 29

	)

3327 
	#R_SH_CODE
 30

	)

3328 
	#R_SH_DATA
 31

	)

3329 
	#R_SH_LABEL
 32

	)

3330 
	#R_SH_SWITCH8
 33

	)

3331 
	#R_SH_GNU_VTINHERIT
 34

	)

3332 
	#R_SH_GNU_VTENTRY
 35

	)

3333 
	#R_SH_TLS_GD_32
 144

	)

3334 
	#R_SH_TLS_LD_32
 145

	)

3335 
	#R_SH_TLS_LDO_32
 146

	)

3336 
	#R_SH_TLS_IE_32
 147

	)

3337 
	#R_SH_TLS_LE_32
 148

	)

3338 
	#R_SH_TLS_DTPMOD32
 149

	)

3339 
	#R_SH_TLS_DTPOFF32
 150

	)

3340 
	#R_SH_TLS_TPOFF32
 151

	)

3341 
	#R_SH_GOT32
 160

	)

3342 
	#R_SH_PLT32
 161

	)

3343 
	#R_SH_COPY
 162

	)

3344 
	#R_SH_GLOB_DAT
 163

	)

3345 
	#R_SH_JMP_SLOT
 164

	)

3346 
	#R_SH_RELATIVE
 165

	)

3347 
	#R_SH_GOTOFF
 166

	)

3348 
	#R_SH_GOTPC
 167

	)

3350 
	#R_SH_NUM
 256

	)

3356 
	#EF_S390_HIGH_GPRS
 0x00000001

	)

3360 
	#R_390_NONE
 0

	)

3361 
	#R_390_8
 1

	)

3362 
	#R_390_12
 2

	)

3363 
	#R_390_16
 3

	)

3364 
	#R_390_32
 4

	)

3365 
	#R_390_PC32
 5

	)

3366 
	#R_390_GOT12
 6

	)

3367 
	#R_390_GOT32
 7

	)

3368 
	#R_390_PLT32
 8

	)

3369 
	#R_390_COPY
 9

	)

3370 
	#R_390_GLOB_DAT
 10

	)

3371 
	#R_390_JMP_SLOT
 11

	)

3372 
	#R_390_RELATIVE
 12

	)

3373 
	#R_390_GOTOFF32
 13

	)

3374 
	#R_390_GOTPC
 14

	)

3375 
	#R_390_GOT16
 15

	)

3376 
	#R_390_PC16
 16

	)

3377 
	#R_390_PC16DBL
 17

	)

3378 
	#R_390_PLT16DBL
 18

	)

3379 
	#R_390_PC32DBL
 19

	)

3380 
	#R_390_PLT32DBL
 20

	)

3381 
	#R_390_GOTPCDBL
 21

	)

3382 
	#R_390_64
 22

	)

3383 
	#R_390_PC64
 23

	)

3384 
	#R_390_GOT64
 24

	)

3385 
	#R_390_PLT64
 25

	)

3386 
	#R_390_GOTENT
 26

	)

3387 
	#R_390_GOTOFF16
 27

	)

3388 
	#R_390_GOTOFF64
 28

	)

3389 
	#R_390_GOTPLT12
 29

	)

3390 
	#R_390_GOTPLT16
 30

	)

3391 
	#R_390_GOTPLT32
 31

	)

3392 
	#R_390_GOTPLT64
 32

	)

3393 
	#R_390_GOTPLTENT
 33

	)

3394 
	#R_390_PLTOFF16
 34

	)

3395 
	#R_390_PLTOFF32
 35

	)

3396 
	#R_390_PLTOFF64
 36

	)

3397 
	#R_390_TLS_LOAD
 37

	)

3398 
	#R_390_TLS_GDCALL
 38

	)

3400 
	#R_390_TLS_LDCALL
 39

	)

3402 
	#R_390_TLS_GD32
 40

	)

3404 
	#R_390_TLS_GD64
 41

	)

3406 
	#R_390_TLS_GOTIE12
 42

	)

3408 
	#R_390_TLS_GOTIE32
 43

	)

3410 
	#R_390_TLS_GOTIE64
 44

	)

3412 
	#R_390_TLS_LDM32
 45

	)

3414 
	#R_390_TLS_LDM64
 46

	)

3416 
	#R_390_TLS_IE32
 47

	)

3418 
	#R_390_TLS_IE64
 48

	)

3420 
	#R_390_TLS_IEENT
 49

	)

3422 
	#R_390_TLS_LE32
 50

	)

3424 
	#R_390_TLS_LE64
 51

	)

3426 
	#R_390_TLS_LDO32
 52

	)

3428 
	#R_390_TLS_LDO64
 53

	)

3430 
	#R_390_TLS_DTPMOD
 54

	)

3431 
	#R_390_TLS_DTPOFF
 55

	)

3432 
	#R_390_TLS_TPOFF
 56

	)

3434 
	#R_390_20
 57

	)

3435 
	#R_390_GOT20
 58

	)

3436 
	#R_390_GOTPLT20
 59

	)

3437 
	#R_390_TLS_GOTIE20
 60

	)

3439 
	#R_390_IRELATIVE
 61

	)

3441 
	#R_390_NUM
 62

	)

3445 
	#R_CRIS_NONE
 0

	)

3446 
	#R_CRIS_8
 1

	)

3447 
	#R_CRIS_16
 2

	)

3448 
	#R_CRIS_32
 3

	)

3449 
	#R_CRIS_8_PCREL
 4

	)

3450 
	#R_CRIS_16_PCREL
 5

	)

3451 
	#R_CRIS_32_PCREL
 6

	)

3452 
	#R_CRIS_GNU_VTINHERIT
 7

	)

3453 
	#R_CRIS_GNU_VTENTRY
 8

	)

3454 
	#R_CRIS_COPY
 9

	)

3455 
	#R_CRIS_GLOB_DAT
 10

	)

3456 
	#R_CRIS_JUMP_SLOT
 11

	)

3457 
	#R_CRIS_RELATIVE
 12

	)

3458 
	#R_CRIS_16_GOT
 13

	)

3459 
	#R_CRIS_32_GOT
 14

	)

3460 
	#R_CRIS_16_GOTPLT
 15

	)

3461 
	#R_CRIS_32_GOTPLT
 16

	)

3462 
	#R_CRIS_32_GOTREL
 17

	)

3463 
	#R_CRIS_32_PLT_GOTREL
 18

	)

3464 
	#R_CRIS_32_PLT_PCREL
 19

	)

3466 
	#R_CRIS_NUM
 20

	)

3470 
	#R_X86_64_NONE
 0

	)

3471 
	#R_X86_64_64
 1

	)

3472 
	#R_X86_64_PC32
 2

	)

3473 
	#R_X86_64_GOT32
 3

	)

3474 
	#R_X86_64_PLT32
 4

	)

3475 
	#R_X86_64_COPY
 5

	)

3476 
	#R_X86_64_GLOB_DAT
 6

	)

3477 
	#R_X86_64_JUMP_SLOT
 7

	)

3478 
	#R_X86_64_RELATIVE
 8

	)

3479 
	#R_X86_64_GOTPCREL
 9

	)

3481 
	#R_X86_64_32
 10

	)

3482 
	#R_X86_64_32S
 11

	)

3483 
	#R_X86_64_16
 12

	)

3484 
	#R_X86_64_PC16
 13

	)

3485 
	#R_X86_64_8
 14

	)

3486 
	#R_X86_64_PC8
 15

	)

3487 
	#R_X86_64_DTPMOD64
 16

	)

3488 
	#R_X86_64_DTPOFF64
 17

	)

3489 
	#R_X86_64_TPOFF64
 18

	)

3490 
	#R_X86_64_TLSGD
 19

	)

3492 
	#R_X86_64_TLSLD
 20

	)

3494 
	#R_X86_64_DTPOFF32
 21

	)

3495 
	#R_X86_64_GOTTPOFF
 22

	)

3497 
	#R_X86_64_TPOFF32
 23

	)

3498 
	#R_X86_64_PC64
 24

	)

3499 
	#R_X86_64_GOTOFF64
 25

	)

3500 
	#R_X86_64_GOTPC32
 26

	)

3502 
	#R_X86_64_GOT64
 27

	)

3503 
	#R_X86_64_GOTPCREL64
 28

	)

3505 
	#R_X86_64_GOTPC64
 29

	)

3506 
	#R_X86_64_GOTPLT64
 30

	)

3507 
	#R_X86_64_PLTOFF64
 31

	)

3509 
	#R_X86_64_SIZE32
 32

	)

3510 
	#R_X86_64_SIZE64
 33

	)

3511 
	#R_X86_64_GOTPC32_TLSDESC
 34

	)

3512 
	#R_X86_64_TLSDESC_CALL
 35

	)

3514 
	#R_X86_64_TLSDESC
 36

	)

3515 
	#R_X86_64_IRELATIVE
 37

	)

3516 
	#R_X86_64_RELATIVE64
 38

	)

3519 
	#R_X86_64_GOTPCRELX
 41

	)

3522 
	#R_X86_64_REX_GOTPCRELX
 42

	)

3525 
	#R_X86_64_NUM
 43

	)

3528 
	#SHT_X86_64_UNWIND
 0x70000001

	)

3532 
	#R_MN10300_NONE
 0

	)

3533 
	#R_MN10300_32
 1

	)

3534 
	#R_MN10300_16
 2

	)

3535 
	#R_MN10300_8
 3

	)

3536 
	#R_MN10300_PCREL32
 4

	)

3537 
	#R_MN10300_PCREL16
 5

	)

3538 
	#R_MN10300_PCREL8
 6

	)

3539 
	#R_MN10300_GNU_VTINHERIT
 7

	)

3540 
	#R_MN10300_GNU_VTENTRY
 8

	)

3541 
	#R_MN10300_24
 9

	)

3542 
	#R_MN10300_GOTPC32
 10

	)

3543 
	#R_MN10300_GOTPC16
 11

	)

3544 
	#R_MN10300_GOTOFF32
 12

	)

3545 
	#R_MN10300_GOTOFF24
 13

	)

3546 
	#R_MN10300_GOTOFF16
 14

	)

3547 
	#R_MN10300_PLT32
 15

	)

3548 
	#R_MN10300_PLT16
 16

	)

3549 
	#R_MN10300_GOT32
 17

	)

3550 
	#R_MN10300_GOT24
 18

	)

3551 
	#R_MN10300_GOT16
 19

	)

3552 
	#R_MN10300_COPY
 20

	)

3553 
	#R_MN10300_GLOB_DAT
 21

	)

3554 
	#R_MN10300_JMP_SLOT
 22

	)

3555 
	#R_MN10300_RELATIVE
 23

	)

3556 
	#R_MN10300_TLS_GD
 24

	)

3557 
	#R_MN10300_TLS_LD
 25

	)

3558 
	#R_MN10300_TLS_LDO
 26

	)

3559 
	#R_MN10300_TLS_GOTIE
 27

	)

3561 
	#R_MN10300_TLS_IE
 28

	)

3563 
	#R_MN10300_TLS_LE
 29

	)

3565 
	#R_MN10300_TLS_DTPMOD
 30

	)

3566 
	#R_MN10300_TLS_DTPOFF
 31

	)

3567 
	#R_MN10300_TLS_TPOFF
 32

	)

3568 
	#R_MN10300_SYM_DIFF
 33

	)

3570 
	#R_MN10300_ALIGN
 34

	)

3572 
	#R_MN10300_NUM
 35

	)

3576 
	#R_M32R_NONE
 0

	)

3577 
	#R_M32R_16
 1

	)

3578 
	#R_M32R_32
 2

	)

3579 
	#R_M32R_24
 3

	)

3580 
	#R_M32R_10_PCREL
 4

	)

3581 
	#R_M32R_18_PCREL
 5

	)

3582 
	#R_M32R_26_PCREL
 6

	)

3583 
	#R_M32R_HI16_ULO
 7

	)

3584 
	#R_M32R_HI16_SLO
 8

	)

3585 
	#R_M32R_LO16
 9

	)

3586 
	#R_M32R_SDA16
 10

	)

3587 
	#R_M32R_GNU_VTINHERIT
 11

	)

3588 
	#R_M32R_GNU_VTENTRY
 12

	)

3590 
	#R_M32R_16_RELA
 33

	)

3591 
	#R_M32R_32_RELA
 34

	)

3592 
	#R_M32R_24_RELA
 35

	)

3593 
	#R_M32R_10_PCREL_RELA
 36

	)

3594 
	#R_M32R_18_PCREL_RELA
 37

	)

3595 
	#R_M32R_26_PCREL_RELA
 38

	)

3596 
	#R_M32R_HI16_ULO_RELA
 39

	)

3597 
	#R_M32R_HI16_SLO_RELA
 40

	)

3598 
	#R_M32R_LO16_RELA
 41

	)

3599 
	#R_M32R_SDA16_RELA
 42

	)

3600 
	#R_M32R_RELA_GNU_VTINHERIT
 43

	)

3601 
	#R_M32R_RELA_GNU_VTENTRY
 44

	)

3602 
	#R_M32R_REL32
 45

	)

3604 
	#R_M32R_GOT24
 48

	)

3605 
	#R_M32R_26_PLTREL
 49

	)

3606 
	#R_M32R_COPY
 50

	)

3607 
	#R_M32R_GLOB_DAT
 51

	)

3608 
	#R_M32R_JMP_SLOT
 52

	)

3609 
	#R_M32R_RELATIVE
 53

	)

3610 
	#R_M32R_GOTOFF
 54

	)

3611 
	#R_M32R_GOTPC24
 55

	)

3612 
	#R_M32R_GOT16_HI_ULO
 56

	)

3614 
	#R_M32R_GOT16_HI_SLO
 57

	)

3616 
	#R_M32R_GOT16_LO
 58

	)

3617 
	#R_M32R_GOTPC_HI_ULO
 59

	)

3619 
	#R_M32R_GOTPC_HI_SLO
 60

	)

3621 
	#R_M32R_GOTPC_LO
 61

	)

3623 
	#R_M32R_GOTOFF_HI_ULO
 62

	)

3625 
	#R_M32R_GOTOFF_HI_SLO
 63

	)

3627 
	#R_M32R_GOTOFF_LO
 64

	)

3628 
	#R_M32R_NUM
 256

	)

3631 
	#R_MICROBLAZE_NONE
 0

	)

3632 
	#R_MICROBLAZE_32
 1

	)

3633 
	#R_MICROBLAZE_32_PCREL
 2

	)

3634 
	#R_MICROBLAZE_64_PCREL
 3

	)

3635 
	#R_MICROBLAZE_32_PCREL_LO
 4

	)

3636 
	#R_MICROBLAZE_64
 5

	)

3637 
	#R_MICROBLAZE_32_LO
 6

	)

3638 
	#R_MICROBLAZE_SRO32
 7

	)

3639 
	#R_MICROBLAZE_SRW32
 8

	)

3640 
	#R_MICROBLAZE_64_NONE
 9

	)

3641 
	#R_MICROBLAZE_32_SYM_OP_SYM
 10

	)

3642 
	#R_MICROBLAZE_GNU_VTINHERIT
 11

	)

3643 
	#R_MICROBLAZE_GNU_VTENTRY
 12

	)

3644 
	#R_MICROBLAZE_GOTPC_64
 13

	)

3645 
	#R_MICROBLAZE_GOT_64
 14

	)

3646 
	#R_MICROBLAZE_PLT_64
 15

	)

3647 
	#R_MICROBLAZE_REL
 16

	)

3648 
	#R_MICROBLAZE_JUMP_SLOT
 17

	)

3649 
	#R_MICROBLAZE_GLOB_DAT
 18

	)

3650 
	#R_MICROBLAZE_GOTOFF_64
 19

	)

3651 
	#R_MICROBLAZE_GOTOFF_32
 20

	)

3652 
	#R_MICROBLAZE_COPY
 21

	)

3653 
	#R_MICROBLAZE_TLS
 22

	)

3654 
	#R_MICROBLAZE_TLSGD
 23

	)

3655 
	#R_MICROBLAZE_TLSLD
 24

	)

3656 
	#R_MICROBLAZE_TLSDTPMOD32
 25

	)

3657 
	#R_MICROBLAZE_TLSDTPREL32
 26

	)

3658 
	#R_MICROBLAZE_TLSDTPREL64
 27

	)

3659 
	#R_MICROBLAZE_TLSGOTTPREL32
 28

	)

3660 
	#R_MICROBLAZE_TLSTPREL32
 29

	)

3663 
	#DT_NIOS2_GP
 0x70000002

	)

3666 
	#R_NIOS2_NONE
 0

	)

3667 
	#R_NIOS2_S16
 1

	)

3668 
	#R_NIOS2_U16
 2

	)

3669 
	#R_NIOS2_PCREL16
 3

	)

3670 
	#R_NIOS2_CALL26
 4

	)

3671 
	#R_NIOS2_IMM5
 5

	)

3672 
	#R_NIOS2_CACHE_OPX
 6

	)

3673 
	#R_NIOS2_IMM6
 7

	)

3674 
	#R_NIOS2_IMM8
 8

	)

3675 
	#R_NIOS2_HI16
 9

	)

3676 
	#R_NIOS2_LO16
 10

	)

3677 
	#R_NIOS2_HIADJ16
 11

	)

3678 
	#R_NIOS2_BFD_RELOC_32
 12

	)

3679 
	#R_NIOS2_BFD_RELOC_16
 13

	)

3680 
	#R_NIOS2_BFD_RELOC_8
 14

	)

3681 
	#R_NIOS2_GPREL
 15

	)

3682 
	#R_NIOS2_GNU_VTINHERIT
 16

	)

3683 
	#R_NIOS2_GNU_VTENTRY
 17

	)

3684 
	#R_NIOS2_UJMP
 18

	)

3685 
	#R_NIOS2_CJMP
 19

	)

3686 
	#R_NIOS2_CALLR
 20

	)

3687 
	#R_NIOS2_ALIGN
 21

	)

3689 
	#R_NIOS2_GOT16
 22

	)

3690 
	#R_NIOS2_CALL16
 23

	)

3691 
	#R_NIOS2_GOTOFF_LO
 24

	)

3692 
	#R_NIOS2_GOTOFF_HA
 25

	)

3693 
	#R_NIOS2_PCREL_LO
 26

	)

3694 
	#R_NIOS2_PCREL_HA
 27

	)

3695 
	#R_NIOS2_TLS_GD16
 28

	)

3696 
	#R_NIOS2_TLS_LDM16
 29

	)

3697 
	#R_NIOS2_TLS_LDO16
 30

	)

3698 
	#R_NIOS2_TLS_IE16
 31

	)

3699 
	#R_NIOS2_TLS_LE16
 32

	)

3700 
	#R_NIOS2_TLS_DTPMOD
 33

	)

3701 
	#R_NIOS2_TLS_DTPREL
 34

	)

3702 
	#R_NIOS2_TLS_TPREL
 35

	)

3703 
	#R_NIOS2_COPY
 36

	)

3704 
	#R_NIOS2_GLOB_DAT
 37

	)

3705 
	#R_NIOS2_JUMP_SLOT
 38

	)

3706 
	#R_NIOS2_RELATIVE
 39

	)

3707 
	#R_NIOS2_GOTOFF
 40

	)

3708 
	#R_NIOS2_CALL26_NOAT
 41

	)

3709 
	#R_NIOS2_GOT_LO
 42

	)

3710 
	#R_NIOS2_GOT_HA
 43

	)

3711 
	#R_NIOS2_CALL_LO
 44

	)

3712 
	#R_NIOS2_CALL_HA
 45

	)

3715 
	#R_TILEPRO_NONE
 0

	)

3716 
	#R_TILEPRO_32
 1

	)

3717 
	#R_TILEPRO_16
 2

	)

3718 
	#R_TILEPRO_8
 3

	)

3719 
	#R_TILEPRO_32_PCREL
 4

	)

3720 
	#R_TILEPRO_16_PCREL
 5

	)

3721 
	#R_TILEPRO_8_PCREL
 6

	)

3722 
	#R_TILEPRO_LO16
 7

	)

3723 
	#R_TILEPRO_HI16
 8

	)

3724 
	#R_TILEPRO_HA16
 9

	)

3725 
	#R_TILEPRO_COPY
 10

	)

3726 
	#R_TILEPRO_GLOB_DAT
 11

	)

3727 
	#R_TILEPRO_JMP_SLOT
 12

	)

3728 
	#R_TILEPRO_RELATIVE
 13

	)

3729 
	#R_TILEPRO_BROFF_X1
 14

	)

3730 
	#R_TILEPRO_JOFFLONG_X1
 15

	)

3731 
	#R_TILEPRO_JOFFLONG_X1_PLT
 16

	)

3732 
	#R_TILEPRO_IMM8_X0
 17

	)

3733 
	#R_TILEPRO_IMM8_Y0
 18

	)

3734 
	#R_TILEPRO_IMM8_X1
 19

	)

3735 
	#R_TILEPRO_IMM8_Y1
 20

	)

3736 
	#R_TILEPRO_MT_IMM15_X1
 21

	)

3737 
	#R_TILEPRO_MF_IMM15_X1
 22

	)

3738 
	#R_TILEPRO_IMM16_X0
 23

	)

3739 
	#R_TILEPRO_IMM16_X1
 24

	)

3740 
	#R_TILEPRO_IMM16_X0_LO
 25

	)

3741 
	#R_TILEPRO_IMM16_X1_LO
 26

	)

3742 
	#R_TILEPRO_IMM16_X0_HI
 27

	)

3743 
	#R_TILEPRO_IMM16_X1_HI
 28

	)

3744 
	#R_TILEPRO_IMM16_X0_HA
 29

	)

3745 
	#R_TILEPRO_IMM16_X1_HA
 30

	)

3746 
	#R_TILEPRO_IMM16_X0_PCREL
 31

	)

3747 
	#R_TILEPRO_IMM16_X1_PCREL
 32

	)

3748 
	#R_TILEPRO_IMM16_X0_LO_PCREL
 33

	)

3749 
	#R_TILEPRO_IMM16_X1_LO_PCREL
 34

	)

3750 
	#R_TILEPRO_IMM16_X0_HI_PCREL
 35

	)

3751 
	#R_TILEPRO_IMM16_X1_HI_PCREL
 36

	)

3752 
	#R_TILEPRO_IMM16_X0_HA_PCREL
 37

	)

3753 
	#R_TILEPRO_IMM16_X1_HA_PCREL
 38

	)

3754 
	#R_TILEPRO_IMM16_X0_GOT
 39

	)

3755 
	#R_TILEPRO_IMM16_X1_GOT
 40

	)

3756 
	#R_TILEPRO_IMM16_X0_GOT_LO
 41

	)

3757 
	#R_TILEPRO_IMM16_X1_GOT_LO
 42

	)

3758 
	#R_TILEPRO_IMM16_X0_GOT_HI
 43

	)

3759 
	#R_TILEPRO_IMM16_X1_GOT_HI
 44

	)

3760 
	#R_TILEPRO_IMM16_X0_GOT_HA
 45

	)

3761 
	#R_TILEPRO_IMM16_X1_GOT_HA
 46

	)

3762 
	#R_TILEPRO_MMSTART_X0
 47

	)

3763 
	#R_TILEPRO_MMEND_X0
 48

	)

3764 
	#R_TILEPRO_MMSTART_X1
 49

	)

3765 
	#R_TILEPRO_MMEND_X1
 50

	)

3766 
	#R_TILEPRO_SHAMT_X0
 51

	)

3767 
	#R_TILEPRO_SHAMT_X1
 52

	)

3768 
	#R_TILEPRO_SHAMT_Y0
 53

	)

3769 
	#R_TILEPRO_SHAMT_Y1
 54

	)

3770 
	#R_TILEPRO_DEST_IMM8_X1
 55

	)

3772 
	#R_TILEPRO_TLS_GD_CALL
 60

	)

3773 
	#R_TILEPRO_IMM8_X0_TLS_GD_ADD
 61

	)

3774 
	#R_TILEPRO_IMM8_X1_TLS_GD_ADD
 62

	)

3775 
	#R_TILEPRO_IMM8_Y0_TLS_GD_ADD
 63

	)

3776 
	#R_TILEPRO_IMM8_Y1_TLS_GD_ADD
 64

	)

3777 
	#R_TILEPRO_TLS_IE_LOAD
 65

	)

3778 
	#R_TILEPRO_IMM16_X0_TLS_GD
 66

	)

3779 
	#R_TILEPRO_IMM16_X1_TLS_GD
 67

	)

3780 
	#R_TILEPRO_IMM16_X0_TLS_GD_LO
 68

	)

3781 
	#R_TILEPRO_IMM16_X1_TLS_GD_LO
 69

	)

3782 
	#R_TILEPRO_IMM16_X0_TLS_GD_HI
 70

	)

3783 
	#R_TILEPRO_IMM16_X1_TLS_GD_HI
 71

	)

3784 
	#R_TILEPRO_IMM16_X0_TLS_GD_HA
 72

	)

3785 
	#R_TILEPRO_IMM16_X1_TLS_GD_HA
 73

	)

3786 
	#R_TILEPRO_IMM16_X0_TLS_IE
 74

	)

3787 
	#R_TILEPRO_IMM16_X1_TLS_IE
 75

	)

3788 
	#R_TILEPRO_IMM16_X0_TLS_IE_LO
 76

	)

3789 
	#R_TILEPRO_IMM16_X1_TLS_IE_LO
 77

	)

3790 
	#R_TILEPRO_IMM16_X0_TLS_IE_HI
 78

	)

3791 
	#R_TILEPRO_IMM16_X1_TLS_IE_HI
 79

	)

3792 
	#R_TILEPRO_IMM16_X0_TLS_IE_HA
 80

	)

3793 
	#R_TILEPRO_IMM16_X1_TLS_IE_HA
 81

	)

3794 
	#R_TILEPRO_TLS_DTPMOD32
 82

	)

3795 
	#R_TILEPRO_TLS_DTPOFF32
 83

	)

3796 
	#R_TILEPRO_TLS_TPOFF32
 84

	)

3797 
	#R_TILEPRO_IMM16_X0_TLS_LE
 85

	)

3798 
	#R_TILEPRO_IMM16_X1_TLS_LE
 86

	)

3799 
	#R_TILEPRO_IMM16_X0_TLS_LE_LO
 87

	)

3800 
	#R_TILEPRO_IMM16_X1_TLS_LE_LO
 88

	)

3801 
	#R_TILEPRO_IMM16_X0_TLS_LE_HI
 89

	)

3802 
	#R_TILEPRO_IMM16_X1_TLS_LE_HI
 90

	)

3803 
	#R_TILEPRO_IMM16_X0_TLS_LE_HA
 91

	)

3804 
	#R_TILEPRO_IMM16_X1_TLS_LE_HA
 92

	)

3806 
	#R_TILEPRO_GNU_VTINHERIT
 128

	)

3807 
	#R_TILEPRO_GNU_VTENTRY
 129

	)

3809 
	#R_TILEPRO_NUM
 130

	)

3813 
	#R_TILEGX_NONE
 0

	)

3814 
	#R_TILEGX_64
 1

	)

3815 
	#R_TILEGX_32
 2

	)

3816 
	#R_TILEGX_16
 3

	)

3817 
	#R_TILEGX_8
 4

	)

3818 
	#R_TILEGX_64_PCREL
 5

	)

3819 
	#R_TILEGX_32_PCREL
 6

	)

3820 
	#R_TILEGX_16_PCREL
 7

	)

3821 
	#R_TILEGX_8_PCREL
 8

	)

3822 
	#R_TILEGX_HW0
 9

	)

3823 
	#R_TILEGX_HW1
 10

	)

3824 
	#R_TILEGX_HW2
 11

	)

3825 
	#R_TILEGX_HW3
 12

	)

3826 
	#R_TILEGX_HW0_LAST
 13

	)

3827 
	#R_TILEGX_HW1_LAST
 14

	)

3828 
	#R_TILEGX_HW2_LAST
 15

	)

3829 
	#R_TILEGX_COPY
 16

	)

3830 
	#R_TILEGX_GLOB_DAT
 17

	)

3831 
	#R_TILEGX_JMP_SLOT
 18

	)

3832 
	#R_TILEGX_RELATIVE
 19

	)

3833 
	#R_TILEGX_BROFF_X1
 20

	)

3834 
	#R_TILEGX_JUMPOFF_X1
 21

	)

3835 
	#R_TILEGX_JUMPOFF_X1_PLT
 22

	)

3836 
	#R_TILEGX_IMM8_X0
 23

	)

3837 
	#R_TILEGX_IMM8_Y0
 24

	)

3838 
	#R_TILEGX_IMM8_X1
 25

	)

3839 
	#R_TILEGX_IMM8_Y1
 26

	)

3840 
	#R_TILEGX_DEST_IMM8_X1
 27

	)

3841 
	#R_TILEGX_MT_IMM14_X1
 28

	)

3842 
	#R_TILEGX_MF_IMM14_X1
 29

	)

3843 
	#R_TILEGX_MMSTART_X0
 30

	)

3844 
	#R_TILEGX_MMEND_X0
 31

	)

3845 
	#R_TILEGX_SHAMT_X0
 32

	)

3846 
	#R_TILEGX_SHAMT_X1
 33

	)

3847 
	#R_TILEGX_SHAMT_Y0
 34

	)

3848 
	#R_TILEGX_SHAMT_Y1
 35

	)

3849 
	#R_TILEGX_IMM16_X0_HW0
 36

	)

3850 
	#R_TILEGX_IMM16_X1_HW0
 37

	)

3851 
	#R_TILEGX_IMM16_X0_HW1
 38

	)

3852 
	#R_TILEGX_IMM16_X1_HW1
 39

	)

3853 
	#R_TILEGX_IMM16_X0_HW2
 40

	)

3854 
	#R_TILEGX_IMM16_X1_HW2
 41

	)

3855 
	#R_TILEGX_IMM16_X0_HW3
 42

	)

3856 
	#R_TILEGX_IMM16_X1_HW3
 43

	)

3857 
	#R_TILEGX_IMM16_X0_HW0_LAST
 44

	)

3858 
	#R_TILEGX_IMM16_X1_HW0_LAST
 45

	)

3859 
	#R_TILEGX_IMM16_X0_HW1_LAST
 46

	)

3860 
	#R_TILEGX_IMM16_X1_HW1_LAST
 47

	)

3861 
	#R_TILEGX_IMM16_X0_HW2_LAST
 48

	)

3862 
	#R_TILEGX_IMM16_X1_HW2_LAST
 49

	)

3863 
	#R_TILEGX_IMM16_X0_HW0_PCREL
 50

	)

3864 
	#R_TILEGX_IMM16_X1_HW0_PCREL
 51

	)

3865 
	#R_TILEGX_IMM16_X0_HW1_PCREL
 52

	)

3866 
	#R_TILEGX_IMM16_X1_HW1_PCREL
 53

	)

3867 
	#R_TILEGX_IMM16_X0_HW2_PCREL
 54

	)

3868 
	#R_TILEGX_IMM16_X1_HW2_PCREL
 55

	)

3869 
	#R_TILEGX_IMM16_X0_HW3_PCREL
 56

	)

3870 
	#R_TILEGX_IMM16_X1_HW3_PCREL
 57

	)

3871 
	#R_TILEGX_IMM16_X0_HW0_LAST_PCREL
 58

	)

3872 
	#R_TILEGX_IMM16_X1_HW0_LAST_PCREL
 59

	)

3873 
	#R_TILEGX_IMM16_X0_HW1_LAST_PCREL
 60

	)

3874 
	#R_TILEGX_IMM16_X1_HW1_LAST_PCREL
 61

	)

3875 
	#R_TILEGX_IMM16_X0_HW2_LAST_PCREL
 62

	)

3876 
	#R_TILEGX_IMM16_X1_HW2_LAST_PCREL
 63

	)

3877 
	#R_TILEGX_IMM16_X0_HW0_GOT
 64

	)

3878 
	#R_TILEGX_IMM16_X1_HW0_GOT
 65

	)

3879 
	#R_TILEGX_IMM16_X0_HW0_PLT_PCREL
 66

	)

3880 
	#R_TILEGX_IMM16_X1_HW0_PLT_PCREL
 67

	)

3881 
	#R_TILEGX_IMM16_X0_HW1_PLT_PCREL
 68

	)

3882 
	#R_TILEGX_IMM16_X1_HW1_PLT_PCREL
 69

	)

3883 
	#R_TILEGX_IMM16_X0_HW2_PLT_PCREL
 70

	)

3884 
	#R_TILEGX_IMM16_X1_HW2_PLT_PCREL
 71

	)

3885 
	#R_TILEGX_IMM16_X0_HW0_LAST_GOT
 72

	)

3886 
	#R_TILEGX_IMM16_X1_HW0_LAST_GOT
 73

	)

3887 
	#R_TILEGX_IMM16_X0_HW1_LAST_GOT
 74

	)

3888 
	#R_TILEGX_IMM16_X1_HW1_LAST_GOT
 75

	)

3889 
	#R_TILEGX_IMM16_X0_HW3_PLT_PCREL
 76

	)

3890 
	#R_TILEGX_IMM16_X1_HW3_PLT_PCREL
 77

	)

3891 
	#R_TILEGX_IMM16_X0_HW0_TLS_GD
 78

	)

3892 
	#R_TILEGX_IMM16_X1_HW0_TLS_GD
 79

	)

3893 
	#R_TILEGX_IMM16_X0_HW0_TLS_LE
 80

	)

3894 
	#R_TILEGX_IMM16_X1_HW0_TLS_LE
 81

	)

3895 
	#R_TILEGX_IMM16_X0_HW0_LAST_TLS_LE
 82

	)

3896 
	#R_TILEGX_IMM16_X1_HW0_LAST_TLS_LE
 83

	)

3897 
	#R_TILEGX_IMM16_X0_HW1_LAST_TLS_LE
 84

	)

3898 
	#R_TILEGX_IMM16_X1_HW1_LAST_TLS_LE
 85

	)

3899 
	#R_TILEGX_IMM16_X0_HW0_LAST_TLS_GD
 86

	)

3900 
	#R_TILEGX_IMM16_X1_HW0_LAST_TLS_GD
 87

	)

3901 
	#R_TILEGX_IMM16_X0_HW1_LAST_TLS_GD
 88

	)

3902 
	#R_TILEGX_IMM16_X1_HW1_LAST_TLS_GD
 89

	)

3904 
	#R_TILEGX_IMM16_X0_HW0_TLS_IE
 92

	)

3905 
	#R_TILEGX_IMM16_X1_HW0_TLS_IE
 93

	)

3906 
	#R_TILEGX_IMM16_X0_HW0_LAST_PLT_PCREL
 94

	)

3907 
	#R_TILEGX_IMM16_X1_HW0_LAST_PLT_PCREL
 95

	)

3908 
	#R_TILEGX_IMM16_X0_HW1_LAST_PLT_PCREL
 96

	)

3909 
	#R_TILEGX_IMM16_X1_HW1_LAST_PLT_PCREL
 97

	)

3910 
	#R_TILEGX_IMM16_X0_HW2_LAST_PLT_PCREL
 98

	)

3911 
	#R_TILEGX_IMM16_X1_HW2_LAST_PLT_PCREL
 99

	)

3912 
	#R_TILEGX_IMM16_X0_HW0_LAST_TLS_IE
 100

	)

3913 
	#R_TILEGX_IMM16_X1_HW0_LAST_TLS_IE
 101

	)

3914 
	#R_TILEGX_IMM16_X0_HW1_LAST_TLS_IE
 102

	)

3915 
	#R_TILEGX_IMM16_X1_HW1_LAST_TLS_IE
 103

	)

3917 
	#R_TILEGX_TLS_DTPMOD64
 106

	)

3918 
	#R_TILEGX_TLS_DTPOFF64
 107

	)

3919 
	#R_TILEGX_TLS_TPOFF64
 108

	)

3920 
	#R_TILEGX_TLS_DTPMOD32
 109

	)

3921 
	#R_TILEGX_TLS_DTPOFF32
 110

	)

3922 
	#R_TILEGX_TLS_TPOFF32
 111

	)

3923 
	#R_TILEGX_TLS_GD_CALL
 112

	)

3924 
	#R_TILEGX_IMM8_X0_TLS_GD_ADD
 113

	)

3925 
	#R_TILEGX_IMM8_X1_TLS_GD_ADD
 114

	)

3926 
	#R_TILEGX_IMM8_Y0_TLS_GD_ADD
 115

	)

3927 
	#R_TILEGX_IMM8_Y1_TLS_GD_ADD
 116

	)

3928 
	#R_TILEGX_TLS_IE_LOAD
 117

	)

3929 
	#R_TILEGX_IMM8_X0_TLS_ADD
 118

	)

3930 
	#R_TILEGX_IMM8_X1_TLS_ADD
 119

	)

3931 
	#R_TILEGX_IMM8_Y0_TLS_ADD
 120

	)

3932 
	#R_TILEGX_IMM8_Y1_TLS_ADD
 121

	)

3934 
	#R_TILEGX_GNU_VTINHERIT
 128

	)

3935 
	#R_TILEGX_GNU_VTENTRY
 129

	)

3937 
	#R_TILEGX_NUM
 130

	)

3940 
	#EF_RISCV_RVC
 0x0001

	)

3941 
	#EF_RISCV_FLOAT_ABI
 0x0006

	)

3942 
	#EF_RISCV_FLOAT_ABI_SOFT
 0x0000

	)

3943 
	#EF_RISCV_FLOAT_ABI_SINGLE
 0x0002

	)

3944 
	#EF_RISCV_FLOAT_ABI_DOUBLE
 0x0004

	)

3945 
	#EF_RISCV_FLOAT_ABI_QUAD
 0x0006

	)

3946 
	#EF_RISCV_RVE
 0x0008

	)

3947 
	#EF_RISCV_TSO
 0x0010

	)

3950 
	#R_RISCV_NONE
 0

	)

3951 
	#R_RISCV_32
 1

	)

3952 
	#R_RISCV_64
 2

	)

3953 
	#R_RISCV_RELATIVE
 3

	)

3954 
	#R_RISCV_COPY
 4

	)

3955 
	#R_RISCV_JUMP_SLOT
 5

	)

3956 
	#R_RISCV_TLS_DTPMOD32
 6

	)

3957 
	#R_RISCV_TLS_DTPMOD64
 7

	)

3958 
	#R_RISCV_TLS_DTPREL32
 8

	)

3959 
	#R_RISCV_TLS_DTPREL64
 9

	)

3960 
	#R_RISCV_TLS_TPREL32
 10

	)

3961 
	#R_RISCV_TLS_TPREL64
 11

	)

3962 
	#R_RISCV_BRANCH
 16

	)

3963 
	#R_RISCV_JAL
 17

	)

3964 
	#R_RISCV_CALL
 18

	)

3965 
	#R_RISCV_CALL_PLT
 19

	)

3966 
	#R_RISCV_GOT_HI20
 20

	)

3967 
	#R_RISCV_TLS_GOT_HI20
 21

	)

3968 
	#R_RISCV_TLS_GD_HI20
 22

	)

3969 
	#R_RISCV_PCREL_HI20
 23

	)

3970 
	#R_RISCV_PCREL_LO12_I
 24

	)

3971 
	#R_RISCV_PCREL_LO12_S
 25

	)

3972 
	#R_RISCV_HI20
 26

	)

3973 
	#R_RISCV_LO12_I
 27

	)

3974 
	#R_RISCV_LO12_S
 28

	)

3975 
	#R_RISCV_TPREL_HI20
 29

	)

3976 
	#R_RISCV_TPREL_LO12_I
 30

	)

3977 
	#R_RISCV_TPREL_LO12_S
 31

	)

3978 
	#R_RISCV_TPREL_ADD
 32

	)

3979 
	#R_RISCV_ADD8
 33

	)

3980 
	#R_RISCV_ADD16
 34

	)

3981 
	#R_RISCV_ADD32
 35

	)

3982 
	#R_RISCV_ADD64
 36

	)

3983 
	#R_RISCV_SUB8
 37

	)

3984 
	#R_RISCV_SUB16
 38

	)

3985 
	#R_RISCV_SUB32
 39

	)

3986 
	#R_RISCV_SUB64
 40

	)

3987 
	#R_RISCV_GNU_VTINHERIT
 41

	)

3988 
	#R_RISCV_GNU_VTENTRY
 42

	)

3989 
	#R_RISCV_ALIGN
 43

	)

3990 
	#R_RISCV_RVC_BRANCH
 44

	)

3991 
	#R_RISCV_RVC_JUMP
 45

	)

3992 
	#R_RISCV_RVC_LUI
 46

	)

3993 
	#R_RISCV_GPREL_I
 47

	)

3994 
	#R_RISCV_GPREL_S
 48

	)

3995 
	#R_RISCV_TPREL_I
 49

	)

3996 
	#R_RISCV_TPREL_S
 50

	)

3997 
	#R_RISCV_RELAX
 51

	)

3998 
	#R_RISCV_SUB6
 52

	)

3999 
	#R_RISCV_SET6
 53

	)

4000 
	#R_RISCV_SET8
 54

	)

4001 
	#R_RISCV_SET16
 55

	)

4002 
	#R_RISCV_SET32
 56

	)

4003 
	#R_RISCV_32_PCREL
 57

	)

4004 
	#R_RISCV_IRELATIVE
 58

	)

4005 
	#R_RISCV_PLT32
 59

	)

4006 
	#R_RISCV_SET_ULEB128
 60

	)

4007 
	#R_RISCV_SUB_ULEB128
 61

	)

4009 
	#R_RISCV_NUM
 62

	)

4012 
	#STO_RISCV_VARIANT_CC
 0x80

	)

4016 
	#SHT_RISCV_ATTRIBUTES
 (
SHT_LOPROC
 + 3)

	)

4019 
	#PT_RISCV_ATTRIBUTES
 (
PT_LOPROC
 + 3)

	)

4022 
	#DT_RISCV_VARIANT_CC
 (
DT_LOPROC
 + 1)

	)

4026 
	#R_BPF_NONE
 0

	)

4027 
	#R_BPF_64_64
 1

	)

4028 
	#R_BPF_64_32
 10

	)

4032 
	#R_METAG_HIADDR16
 0

	)

4033 
	#R_METAG_LOADDR16
 1

	)

4034 
	#R_METAG_ADDR32
 2

	)

4035 
	#R_METAG_NONE
 3

	)

4036 
	#R_METAG_RELBRANCH
 4

	)

4037 
	#R_METAG_GETSETOFF
 5

	)

4040 
	#R_METAG_REG32OP1
 6

	)

4041 
	#R_METAG_REG32OP2
 7

	)

4042 
	#R_METAG_REG32OP3
 8

	)

4043 
	#R_METAG_REG16OP1
 9

	)

4044 
	#R_METAG_REG16OP2
 10

	)

4045 
	#R_METAG_REG16OP3
 11

	)

4046 
	#R_METAG_REG32OP4
 12

	)

4048 
	#R_METAG_HIOG
 13

	)

4049 
	#R_METAG_LOOG
 14

	)

4051 
	#R_METAG_REL8
 15

	)

4052 
	#R_METAG_REL16
 16

	)

4055 
	#R_METAG_GNU_VTINHERIT
 30

	)

4056 
	#R_METAG_GNU_VTENTRY
 31

	)

4059 
	#R_METAG_HI16_GOTOFF
 32

	)

4060 
	#R_METAG_LO16_GOTOFF
 33

	)

4061 
	#R_METAG_GETSET_GOTOFF
 34

	)

4062 
	#R_METAG_GETSET_GOT
 35

	)

4063 
	#R_METAG_HI16_GOTPC
 36

	)

4064 
	#R_METAG_LO16_GOTPC
 37

	)

4065 
	#R_METAG_HI16_PLT
 38

	)

4066 
	#R_METAG_LO16_PLT
 39

	)

4067 
	#R_METAG_RELBRANCH_PLT
 40

	)

4068 
	#R_METAG_GOTOFF
 41

	)

4069 
	#R_METAG_PLT
 42

	)

4070 
	#R_METAG_COPY
 43

	)

4071 
	#R_METAG_JMP_SLOT
 44

	)

4072 
	#R_METAG_RELATIVE
 45

	)

4073 
	#R_METAG_GLOB_DAT
 46

	)

4076 
	#R_METAG_TLS_GD
 47

	)

4077 
	#R_METAG_TLS_LDM
 48

	)

4078 
	#R_METAG_TLS_LDO_HI16
 49

	)

4079 
	#R_METAG_TLS_LDO_LO16
 50

	)

4080 
	#R_METAG_TLS_LDO
 51

	)

4081 
	#R_METAG_TLS_IE
 52

	)

4082 
	#R_METAG_TLS_IENONPIC
 53

	)

4083 
	#R_METAG_TLS_IENONPIC_HI16
 54

	)

4084 
	#R_METAG_TLS_IENONPIC_LO16
 55

	)

4085 
	#R_METAG_TLS_TPOFF
 56

	)

4086 
	#R_METAG_TLS_DTPMOD
 57

	)

4087 
	#R_METAG_TLS_DTPOFF
 58

	)

4088 
	#R_METAG_TLS_LE
 59

	)

4089 
	#R_METAG_TLS_LE_HI16
 60

	)

4090 
	#R_METAG_TLS_LE_LO16
 61

	)

4093 
	#R_NDS32_NONE
 0

	)

4094 
	#R_NDS32_32_RELA
 20

	)

4095 
	#R_NDS32_COPY
 39

	)

4096 
	#R_NDS32_GLOB_DAT
 40

	)

4097 
	#R_NDS32_JMP_SLOT
 41

	)

4098 
	#R_NDS32_RELATIVE
 42

	)

4099 
	#R_NDS32_TLS_TPOFF
 102

	)

4100 
	#R_NDS32_TLS_DESC
 119

	)

4103 
	#EF_LARCH_ABI_MODIFIER_MASK
 0x07

	)

4104 
	#EF_LARCH_ABI_SOFT_FLOAT
 0x01

	)

4105 
	#EF_LARCH_ABI_SINGLE_FLOAT
 0x02

	)

4106 
	#EF_LARCH_ABI_DOUBLE_FLOAT
 0x03

	)

4107 
	#EF_LARCH_OBJABI_V1
 0x40

	)

4110 
	#R_LARCH_NONE
 0

	)

4111 
	#R_LARCH_32
 1

	)

4112 
	#R_LARCH_64
 2

	)

4113 
	#R_LARCH_RELATIVE
 3

	)

4114 
	#R_LARCH_COPY
 4

	)

4115 
	#R_LARCH_JUMP_SLOT
 5

	)

4116 
	#R_LARCH_TLS_DTPMOD32
 6

	)

4117 
	#R_LARCH_TLS_DTPMOD64
 7

	)

4118 
	#R_LARCH_TLS_DTPREL32
 8

	)

4119 
	#R_LARCH_TLS_DTPREL64
 9

	)

4120 
	#R_LARCH_TLS_TPREL32
 10

	)

4121 
	#R_LARCH_TLS_TPREL64
 11

	)

4122 
	#R_LARCH_IRELATIVE
 12

	)

4127 
	#R_LARCH_MARK_LA
 20

	)

4128 
	#R_LARCH_MARK_PCREL
 21

	)

4129 
	#R_LARCH_SOP_PUSH_PCREL
 22

	)

4130 
	#R_LARCH_SOP_PUSH_ABSOLUTE
 23

	)

4131 
	#R_LARCH_SOP_PUSH_DUP
 24

	)

4132 
	#R_LARCH_SOP_PUSH_GPREL
 25

	)

4133 
	#R_LARCH_SOP_PUSH_TLS_TPREL
 26

	)

4134 
	#R_LARCH_SOP_PUSH_TLS_GOT
 27

	)

4135 
	#R_LARCH_SOP_PUSH_TLS_GD
 28

	)

4136 
	#R_LARCH_SOP_PUSH_PLT_PCREL
 29

	)

4137 
	#R_LARCH_SOP_ASSERT
 30

	)

4138 
	#R_LARCH_SOP_NOT
 31

	)

4139 
	#R_LARCH_SOP_SUB
 32

	)

4140 
	#R_LARCH_SOP_SL
 33

	)

4141 
	#R_LARCH_SOP_SR
 34

	)

4142 
	#R_LARCH_SOP_ADD
 35

	)

4143 
	#R_LARCH_SOP_AND
 36

	)

4144 
	#R_LARCH_SOP_IF_ELSE
 37

	)

4145 
	#R_LARCH_SOP_POP_32_S_10_5
 38

	)

4146 
	#R_LARCH_SOP_POP_32_U_10_12
 39

	)

4147 
	#R_LARCH_SOP_POP_32_S_10_12
 40

	)

4148 
	#R_LARCH_SOP_POP_32_S_10_16
 41

	)

4149 
	#R_LARCH_SOP_POP_32_S_10_16_S2
 42

	)

4150 
	#R_LARCH_SOP_POP_32_S_5_20
 43

	)

4151 
	#R_LARCH_SOP_POP_32_S_0_5_10_16_S2
 44

	)

4152 
	#R_LARCH_SOP_POP_32_S_0_10_10_16_S2
 45

	)

4153 
	#R_LARCH_SOP_POP_32_U
 46

	)

4156 
	#R_LARCH_ADD8
 47

	)

4157 
	#R_LARCH_ADD16
 48

	)

4158 
	#R_LARCH_ADD24
 49

	)

4159 
	#R_LARCH_ADD32
 50

	)

4160 
	#R_LARCH_ADD64
 51

	)

4161 
	#R_LARCH_SUB8
 52

	)

4162 
	#R_LARCH_SUB16
 53

	)

4163 
	#R_LARCH_SUB24
 54

	)

4164 
	#R_LARCH_SUB32
 55

	)

4165 
	#R_LARCH_SUB64
 56

	)

4166 
	#R_LARCH_GNU_VTINHERIT
 57

	)

4167 
	#R_LARCH_GNU_VTENTRY
 58

	)

4171 
	#R_LARCH_B16
 64

	)

4172 
	#R_LARCH_B21
 65

	)

4173 
	#R_LARCH_B26
 66

	)

4174 
	#R_LARCH_ABS_HI20
 67

	)

4175 
	#R_LARCH_ABS_LO12
 68

	)

4176 
	#R_LARCH_ABS64_LO20
 69

	)

4177 
	#R_LARCH_ABS64_HI12
 70

	)

4178 
	#R_LARCH_PCALA_HI20
 71

	)

4179 
	#R_LARCH_PCALA_LO12
 72

	)

4180 
	#R_LARCH_PCALA64_LO20
 73

	)

4181 
	#R_LARCH_PCALA64_HI12
 74

	)

4182 
	#R_LARCH_GOT_PC_HI20
 75

	)

4183 
	#R_LARCH_GOT_PC_LO12
 76

	)

4184 
	#R_LARCH_GOT64_PC_LO20
 77

	)

4185 
	#R_LARCH_GOT64_PC_HI12
 78

	)

4186 
	#R_LARCH_GOT_HI20
 79

	)

4187 
	#R_LARCH_GOT_LO12
 80

	)

4188 
	#R_LARCH_GOT64_LO20
 81

	)

4189 
	#R_LARCH_GOT64_HI12
 82

	)

4190 
	#R_LARCH_TLS_LE_HI20
 83

	)

4191 
	#R_LARCH_TLS_LE_LO12
 84

	)

4192 
	#R_LARCH_TLS_LE64_LO20
 85

	)

4193 
	#R_LARCH_TLS_LE64_HI12
 86

	)

4194 
	#R_LARCH_TLS_IE_PC_HI20
 87

	)

4195 
	#R_LARCH_TLS_IE_PC_LO12
 88

	)

4196 
	#R_LARCH_TLS_IE64_PC_LO20
 89

	)

4197 
	#R_LARCH_TLS_IE64_PC_HI12
 90

	)

4198 
	#R_LARCH_TLS_IE_HI20
 91

	)

4199 
	#R_LARCH_TLS_IE_LO12
 92

	)

4200 
	#R_LARCH_TLS_IE64_LO20
 93

	)

4201 
	#R_LARCH_TLS_IE64_HI12
 94

	)

4202 
	#R_LARCH_TLS_LD_PC_HI20
 95

	)

4203 
	#R_LARCH_TLS_LD_HI20
 96

	)

4204 
	#R_LARCH_TLS_GD_PC_HI20
 97

	)

4205 
	#R_LARCH_TLS_GD_HI20
 98

	)

4206 
	#R_LARCH_32_PCREL
 99

	)

4207 
	#R_LARCH_RELAX
 100

	)

4212 
	#EF_ARC_MACH_MSK
 0x000000ff

	)

4213 
	#EF_ARC_OSABI_MSK
 0x00000f00

	)

4214 
	#EF_ARC_ALL_MSK
 (
EF_ARC_MACH_MSK
 | 
EF_ARC_OSABI_MSK
)

	)

4217 
	#SHT_ARC_ATTRIBUTES
 (
SHT_LOPROC
 + 1Ë

	)

4220 
	#R_ARC_NONE
 0x0

	)

4221 
	#R_ARC_8
 0x1

	)

4222 
	#R_ARC_16
 0x2

	)

4223 
	#R_ARC_24
 0x3

	)

4224 
	#R_ARC_32
 0x4

	)

4226 
	#R_ARC_B22_PCREL
 0x6

	)

4227 
	#R_ARC_H30
 0x7

	)

4228 
	#R_ARC_N8
 0x8

	)

4229 
	#R_ARC_N16
 0x9

	)

4230 
	#R_ARC_N24
 0xA

	)

4231 
	#R_ARC_N32
 0xB

	)

4232 
	#R_ARC_SDA
 0xC

	)

4233 
	#R_ARC_SECTOFF
 0xD

	)

4234 
	#R_ARC_S21H_PCREL
 0xE

	)

4235 
	#R_ARC_S21W_PCREL
 0xF

	)

4236 
	#R_ARC_S25H_PCREL
 0x10

	)

4237 
	#R_ARC_S25W_PCREL
 0x11

	)

4238 
	#R_ARC_SDA32
 0x12

	)

4239 
	#R_ARC_SDA_LDST
 0x13

	)

4240 
	#R_ARC_SDA_LDST1
 0x14

	)

4241 
	#R_ARC_SDA_LDST2
 0x15

	)

4242 
	#R_ARC_SDA16_LD
 0x16

	)

4243 
	#R_ARC_SDA16_LD1
 0x17

	)

4244 
	#R_ARC_SDA16_LD2
 0x18

	)

4245 
	#R_ARC_S13_PCREL
 0x19

	)

4246 
	#R_ARC_W
 0x1A

	)

4247 
	#R_ARC_32_ME
 0x1B

	)

4248 
	#R_ARC_N32_ME
 0x1C

	)

4249 
	#R_ARC_SECTOFF_ME
 0x1D

	)

4250 
	#R_ARC_SDA32_ME
 0x1E

	)

4251 
	#R_ARC_W_ME
 0x1F

	)

4252 
	#R_ARC_H30_ME
 0x20

	)

4253 
	#R_ARC_SECTOFF_U8
 0x21

	)

4254 
	#R_ARC_SECTOFF_S9
 0x22

	)

4255 
	#R_AC_SECTOFF_U8
 0x23

	)

4256 
	#R_AC_SECTOFF_U8_1
 0x24

	)

4257 
	#R_AC_SECTOFF_U8_2
 0x25

	)

4258 
	#R_AC_SECTOFF_S9
 0x26

	)

4259 
	#R_AC_SECTOFF_S9_1
 0x27

	)

4260 
	#R_AC_SECTOFF_S9_2
 0x28

	)

4261 
	#R_ARC_SECTOFF_ME_1
 0x29

	)

4262 
	#R_ARC_SECTOFF_ME_2
 0x2A

	)

4263 
	#R_ARC_SECTOFF_1
 0x2B

	)

4264 
	#R_ARC_SECTOFF_2
 0x2C

	)

4265 
	#R_ARC_SDA_12
 0x2D

	)

4266 
	#R_ARC_SDA16_ST2
 0x30

	)

4267 
	#R_ARC_32_PCREL
 0x31

	)

4268 
	#R_ARC_PC32
 0x32

	)

4269 
	#R_ARC_GOTPC32
 0x33

	)

4270 
	#R_ARC_PLT32
 0x34

	)

4271 
	#R_ARC_COPY
 0x35

	)

4272 
	#R_ARC_GLOB_DAT
 0x36

	)

4273 
	#R_ARC_JMP_SLOT
 0x37

	)

4274 
	#R_ARC_RELATIVE
 0x38

	)

4275 
	#R_ARC_GOTOFF
 0x39

	)

4276 
	#R_ARC_GOTPC
 0x3A

	)

4277 
	#R_ARC_GOT32
 0x3B

	)

4278 
	#R_ARC_S21W_PCREL_PLT
 0x3C

	)

4279 
	#R_ARC_S25H_PCREL_PLT
 0x3D

	)

4281 
	#R_ARC_JLI_SECTOFF
 0x3F

	)

4283 
	#R_ARC_TLS_DTPMOD
 0x42

	)

4284 
	#R_ARC_TLS_DTPOFF
 0x43

	)

4285 
	#R_ARC_TLS_TPOFF
 0x44

	)

4286 
	#R_ARC_TLS_GD_GOT
 0x45

	)

4287 
	#R_ARC_TLS_GD_LD
 0x46

	)

4288 
	#R_ARC_TLS_GD_CALL
 0x47

	)

4289 
	#R_ARC_TLS_IE_GOT
 0x48

	)

4290 
	#R_ARC_TLS_DTPOFF_S9
 0x49

	)

4291 
	#R_ARC_TLS_LE_S9
 0x4A

	)

4292 
	#R_ARC_TLS_LE_32
 0x4B

	)

4293 
	#R_ARC_S25W_PCREL_PLT
 0x4C

	)

4294 
	#R_ARC_S21H_PCREL_PLT
 0x4D

	)

4295 
	#R_ARC_NPS_CMEM16
 0x4E

	)

4298 
	#R_OR1K_NONE
 0

	)

4299 
	#R_OR1K_32
 1

	)

4300 
	#R_OR1K_16
 2

	)

4301 
	#R_OR1K_8
 3

	)

4302 
	#R_OR1K_LO_16_IN_INSN
 4

	)

4303 
	#R_OR1K_HI_16_IN_INSN
 5

	)

4304 
	#R_OR1K_INSN_REL_26
 6

	)

4305 
	#R_OR1K_GNU_VTENTRY
 7

	)

4306 
	#R_OR1K_GNU_VTINHERIT
 8

	)

4307 
	#R_OR1K_32_PCREL
 9

	)

4308 
	#R_OR1K_16_PCREL
 10

	)

4309 
	#R_OR1K_8_PCREL
 11

	)

4310 
	#R_OR1K_GOTPC_HI16
 12

	)

4311 
	#R_OR1K_GOTPC_LO16
 13

	)

4312 
	#R_OR1K_GOT16
 14

	)

4313 
	#R_OR1K_PLT26
 15

	)

4314 
	#R_OR1K_GOTOFF_HI16
 16

	)

4315 
	#R_OR1K_GOTOFF_LO16
 17

	)

4316 
	#R_OR1K_COPY
 18

	)

4317 
	#R_OR1K_GLOB_DAT
 19

	)

4318 
	#R_OR1K_JMP_SLOT
 20

	)

4319 
	#R_OR1K_RELATIVE
 21

	)

4320 
	#R_OR1K_TLS_GD_HI16
 22

	)

4321 
	#R_OR1K_TLS_GD_LO16
 23

	)

4322 
	#R_OR1K_TLS_LDM_HI16
 24

	)

4323 
	#R_OR1K_TLS_LDM_LO16
 25

	)

4324 
	#R_OR1K_TLS_LDO_HI16
 26

	)

4325 
	#R_OR1K_TLS_LDO_LO16
 27

	)

4326 
	#R_OR1K_TLS_IE_HI16
 28

	)

4327 
	#R_OR1K_TLS_IE_LO16
 29

	)

4328 
	#R_OR1K_TLS_LE_HI16
 30

	)

4329 
	#R_OR1K_TLS_LE_LO16
 31

	)

4330 
	#R_OR1K_TLS_TPOFF
 32

	)

4331 
	#R_OR1K_TLS_DTPOFF
 33

	)

4332 
	#R_OR1K_TLS_DTPMOD
 34

	)

	@/home/xinhualu/repo/0_xhlu/0_pppppppp/0_project/0_elf_parser/elf_header.cpp

1 
	~"ñf_hódî.hµ
"

2 
	~"ñf.h
"

3 
	~<Æg‹ôhm
>

4 
	~<ch¨c⁄v
>

5 
	~<codecvt
>

6 
	~<c°döt
>

7 
	~<ios
>

8 
	~<øtio
>

9 
	~<°dex˚±
>

10 
	~<°rög
>

11 
	~<utûôy
>

12 
	~<ve˘‹
>

13 
	~<m≠
>

15 
	gElfHódî
::
	$lﬂd
(
°d
::
°rög
 
fûe
)

17 
°d
::
if°ªam
 
	`‰ód
(
fûe
,°d::
ios
::
ö
|°d::ios::
bö¨y
);

20 
uöt32_t
 
idít_id
 = 0; idít_id < 
EI_NIDENT
; ident_id++)

22 
‰ód
.
	`ªad
((*)&(
m_e_idít
[
idít_id
]), (m_e_ident[ident_id]));

25 
‰ód
.
	`ªad
((*)&
m_e_ty≥
, (m_e_type));

27 
‰ód
.
	`ªad
((*)&
m_e_machöe
, (m_e_machine));

29 
‰ód
.
	`ªad
((*)&
m_e_vîsi⁄
, (m_e_version));

31 
‰ód
.
	`ªad
((*)&
m_e_íåy
, (m_e_entry));

33 
‰ód
.
	`ªad
((*)&
m_e_phoff
, (m_e_phoff));

35 
‰ód
.
	`ªad
((*)&
m_e_shoff
, (m_e_shoff));

37 
‰ód
.
	`ªad
((*)&
m_e_Êags
, (m_e_flags));

39 
‰ód
.
	`ªad
((*)&
m_e_ehsize
, (m_e_ehsize));

41 
‰ód
.
	`ªad
((*)&
m_e_phítsize
, (m_e_phentsize));

43 
‰ód
.
	`ªad
((*)&
m_e_phnum
, (m_e_phnum));

45 
‰ód
.
	`ªad
((*)&
m_e_shítsize
, (m_e_shentsize));

47 
‰ód
.
	`ªad
((*)&
m_e_shnum
, (m_e_shnum));

49 
‰ód
.
	`ªad
((*)&
m_e_sh°∫dx
, (m_e_shstrndx));

51 
‰ód
.
	`˛o£
();

52 
	}
}

54 
	gElfHódî
::
	$dump
()

57 
°d
::
cout
 << std::
ídl
;

58 
°d
::
cout
 << std::
ídl
;

59 
°d
::
cout
 << "ELF Hódî : " << std::
ídl
;

60 
°d
::
cout
 << "EI_MAG0 : " << std::
hex
 << 
°©ic_ˇ°
<>(
m_e_idít
[0]Ë<< std::
ídl
;

61 
°d
::
cout
 << "EI_MAG1 : " << 
m_e_idít
[1] << std::
ídl
;

62 
°d
::
cout
 << "EI_MAG2 : " << 
m_e_idít
[2] << std::
ídl
;

63 
°d
::
cout
 << "EI_MAG3 : " << 
m_e_idít
[3] << std::
ídl
;

64 
°d
::
cout
 << "EI_CLASS : " << "Cœs† -- " << std::
hex
 << 
°©ic_ˇ°
<>(
m_e_idít
[4]Ë<< std::
ídl
;

65 
°d
::
cout
 << "EI_DATA : " << "D©® -- " << std::
hex
 << 
°©ic_ˇ°
<>(
m_e_idít
[5]Ë<< std::
ídl
;

66 
°d
::
cout
 << "EI_VERSION : " << "Vîsi⁄ -- " << std::
hex
 << 
°©ic_ˇ°
<>(
m_e_idít
[6]Ë<< std::
ídl
;

67 
°d
::
cout
 << "EI_PAD : " << "PAD -- " << std::
hex
 << 
°©ic_ˇ°
<>(
m_e_idít
[7]Ë<< std::
ídl
;

68 
°d
::
cout
 << "e_ty≥ : " << std::
hex
 << 
	`°r_e_ty≥
(Ë<< std::
ídl
;

69 
°d
::
cout
 << "e_machöê : " << std::
hex
 << 
	`°r_e_machöe
(Ë<< std::
ídl
;

70 
°d
::
cout
 << "e_vîsi⁄ : " << std::
hex
 << 
	`°r_e_vîsi⁄
(Ë<< std::
ídl
;

71 
°d
::
cout
 << "e_íåy : " << std::
hex
 << 
m_e_íåy
 << std::
ídl
;

72 
°d
::
cout
 << "e_phof‡ : " << "Sèπ o‡¥ogøm hódî† -- " << std::
dec
 << 
m_e_phoff
 << std::
ídl
;

73 
°d
::
cout
 << "e_shof‡ : " << "Sèπ o‡£˘i⁄ hódî† -- " << std::
dec
 << 
m_e_shoff
 << std::
ídl
;

74 
°d
::
cout
 << "e_Êag† : " << std::
dec
 << 
m_e_Êags
 << std::
ídl
;

75 
°d
::
cout
 << "e_ehsizê : " << "Sizêo‡thi†hódî -- " << std::
dec
 << 
m_e_ehsize
 << std::
ídl
;

76 
°d
::
cout
 << "e_phítsizê: " << "Sizêo‡¥ogøm hódî† -- " << std::
dec
 << 
m_e_phítsize
 << std::
ídl
;

77 
°d
::
cout
 << "e_phnum : " << "Numbî o‡¥ogøm hódî† -- " << std::
dec
 << 
m_e_phnum
 << std::
ídl
;

78 
°d
::
cout
 << "e_shítsizê: " << "Sizêo‡£˘i⁄ hódî† -- " << std::
dec
 << 
m_e_shítsize
 << std::
ídl
;

79 
°d
::
cout
 << "e_shnum : " << "Numbî o‡£˘i⁄ hódî† -- " << std::
dec
 << 
m_e_shnum
 << std::
ídl
;

80 
°d
::
cout
 << "e_sh°∫dx : " << "Se˘i⁄ hódî såögÅabÀ index -- " << std::
dec
 << 
m_e_sh°∫dx
 << std::
ídl
;

81 
	}
}

83 
	g°d
::
°rög
 
ElfHódî
::
	$°r_e_ty≥
(){

84 
°d
::
ve˘‹
<°d::
∑ú
<
uöt32_t
, std::
°rög
>> 
e_ty≥_°rög
{

85 
°d
::
	`make_∑ú
(
ET_NONE
 , "No fileÅype "),

86 
°d
::
	`make_∑ú
(
ET_REL
 , "Relocatable file "),

87 
°d
::
	`make_∑ú
(
ET_EXEC
 , "Executable file "),

88 
°d
::
	`make_∑ú
(
ET_DYN
 , "Shared object file "),

89 
°d
::
	`make_∑ú
(
ET_CORE
 , "Core file "),

90 
°d
::
	`make_∑ú
(
ET_NUM
 , "Number of definedÅypes "),

91 
°d
::
	`make_∑ú
(
ET_LOOS
 , "OS-specificÑange start "),

92 
°d
::
	`make_∑ú
(
ET_HIOS
 , "OS-specificÑangeÉnd "),

93 
°d
::
	`make_∑ú
(
ET_LOPROC
 , "Processor-specificÑange start "),

94 
°d
::
	`make_∑ú
(
ET_HIPROC
 , "Processor-specificÑangeÉnd"),

97 autÿ& 
ôem
 : 
e_ty≥_°rög
)

99 i‡(
ôem
.
fú°
 =
m_e_ty≥
)

100  
ôem
.
£c⁄d
;

103  
°d
::
	`°rög
("unknowÉ_typeÅype");

105 
	}
}

107 
	g°d
::
°rög
 
ElfHódî
::
	$°r_e_machöe
(){

108 
°d
::
ve˘‹
<°d::
∑ú
<
uöt32_t
, std::
°rög
>> 
e_machöe_°rög
{

109 
°d
::
	`make_∑ú
(
EM_NONE
 , "No machine"),

110 
°d
::
	`make_∑ú
(
EM_M32
 , "AT&T WE 32100"),

111 
°d
::
	`make_∑ú
(
EM_SPARC
 , "SUN SPARC"),

112 
°d
::
	`make_∑ú
(
EM_386
 , "Intel 80386"),

113 
°d
::
	`make_∑ú
(
EM_68K
 , "Motorola m68k family"),

114 
°d
::
	`make_∑ú
(
EM_88K
 , "Motorola m88k family"),

115 
°d
::
	`make_∑ú
(
EM_IAMCU
 , "Intel MCU"),

116 
°d
::
	`make_∑ú
(
EM_860
 , "Intel 80860"),

117 
°d
::
	`make_∑ú
(
EM_MIPS
 , "MIPS R3000 big-endian"),

118 
°d
::
	`make_∑ú
(
EM_S370
 , "IBM System/370"),

119 
°d
::
	`make_∑ú
(
EM_MIPS_RS3_LE
 , "MIPS R3000Üittle-endia"),

122 autÿ& 
ôem
 : 
e_machöe_°rög
)

124 i‡(
ôem
.
fú°
 =
m_e_machöe
)

125  
ôem
.
£c⁄d
;

128  
°d
::
	`°rög
("unknowÉ_machineÅype");

129 
	}
}

131 
	g°d
::
°rög
 
ElfHódî
::
	$°r_e_vîsi⁄
(){

132 
°d
::
ve˘‹
<°d::
∑ú
<
uöt32_t
, std::
°rög
>> 
e_vîsi⁄_°rög
{

133 
°d
::
	`make_∑ú
(
EV_NONE
 , "ÈùûÊ≥ïÁâàÊú¨Âè∑"),

134 
°d
::
	`make_∑ú
(
EV_CURRENT
 , "ÂΩìÂâçÁâàÊú¨Âè∑"),

137 autÿ& 
ôem
 : 
e_vîsi⁄_°rög
)

139 i‡(
ôem
.
fú°
 =
m_e_vîsi⁄
)

140  
ôem
.
£c⁄d
;

143  
°d
::
	`°rög
("unknowÉ_versionÅype");

144 
	}
}

146 
	g°d
::
¨øy
<
uöt8_t
,
	gEI_NIDENT
> 
	gElfHódî
::
	$gëEIdít
(){

147  
m_e_idít
;

148 
	}
}

149 
Elf64_HÆf
 
	gElfHódî
::
	$gëTy≥
(){

150  
m_e_ty≥
;

151 
	}
}

152 
Elf64_HÆf
 
	gElfHódî
::
	$gëMachöe
(){

153  
m_e_machöe
;

154 
	}
}

155 
Elf64_W‹d
 
	gElfHódî
::
	$gëVîsi⁄
(){

156  
m_e_vîsi⁄
;

157 
	}
}

158 
Elf64_Addr
 
	gElfHódî
::
	$gëE¡ry
(){

159  
m_e_íåy
;

160 
	}
}

161 
Elf64_Off
 
	gElfHódî
::
	$gëProgømHódîOff£t
(){

162  
m_e_phoff
;

163 
	}
}

164 
Elf64_Off
 
	gElfHódî
::
	$gëSe˘i⁄HódîOff£t
(){

165  
m_e_shoff
;

166 
	}
}

167 
Elf64_W‹d
 
	gElfHódî
::
	$gëFœgs
(){

168  
m_e_Êags
;

169 
	}
}

170 
Elf64_HÆf
 
	gElfHódî
::
	$gëElfHódîSize
(){

171  
m_e_ehsize
;

172 
	}
}

173 
Elf64_HÆf
 
	gElfHódî
::
	$gëProgømHódîIãmSize
(){

174  
m_e_phítsize
;

175 
	}
}

176 
Elf64_HÆf
 
	gElfHódî
::
	$gëProgømHódîIãmNum
(){

177  
m_e_phnum
;

178 
	}
}

179 
Elf64_HÆf
 
	gElfHódî
::
	$gëSe˘i⁄HódîIãmSize
(){

180  
m_e_shítsize
;

181 
	}
}

182 
Elf64_HÆf
 
	gElfHódî
::
	$gëSe˘i⁄HódîIãmNum
(){

183  
m_e_shnum
;

184 
	}
}

185 
Elf64_HÆf
 
	gElfHódî
::
	$gëSe˘i⁄SåögTabÀIndex
(){

186  
m_e_sh°∫dx
;

187 
	}
}

	@/home/xinhualu/repo/0_xhlu/0_pppppppp/0_project/0_elf_parser/elf_header.hpp

1 #i‚de‡
__ELF_HEADER_H__


2 
	#__ELF_HEADER_H__


	)

4 
	~"comm⁄.hµ
"

6 ˛as†
	cElfHódî
{

7 
	mpublic
:

8 
ElfHódî
() = ;

9 ~
ElfHódî
() = ;

11 
lﬂd
(
°d
::
°rög
 
fûe
);

12 
dump
();

14 
£tEIdít
();

15 
£tTy≥
();

16 
£tMachöe
();

17 
£tVîsi⁄
();

18 
£tE¡ry
();

19 
£tProgømHódîOff£t
();

20 
£tSe˘i⁄HódîOff£t
();

21 
£tFœgs
();

22 
£tElfHódîSize
();

23 
£tProgømHódîIãmSize
();

24 
£tProgømHódîIãmNum
();

25 
£tSe˘i⁄HódîIãmSize
();

26 
£tSe˘i⁄HódîIãmNum
();

27 
£tSåögTabÀIndexInSe˘i⁄Hódî
();

29 
	m°d
::
¨øy
<
uöt8_t
,
	mEI_NIDENT
> 
gëEIdít
();

30 
Elf64_HÆf
 
gëTy≥
();

31 
Elf64_HÆf
 
gëMachöe
();

32 
Elf64_W‹d
 
gëVîsi⁄
();

33 
Elf64_Addr
 
gëE¡ry
();

34 
Elf64_Off
 
gëProgømHódîOff£t
();

35 
Elf64_Off
 
gëSe˘i⁄HódîOff£t
();

36 
Elf64_W‹d
 
gëFœgs
();

37 
Elf64_HÆf
 
gëElfHódîSize
();

38 
Elf64_HÆf
 
gëProgømHódîIãmSize
();

39 
Elf64_HÆf
 
gëProgømHódîIãmNum
();

40 
Elf64_HÆf
 
gëSe˘i⁄HódîIãmSize
();

41 
Elf64_HÆf
 
gëSe˘i⁄HódîIãmNum
();

42 
Elf64_HÆf
 
gëSe˘i⁄SåögTabÀIndex
();

44 
	m¥iv©e
:

45 
°d
::
°rög
 
°r_e_ty≥
();

46 
	m°d
::
°rög
 
°r_e_machöe
();

47 
	m°d
::
°rög
 
°r_e_vîsi⁄
();

49 
	m¥iv©e
:

50 
°d
::
¨øy
<
uöt8_t
,
	mEI_NIDENT
> 
	mm_e_idít
;

51 
Elf64_HÆf
 
	mm_e_ty≥
;

52 
Elf64_HÆf
 
	mm_e_machöe
;

53 
Elf64_W‹d
 
	mm_e_vîsi⁄
;

54 
Elf64_Addr
 
	mm_e_íåy
;

55 
Elf64_Off
 
	mm_e_phoff
;

56 
Elf64_Off
 
	mm_e_shoff
;

57 
Elf64_W‹d
 
	mm_e_Êags
;

58 
Elf64_HÆf
 
	mm_e_ehsize
;

59 
Elf64_HÆf
 
	mm_e_phítsize
;

60 
Elf64_HÆf
 
	mm_e_phnum
;

61 
Elf64_HÆf
 
	mm_e_shítsize
;

62 
Elf64_HÆf
 
	mm_e_shnum
;

63 
Elf64_HÆf
 
	mm_e_sh°∫dx
;

	@/home/xinhualu/repo/0_xhlu/0_pppppppp/0_project/0_elf_parser/elfer.cpp

1 
	~"ñ„r.hµ
"

2 
	~"£˘i⁄_hódî_èbÀ.hµ
"

4 
boﬁ
 
	gEl„r
::
	$isSe˘i⁄InSegmít
(
ProgømHódî
 
£gmít
, 
Se˘i⁄Hódî
 
£˘i⁄
)

6 
boﬁ
 
ªsu…
{
Ál£
};

20  
ªsu…
;

21 
	}
}

23 
	gEl„r
::
	$lﬂdSegmít2Mem
(
Mem‹y
* 
mem
)

25 auto& 
£gmít
: 
m_¥ogømHódîTabÀ
.
	`gë
())

27 
uöt32_t
 
ödex
=0; index<
£gmít
.
	`gëMemsz
(); index++ )

29 
mem
->
	`wrôe8
(
£gmít
.
	`gëVAddr
()+
ödex
, 
this
->
	`ªad8
(£gmít.
	`gëOff£t
()+index));

32 
	}
}

34 
uöt8_t
 
	gEl„r
::
	$ªad8
(
Elf64_Off
 
off£t
)

36 
uöt8_t
 
d©a
{0};

37 
°d
::
if°ªam
 
	`‰ód
(
m_fûíame
,°d::
ios
::
ö
|°d::ios::
bö¨y
);

38 
‰ód
.
	`£ekg
(
°d
::
	`°ªamoff
(
off£t
), std::
ios
::
beg
);

39 
‰ód
.
	`ªad
((*)&
d©a
 , (
uöt8_t
));

40 
‰ód
.
	`˛o£
();

42  
d©a
;

43 
	}
}

45 
	gEl„r
::
	$m≠SegmítsAndSe˘i⁄s
()

47 auto& 
£gmít
 : 
m_¥ogømHódîTabÀ
.
	`gë
())

49 
°d
::
cout
 << "M≠pög " << 
£gmít
.
	`gëTy≥
();

50 auto& 
£˘i⁄
 : 
m_£˘i⁄HódîTabÀ
.
	`gë
())

52 
°d
::
cout
 << " " << 
£˘i⁄
.
	`gë_sh_«me
();

59 
°d
::
cout
 << std::
ídl
;

61 
	}
}

63 
	gEl„r
::
	$dump
()

65 
m_ñfHódî
.
	`dump
();

66 
m_¥ogømHódîTabÀ
.
	`dump
();

73 
	}
}

75 
uöt64_t
 
	gEl„r
::
	$gë_íåy
()

77  
m_ñfHódî
.
	`gëE¡ry
();

78 
	}
}

	@/home/xinhualu/repo/0_xhlu/0_pppppppp/0_project/0_elf_parser/elfer.hpp

1 #i‚de‡
__ELFER_H__


2 
	#__ELFER_H__


	)

4 
	~"ñf_hódî.hµ
"

5 
	~"£˘i⁄_hódî_èbÀ.hµ
"

6 
	~"¥ogøm_hódî_èbÀ.hµ
"

7 
	~"£˘i⁄.hµ
"

8 
	~"£gmít.hµ
"

9 
	~"mem‹y.hµ
"

10 
	~<°rög
>

12 ˛as†
	cEl„r
{

13 
	mpublic
:

14 
	$El„r
(
°d
::
°rög
 
fûe
):
	$m_fûíame
(
fûe
) {

15 
m_ñfHódî
.
	`lﬂd
(
m_fûíame
);

16 
m_¥ogømHódîTabÀ
.
	`lﬂd
(
m_fûíame
,

17 
m_ñfHódî
.
	`gëProgømHódîOff£t
(),

18 
m_ñfHódî
.
	`gëProgømHódîIãmSize
(),

19 
m_ñfHódî
.
	`gëProgømHódîIãmNum
());

20 
m_£˘i⁄HódîTabÀ
.
	`lﬂd
(
m_fûíame
,

21 
m_ñfHódî
.
	`gëSe˘i⁄HódîOff£t
(),

22 
m_ñfHódî
.
	`gëSe˘i⁄HódîIãmSize
(),

23 
m_ñfHódî
.
	`gëSe˘i⁄HódîIãmNum
());

24 
m_£˘i⁄HódîTabÀ
.
	`lﬂdSe˘i⁄SåögTabÀ
(
m_fûíame
,

25 
m_ñfHódî
.
	`gëSe˘i⁄SåögTabÀIndex
());

26 
m_£˘i⁄HódîTabÀ
.
	`lﬂdSåögTabÀ
(
m_fûíame
);

27 
m_£˘i⁄HódîTabÀ
.
	`lﬂdSymbﬁTabÀ
(
m_fûíame
);

32 ~
	`El„r
() = ;

34 
	`dump
();

36 
	`lﬂdSegmít2Mem
(
Mem‹y
* 
mem
);

38 
	`m≠SegmítsAndSe˘i⁄s
();

39 
boﬁ
 
	`isSe˘i⁄InSegmít
(
ProgømHódî
, 
Se˘i⁄Hódî
);

41 
uöt64_t
 
	`gë_íåy
();

43 
¥iv©e
:

44 
uöt8_t
 
	`ªad8
(
Elf64_Off
 
off£t
);

46 
¥iv©e
:

48 
ElfHódî
 
m_ñfHódî
;

49 
ProgømHódîTabÀ
 
m_¥ogømHódîTabÀ
;

50 
Se˘i⁄HódîTabÀ
 
m_£˘i⁄HódîTabÀ
;

51 
Se˘i⁄s
 
m_£˘i⁄s
;

52 
Segmíts
 
m_£gmíts
;

55 
°d
::
°rög
 
m_fûíame
;

56 
	}
};

	@/home/xinhualu/repo/0_xhlu/0_pppppppp/0_project/0_elf_parser/instruction.hpp

2 #i‚de‡
__ISA_PARSER_H__


3 
	#__ISA_PARSER_H__


	)

5 
	~<¨øy
>

6 
	~<io°ªam
>

8 ˛as†
	cIn°OpCode
 : 
uöt8_t


11 
LUT
 = 0x37,

13 
	mAUIPC
 = 0x17,

15 
	mJAL
 = 0x6F,

17 
	mJALR
 = 0x67,

19 
	mBRANCH
 = 0x63,

20 
	mBEQ
 = 0x63,

21 
	mBNE
 = 0x63,

22 
	mBLT
 = 0x63,

23 
	mBGE
 = 0x63,

24 
	mBLTU
 = 0x63,

25 
	mBGEU
 = 0x63,

27 
	mLOAD
 = 0x3,

28 
	mLB
 = 0x3,

29 
	mLH
 = 0x3,

30 
	mLW
 = 0x3,

31 
	mLBU
 = 0x3,

32 
	mLHU
 = 0x3,

34 
	mLWU
 = 0x3,

35 
	mLD
 = 0x3,

38 
	mSTORE
 = 0x23,

39 
	mSB
 = 0x23,

40 
	mSH
 = 0x23,

41 
	mSW
 = 0x23,

43 
	mSD
 = 0x23,

45 
	mIMM
 = 0x13,

46 
	mADDI
 = 0x13,

47 
	mSLTI
 = 0x13,

48 
	mSLTIU
 = 0x13,

49 
	mXORI
 = 0x13,

50 
	mORI
 = 0x13,

51 
	mANDI
 = 0x13,

52 
	mSLLI
 = 0x13,

53 
	mSRLI
 = 0x13,

54 
	mSRAI
 = 0x13,

56 
	mREG
 = 0x33,

57 
	mADD
 = 0x33,

58 
	mSUB
 = 0x33,

59 
	mSLL
 = 0x33,

60 
	mSLT
 = 0x33,

61 
	mSLTU
 = 0x33,

62 
	mXOR
 = 0x33,

63 
	mSRL
 = 0x33,

64 
	mSRA
 = 0x33,

65 
	mOR
 = 0x33,

66 
	mAND
 = 0x33,

68 
	mFENCE
 = 0xF,

69 
	mFENCE_J
 = 0xF,

71 
	mSYSTEM
 = 0x73,

72 
	mECALL
 = 0x73,

73 
	mEBREA
 = 0x73,

74 
	mCSRRW
 = 0x73,

75 
	mCSRRS
 = 0x73,

76 
	mCSRRC
 = 0x73,

77 
	mCSRRSW
 = 0x73,

78 
	mCSRRSI
 = 0x73,

79 
	mCSRRCI
 = 0x73,

88 
	mIMM32
 = 0x1B,

89 
	mADDIW
 = 0x1B,

90 
	mSLLIW
 = 0x1B,

91 
	mSRLIW
 = 0x1B,

92 
	mSRAIW
 = 0x1B,

94 
	mOP32
 = 0x3B,

95 
	mADDW
 = 0x3B,

96 
	mSUBW
 = 0x3B,

97 
	mSLLW
 = 0x3B,

98 
	mSRLW
 = 0x3B,

99 
	mSRAW
 = 0x3B,

102 
	sIn°ru˘i⁄


108 
uöt32_t
 
	m›code
 : 7;

109 
uöt32_t
 
	mª£rve
 : 25;

111 } 
	mcomm⁄
;

115 
uöt32_t
 
	m›code
 : 7;

116 
uöt32_t
 
	mrd
 : 5;

117 
uöt32_t
 
	mfunc3
 : 3;

118 
uöt32_t
 
	mrs1
 : 5;

119 
uöt32_t
 
	mrs2
 : 5;

120 
uöt32_t
 
	mfunc7
 : 7;

121 } 
	mR
;

123 
uöt32_t
 
	m›code
 : 7;

124 
uöt32_t
 
	mrd
 : 5;

125 
uöt32_t
 
	mfunc3
 : 3;

126 
uöt32_t
 
	mrs1
 : 5;

127 
uöt32_t
 
	mimm_11_0
 : 12;

128 } 
	mI
;

130 
uöt32_t
 
	m›code
 : 7;

131 
uöt32_t
 
	mimm_4_0
 : 5;

132 
uöt32_t
 
	mfunc3
 : 3;

133 
uöt32_t
 
	mrs1
 : 5;

134 
uöt32_t
 
	mrs2
 : 5;

135 
uöt32_t
 
	mimm_11_5
 : 7;

136 } 
	mS
;

138 
uöt32_t
 
	m›code
 : 7;

139 
uöt32_t
 
	mimm_11
 : 1;

140 
uöt32_t
 
	mimm_4_1
 : 4;

141 
uöt32_t
 
	mfunc3
 : 3;

142 
uöt32_t
 
	mrs1
 : 5;

143 
uöt32_t
 
	mrs2
 : 5;

144 
uöt32_t
 
	mimm_10_5
 : 6;

145 
uöt32_t
 
	mimm_12
 : 1;

146 } 
	mSB
;

148 
uöt32_t
 
	m›code
 : 7;

149 
uöt32_t
 
	mrd
 : 5;

150 
uöt32_t
 
	mimm_31_12
 : 20;

151 } 
	mU
;

153 
uöt32_t
 
	m›code
 : 7;

154 
uöt32_t
 
	mrd
 : 5;

155 
uöt32_t
 
	mimm_19_12
 : 20;

156 
uöt32_t
 
	mimm_11
 : 20;

157 
uöt32_t
 
	mimm_10_1
 : 20;

158 
uöt32_t
 
	mimm_20
 : 20;

159 } 
	mUJ
;

160 }
	mrv32i
;

163 
uöt32_t
 
	m›code
 : 7;

164 
uöt32_t
 
	mrd
 : 5;

165 
uöt32_t
 
	mfunc3
 : 3;

166 
uöt32_t
 
	mrs1
 : 5;

167 
uöt32_t
 
	mrs2
 : 5;

168 
uöt32_t
 
	mfunc7
 : 7;

169 } 
	mR
;

171 
uöt32_t
 
	m›code
 : 7;

172 
uöt32_t
 
	mrd
 : 5;

173 
uöt32_t
 
	mfunc3
 : 3;

174 
uöt32_t
 
	mrs1
 : 5;

175 
uöt32_t
 
	mimm_11_0
 : 12;

176 } 
	mI
;

178 
uöt32_t
 
	m›code
 : 7;

179 
uöt32_t
 
	mimm_4_0
 : 5;

180 
uöt32_t
 
	mfunc3
 : 3;

181 
uöt32_t
 
	mrs1
 : 5;

182 
uöt32_t
 
	mrs2
 : 5;

183 
uöt32_t
 
	mimm_11_5
 : 7;

184 } 
	mS
;

185 }
	mrv64i
;

186 
uöt32_t
 
	mDoubÀW‹d
;

188 
uöt32_t
 
	mimm
;

189 
	m°d
::
°rög
 
›Name
;

194 
	#OUT_PRINT
 
°d
::
cout
 << std::
hex
 << std::
	`£tw
(12Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·


	)

195 
	#FORMAT
 
°d
::
dec
 << std::
	`£tw
(12Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·


	)

196 
	#INST_FORMAT
 
°d
::
hex
 << std::
	`£tw
(8Ë<< std::
	`£tfûl
('0')

	)

	@/home/xinhualu/repo/0_xhlu/0_pppppppp/0_project/0_elf_parser/memory.cpp

1 
	~"mem‹y.hµ
"

2 
	~"addªss.hµ
"

3 
	~<c°döt
>

4 
	~<iom™ù
>

5 
	~<io°ªam
>

7 
boﬁ
 
	gMem‹y
::
	$exi°Page
(
Addªss
 
addr
)

9 i‡(
m_mem
.
	`föd
(
addr
.
m_Dú
Ë!m_mem.
	`íd
()){

10 i‡(
m_mem
[
addr
.
m_Dú
].
	`föd
◊ddr.
m_∑ge
Ë=m_mem[addr.m_Dú].
	`íd
()){

11  
Ál£
;

15  
Ál£
;

18  
åue
;

19 
	}
}

21 
	gMem‹y
::
	$ÆlocPage
(
Addªss
 
addr
)

23 i‡(
m_mem
.
	`föd
(
addr
.
m_Dú
Ë=m_mem.
	`íd
()){

24 
m_mem
[
addr
.
m_Dú
] = 
	`PageDú
();

27 i‡(
m_mem
[
addr
.
m_Dú
].
	`föd
◊ddr.
m_∑ge
Ë=m_mem[addr.m_Dú].
	`íd
()){

28 
m_mem
[
addr
.
m_Dú
][addr.
m_∑ge
] = 
	`Page
();

30 
	}
}

32 
uöt8_t
 
	gMem‹y
::
	$ªad8
(
uöt32_t
 
addr
)

34 autÿ
addªss
 = 
Addªss
{
addr
};

36 if(!
	`exi°Page
(
addªss
))

38 
	`ÆlocPage
(
addªss
);

41  
m_mem
[
addªss
.
m_Dú
][addªss.
m_∑ge
][addªss.
m_off£t
].
d©a
;

42 
	}
}

44 
	gMem‹y
::
	$wrôe8
(
uöt32_t
 
addr
, 
uöt8_t
 
d©a
)

46 autÿ
addªss
 = 
Addªss
{
addr
};

48 if(!
	`exi°Page
(
addªss
))

50 
	`ÆlocPage
(
addªss
);

53 
m_mem
[
addªss
.
m_Dú
][addªss.
m_∑ge
][addªss.
m_off£t
].
d©a
 = data;

54 
m_mem
[
addªss
.
m_Dú
][addªss.
m_∑ge
][addªss.
m_off£t
].
°©us
 = 
MemTy≥
::
AŒoˇãd
;

55 
	}
}

56 
uöt16_t
 
	gMem‹y
::
	$ªad16
(
uöt32_t
 
addr
)

58 
uöt32_t
 
loˇlD©a
{0};

59 
uöt32_t
 
d©a
{0};

61 
uöt32_t
 
ödex
=0; index<2; index++)

63 
loˇlD©a
 = 
	`ªad8
(
addr
 + 
ödex
);

64 
d©a
 = d©®| (
loˇlD©a
 << (
ödex
 * 8));

67  
d©a
;

68 
	}
}

70 
uöt32_t
 
	gMem‹y
::
	$ªad32
(
uöt32_t
 
addr
)

72 
uöt32_t
 
loˇlD©a
{0};

73 
uöt32_t
 
d©a
{0};

75 
uöt32_t
 
ödex
=0; index<4; index++)

77 
loˇlD©a
 = 
	`ªad8
(
addr
 + 
ödex
);

78 
d©a
 = d©®| (
loˇlD©a
 << (
ödex
 * 8));

81  
d©a
;

82 
	}
}

83 
uöt64_t
 
	gMem‹y
::
	$ªad64
(
uöt32_t
 
addr
)

85 
uöt64_t
 
loˇlD©a
{0};

86 
uöt64_t
 
d©a
{0};

88 
uöt32_t
 
ödex
=0; index<8; index++)

90 
loˇlD©a
 = 
	`ªad8
(
addr
 + 
ödex
);

92 
d©a
 = d©®| (
loˇlD©a
 << (
ödex
 * 8));

95  
d©a
;

96 
	}
}

97 
	gMem‹y
::
	$wrôe16
(
uöt32_t
 
addr
, 
uöt16_t
 
d©a
)

99 
uöt8_t
 
loˇlD©a
{0};

101 
ödex
=0; index<(
uöt16_t
); index++)

103 
loˇlD©a
 = 
°©ic_ˇ°
<
uöt8_t
>(
d©a
>>(
ödex
 * 8));

104 
	`wrôe8
(
addr
+
ödex
 , 
loˇlD©a
);

106 
	}
}

107 
	gMem‹y
::
	$wrôe32
(
uöt32_t
 
addr
, uöt32_à
d©a
)

109 
uöt8_t
 
loˇlD©a
{0};

111 
ödex
=0; index<(
uöt32_t
); index++)

113 
loˇlD©a
 = 
°©ic_ˇ°
<
uöt8_t
>(
d©a
>>(
ödex
 * 8));

114 
	`wrôe8
(
addr
+
ödex
 , 
loˇlD©a
);

116 
	}
}

118 
	gMem‹y
::
	$wrôe64
(
uöt32_t
 
addr
, 
uöt64_t
 
d©a
)

120 
uöt8_t
 
loˇlD©a
{0};

122 
ödex
=0; index<(
uöt64_t
); index++)

124 
loˇlD©a
 = 
°©ic_ˇ°
<
uöt8_t
>(
d©a
>>(
ödex
 * 8));

125 
	`wrôe8
(
addr
+
ödex
 , 
loˇlD©a
);

127 
	}
}

130 
	#RESET
 "\033[0m"

	)

131 
	#BLACK
 "\033[30m"

	)

132 
	#RED
 "\033[31m"

	)

133 
	#GREEN
 "\033[32m"

	)

134 
	#YELLOW
 "\033[33m"

	)

135 
	#BLUE
 "\033[34m"

	)

136 
	#MAGENTA
 "\033[35m"

	)

137 
	#CYAN
 "\033[36m"

	)

138 
	#WHITE
 "\033[37m"

	)

140 
	#BOLDBLACK
 "\033[1m\033[30m"

	)

141 
	#BOLDRED
 "\033[1m\033[31m"

	)

142 
	#BOLDGREEN
 "\033[1m\033[32m"

	)

143 
	#BOLDYELLOW
 "\033[1m\033[33m"

	)

144 
	#BOLDBLUE
 "\033[1m\033[34m"

	)

145 
	#BOLDMAGENTA
 "\033[1m\033[35m"

	)

146 
	#BOLDCYAN
 "\033[1m\033[36m"

	)

147 
	#BOLDWHITE
 "\033[1m\033[37m"

	)

150 
	gMem‹y
::
	$dump
()

152 
	#LINE_ITEMS_NUM
 0x20

	)

154 
uöt32_t
 
löeIãmNum
{
LINE_ITEMS_NUM
};

155 
°d
::
¨øy
<
MemCñl
, 
LINE_ITEMS_NUM
> 
löe
;

157 
uöt32_t
 
sum
{0};

159 
°d
::
cout
 << std::
ídl
;

160 
°d
::
cout
 << "Mem‹y Dump: " << std::
ídl
;

162 
°d
::
cout
 << std::
hex
 << std::
	`£tw
(8Ë<< std::
	`£tfûl
('0'Ë<< std::
right


164 
uöt32_t
 
tôÀ
=0;ÅôÀ<
LINE_ITEMS_NUM
;Åitle++)

166 
°d
::
cout
 << std::
hex
 << std::
	`£tw
(2Ë<< std::
	`£tfûl
('0'Ë<< std::
right
 << 
tôÀ
 << " ";

168 
°d
::
cout
 << std::
ídl
;

170 auto& 
dú
 : 
m_mem
){

171 auto& 
∑ge
 : 
dú
.
£c⁄d
){

172 
uöt32_t
 
ödex
=0; index <= 0x1000; index++){

173 if(((
ödex
%
löeIãmNum
) == 0) && (index != 0) ){

174 
sum
 = 0;

175 autÿ& 
ôem
: 
löe
){

176 
sum
 +
ôem
.
d©a
;

178 i‡(
sum
 == 0){

179 
löe
[
ödex
%
löeIãmNum
] = 
∑ge
.
£c⁄d
[index];

182 
°d
::
cout
 << std::
hex
 << std::
	`£tw
(8Ë<< std::
	`£tfûl
('0'Ë<< std::
right


183 << 
	`Addªss
(
dú
.
fú°
, 
∑ge
.fú°, 
ödex
-(
löeIãmNum
)).
	`vÆue
() << " : ";

184 autÿ& 
ôem
: 
löe
){

185 i‡(
ôem
.
°©us
 =
MemTy≥
::
AŒoˇãd
){

186 
°d
::
cout
 << 
GREEN
 << std::
hex
 << std::
	`£tw
(2Ë<< std::
	`£tfûl
('0'Ë<< std::
right


187 << +
ôem
.
d©a
 << 
RESET
 << " ";

190 
°d
::
cout
 << std::
hex
 << std::
	`£tw
(2Ë<< std::
	`£tfûl
('0'Ë<< std::
right


191 << +
ôem
.
d©a
 << " ";

194 auto& 
ôem
: 
löe
)

196 
ôem
.
d©a
 = 0;

197 
ôem
.
°©us
 = 
MemTy≥
::
UnAŒoc
;

199 
°d
::
cout
 << std::
ídl
;

201 
löe
[
ödex
%
löeIãmNum
] = 
∑ge
.
£c⁄d
[index];

204 
sum
 = 0;

205 autÿ& 
ôem
: 
löe
){

206 
sum
 +
ôem
.
d©a
;

208 i‡(
sum
 != 0){

209 
°d
::
cout
 << std::
hex
 << std::
	`£tw
(8Ë<< std::
	`£tfûl
('0'Ë<< std::
right


210 << 
	`Addªss
(
dú
.
fú°
, 
∑ge
.fú°, 0x1000-(0x1000%
löeIãmNum
)).
	`vÆue
() << " : ";

212 autÿ& 
ôem
: 
löe
){

213 i‡(
ôem
.
°©us
 =
MemTy≥
::
AŒoˇãd
){

214 
°d
::
cout
 << 
GREEN
 << std::
hex
 << std::
	`£tw
(2Ë<< std::
	`£tfûl
('0'Ë<< std::
right


215 << +
ôem
.
d©a
 << 
RESET
 << " ";

218 
°d
::
cout
 << std::
hex
 << std::
	`£tw
(2Ë<< std::
	`£tfûl
('0'Ë<< std::
right


219 << +
ôem
.
d©a
 << " ";

226 
°d
::
cout
 << std::
ídl
;

227 
	}
}

	@/home/xinhualu/repo/0_xhlu/0_pppppppp/0_project/0_elf_parser/memory.hpp

1 #i‚de‡
__MEMORY_H__


2 
	#__MEMORY_H__


	)

4 
	~<¨øy
>

5 
	~<io°ªam
>

6 
	~<mem‹y
>

7 
	~<ve˘‹
>

8 
	~<c°döt
>

9 
	~<c°dboﬁ
>

10 
	~<m≠
>

12 
	~"addªss.hµ
"

14 ˛as†
	cMemTy≥
 : 
uöt8_t


16 
UnAŒoc
,

17 
	mAŒoˇãd


20 ˛as†
	cMemCñl
{

21 
	mpublic
:

22 
uöt8_t
 
d©a
;

23 
MemTy≥
 
	m°©us
;

26 ˛as†
	cMem‹y
{

27 
	mpublic
:

28 
usög
 
Page
 = 
°d
::
¨øy
<
MemCñl
, 0x1000>;

29 
usög
 
	mPageDú
 = 
°d
::
m≠
<
uöt32_t
, 
	mPage
>;

30 
usög
 
	mMem
 = 
°d
::
m≠
<
uöt32_t
, 
	mPageDú
>;

32 
uöt8_t
 
ªad8
(
uöt32_t
 
addr
);

33 
uöt16_t
 
ªad16
(
uöt32_t
 
addr
);

34 
uöt32_t
 
ªad32
(uöt32_à
addr
);

35 
uöt64_t
 
ªad64
(
uöt32_t
 
addr
);

37 
wrôe8
(
uöt32_t
 
addr
, 
uöt8_t
 
d©a
);

38 
wrôe16
(
uöt32_t
 
addr
, 
uöt16_t
 
d©a
);

39 
wrôe32
(
uöt32_t
 
addr
, uöt32_à
d©a
);

40 
wrôe64
(
uöt32_t
 
addr
, 
uöt64_t
 
d©a
);

43 
dump
();

45 
	m¥iv©e
:

46 
boﬁ
 
exi°Page
(
Addªss
 
addr
);

47 
ÆlocPage
(
Addªss
 
addr
);

49 
	m¥iv©e
:

50 
Mem
 
m_mem
;

	@/home/xinhualu/repo/0_xhlu/0_pppppppp/0_project/0_elf_parser/program_header_table.cpp

1 
	~"¥ogøm_hódî_èbÀ.hµ
"

2 
	~<iom™ù
>

4 
	gProgømHódî
::
	$lﬂd
(
°d
::
°rög
 
fûe
, 
Elf64_Off
 
off£t
, 
Elf64_HÆf
 
size
)

6 
°d
::
if°ªam
 
	`‰ód
(
fûe
,°d::
ios
::
ö
|°d::ios::
bö¨y
);

8 
‰ód
.
	`£ekg
(
°d
::
	`°ªamoff
(
off£t
), std::
ios
::
beg
);

10 
‰ód
.
	`ªad
((*)&
m_p_ty≥
 , (m_p_type));

11 
‰ód
.
	`ªad
((*)&
m_p_Êags
 , (m_p_flags));

12 
‰ód
.
	`ªad
((*)&
m_p_off£t
 , (m_p_offset));

13 
‰ód
.
	`ªad
((*)&
m_p_vaddr
 , (m_p_vaddr));

14 
‰ód
.
	`ªad
((*)&
m_p_∑ddr
 , (m_p_paddr));

15 
‰ód
.
	`ªad
((*)&
m_p_fûesz
 , (m_p_filesz));

16 
‰ód
.
	`ªad
((*)&
m_p_memsz
 , (m_p_memsz));

17 
‰ód
.
	`ªad
((*)&
m_p_Æign
 , (m_p_align));

19 
‰ód
.
	`˛o£
();

20 
	}
}

22 
	gProgømHódî
::
	$dump
(){

23 
°d
::
cout
 << std::
	`£tw
(16*8Ë<< std::
	`£tfûl
('-'Ë<< std::
À·
 << "-" << std::
ídl
;

24 
°d
::
cout
 << std::
hex
 << std::
	`£tw
(16Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << 
	`°r_p_ty≥
()

25 << 
°d
::
hex
 << std::
	`£tw
(16Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << 
m_p_off£t


26 << 
°d
::
hex
 << std::
	`£tw
(16Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << 
m_p_vaddr


27 << 
°d
::
hex
 << std::
	`£tw
(16Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << 
m_p_∑ddr


28 << 
°d
::
hex
 << std::
	`£tw
(16Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << 
m_p_fûesz


29 << 
°d
::
hex
 << std::
	`£tw
(16Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << 
m_p_memsz


30 << 
°d
::
hex
 << std::
	`£tw
(16Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << 
m_p_Êags


31 << 
°d
::
hex
 << std::
	`£tw
(16Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << 
m_p_Æign
 << std::
ídl
;;

32 
	}
}

35 
	g°d
::
°rög
 
ProgømHódî
::
	$°r_p_ty≥
()

37 
°d
::
ve˘‹
<°d::
∑ú
<
uöt32_t
, std::
°rög
>> 
p_ty≥_°rög
{

38 
°d
::
	`make_∑ú
(
PT_NULL
 , "NULL"),

39 
°d
::
	`make_∑ú
(
PT_LOAD
 , "LOAD"),

40 
°d
::
	`make_∑ú
(
PT_DYNAMIC
 , "DYN"),

41 
°d
::
	`make_∑ú
(
PT_INTERP
 , "INTERP"),

42 
°d
::
	`make_∑ú
(
PT_NOTE
 , "NOTE"),

43 
°d
::
	`make_∑ú
(
PT_SHLIB
 , "SHLIB"),

44 
°d
::
	`make_∑ú
(
PT_PHDR
 , "PHDR"),

45 
°d
::
	`make_∑ú
(
PT_LOPROC
 , "LOPROC"),

46 
°d
::
	`make_∑ú
(
PT_HIPROC
 , "HIPROC"),

48 
°d
::
	`make_∑ú
(
PT_GNU_PROPERTY
 , "GNU_PROPERTY"),

49 
°d
::
	`make_∑ú
(
PT_GNU_SFRAME
 , "HIPROC"),

50 
°d
::
	`make_∑ú
(
PT_GNU_RELRO
 , "HIPROC"),

51 
°d
::
	`make_∑ú
(
PT_HIPROC
 , "HIPROC"),

78 autÿ& 
ôem
 : 
p_ty≥_°rög
)

80 i‡(
ôem
.
fú°
 =
m_p_ty≥
)

81  
ôem
.
£c⁄d
;

84  
°d
::
	`°rög
("unknow_e_type");

86 
	}
}

88 
uöt32_t
 
	gProgømHódî
::
	$gëTy≥
()

90  
m_p_ty≥
;

91 
	}
}

92 
uöt64_t
 
	gProgømHódî
::
	$gëOff£t
()

94  
m_p_off£t
;

95 
	}
}

96 
uöt64_t
 
	gProgømHódî
::
	$gëVAddr
()

98  
m_p_vaddr
;

99 
	}
}

100 
uöt64_t
 
	gProgømHódî
::
	$gëPAddr
()

102  
m_p_∑ddr
;

103 
	}
}

104 
uöt64_t
 
	gProgømHódî
::
	$gëFûesz
()

106  
m_p_fûesz
;

107 
	}
}

108 
uöt64_t
 
	gProgømHódî
::
	$gëMemsz
()

110  
m_p_memsz
;

111 
	}
}

112 
uöt32_t
 
	gProgømHódî
::
	$gëFœgs
()

114  
m_p_Êags
;

115 
	}
}

116 
uöt64_t
 
	gProgømHódî
::
	$gëAlign
()

118  
m_p_Æign
;

119 
	}
}

123 
	g°d
::
ve˘‹
<
ProgømHódî
> 
ProgømHódîTabÀ
::
	$gë
()

125  
m_¥ogømHódîTabÀ
;

126 
	}
}

128 
	gProgømHódîTabÀ
::
	$lﬂd
(
°d
::
°rög
 
fûe
,

129 
Elf64_Off
 
ProgømHódîTabÀOff£t
,

130 
Elf64_HÆf
 
ProgømHódîTabÀIãmSize
,

131 
Elf64_HÆf
 
ProgømHódîIãmNum
)

133 
uöt32_t
 
ödex
 = 0; index < 
ProgømHódîIãmNum
; index++)

135 
ProgømHódî
 
¥ogømHódî
;

136 
¥ogømHódî
.
	`lﬂd
(
fûe
,

137 
ProgømHódîTabÀOff£t
 + 
ProgømHódîTabÀIãmSize
 * 
ödex
,

138 
ProgømHódîTabÀIãmSize
);

139 
m_¥ogømHódîTabÀ
.
	`em∂a˚_back
(
¥ogømHódî
);

141 
	}
}

143 
	gProgømHódîTabÀ
::
	$dump
()

145 
°d
::
cout
 << std::
ídl
;

146 
°d
::
cout
 << std::
ídl
;

147 
°d
::
cout
 << "Progøm Hódî TabÀ : " << std::
ídl
;

148 
°d
::
cout
 << std::
	`£tw
(16*8Ë<< std::
	`£tfûl
('-'Ë<< std::
À·
 << "-" << std::
ídl
;

149 
°d
::
cout
 << std::
	`£tw
(16Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << "m_p_type"

150 << 
°d
::
	`£tw
(16Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << "m_p_offset"

151 << 
°d
::
	`£tw
(16Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << "m_p_vaddr"

152 << 
°d
::
	`£tw
(16Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << "m_p_paddr"

153 << 
°d
::
	`£tw
(16Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << "m_p_filesz"

154 << 
°d
::
	`£tw
(16Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << "m_p_memsz"

155 << 
°d
::
	`£tw
(16Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << "m_p_flags"

156 << 
°d
::
	`£tw
(16Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << "m_p_Æign" << std::
ídl
;

158 auto& 
¥ogømHódî
 : 
m_¥ogømHódîTabÀ
)

160 
¥ogømHódî
.
	`dump
();

162 
°d
::
cout
 << std::
	`£tw
(16*8Ë<< std::
	`£tfûl
('-'Ë<< std::
À·
 << "-" << std::
ídl
;

163 
	}
}

	@/home/xinhualu/repo/0_xhlu/0_pppppppp/0_project/0_elf_parser/program_header_table.hpp

1 #i‚de‡
__PROGROM_HEADER_TABLE_H__


2 
	#__PROGROM_HEADER_TABLE_H__


	)

4 
	~"comm⁄.hµ
"

5 
	~<ve˘‹
>

6 
	~"£˘i⁄_hódî_èbÀ.hµ
"

8 ˛as†
	cProgømHódî
{

9 
	mpublic
:

10 
ProgømHódî
() = ;

11 ~
ProgømHódî
() = ;

13 
lﬂd
(
°d
::
°rög
 
fûe
, 
Elf64_Off
 
off£t
, 
Elf64_HÆf
 
size
);

14 
dump
();

16 
£tTy≥
 (
uöt32_t
 
ty≥
);

17 
£tOff£t
(
uöt64_t
 
off£t
);

18 
£tVAddr
 (
uöt64_t
 
vaddr
);

19 
£tPAddr
 (
uöt64_t
 
∑ddr
);

20 
£tFûesz
(
uöt64_t
 
fûesz
);

21 
£tMemsz
 (
uöt64_t
 
memsz
);

22 
£tFœgs
 (
uöt32_t
 
Êags
);

23 
£tAlign
 (
uöt64_t
 
Æign
);

26 
uöt32_t
 
gëTy≥
();

27 
uöt64_t
 
gëOff£t
();

28 
uöt64_t
 
gëVAddr
();

29 
uöt64_t
 
gëPAddr
();

30 
uöt64_t
 
gëFûesz
();

31 
uöt64_t
 
gëMemsz
();

32 
uöt32_t
 
gëFœgs
();

33 
uöt64_t
 
gëAlign
();

35 
	m°d
::
°rög
 
°r_p_ty≥
();

37 
	m¥iv©e
:

47 
uöt32_t
 
m_p_ty≥
;

48 
uöt64_t
 
	mm_p_off£t
;

49 
uöt64_t
 
	mm_p_vaddr
;

50 
uöt64_t
 
	mm_p_∑ddr
;

51 
uöt64_t
 
	mm_p_fûesz
;

52 
uöt64_t
 
	mm_p_memsz
;

53 
uöt32_t
 
	mm_p_Êags
;

54 
uöt64_t
 
	mm_p_Æign
;

56 
	m°d
::
ve˘‹
<
Se˘i⁄Hódî
> 
m_£˘i⁄s
;

64 ˛as†
	cProgømHódîTabÀ
{

65 
	mpublic
:

66 
ProgømHódîTabÀ
() = ;

67 ~
ProgømHódîTabÀ
() = ;

69 
lﬂd
(
°d
::
°rög
 
fûe
, 
Elf64_Off
 
ProgømHódîTabÀOff£t
, 
Elf64_HÆf
 
ProgømHódîTabÀIãmSize
, Elf64_HÆ‡
ProgømHódîIãmNum
);

70 
dump
();

71 
	m°d
::
ve˘‹
<
ProgømHódî
> 
gë
();

73 
	m¥iv©e
:

75 
°d
::
ve˘‹
<
ProgømHódî
> 
m_¥ogømHódîTabÀ
;

	@/home/xinhualu/repo/0_xhlu/0_pppppppp/0_project/0_elf_parser/section.cpp

1 
	~"£˘i⁄.hµ
"

	@/home/xinhualu/repo/0_xhlu/0_pppppppp/0_project/0_elf_parser/section.hpp

1 #i‚de‡
__SECTION_H__


2 
	#__SECTION_H__


	)

4 
	~"comm⁄.hµ
"

6 ˛as†
	cSe˘i⁄
{

7 
	mpublic
:

8 
Se˘i⁄
() = ;

9 ~
Se˘i⁄
() = ;

11 
	m¥iv©e
:

15 ˛as†
	cSe˘i⁄s
{

16 
	mpublic
:

17 
Se˘i⁄s
() = ;

18 ~
Se˘i⁄s
() = ;

20 
	m¥iv©e
:

21 
°d
::
ve˘‹
<
Se˘i⁄
> 
m_£˘i⁄s
;

	@/home/xinhualu/repo/0_xhlu/0_pppppppp/0_project/0_elf_parser/section_header_table.cpp

1 
	~"£˘i⁄_hódî_èbÀ.hµ
"

2 
	~<ch¨c⁄v
>

3 
	~<c°döt
>

4 
	~<ios
>

5 
	~<io°ªam
>

6 
	~<°dex˚±
>

8 
usög
 
«me•a˚
 
	g°d
;

10 
Elf64_W‹d
 
	gSe˘i⁄Hódî
::
	$gë_sh_«me
(){

11  
sh_«me
;

12 
	}
}

13 
Elf64_W‹d
 
	gSe˘i⁄Hódî
::
	$gë_sh_ty≥
(){

14  
sh_ty≥
;

15 
	}
}

16 
Elf64_Xw‹d
 
	gSe˘i⁄Hódî
::
	$gë_sh_Êags
(){

17  
sh_Êags
;

18 
	}
}

19 
Elf64_Addr
 
	gSe˘i⁄Hódî
::
	$gë_sh_addr
(){

20  
sh_addr
;

21 
	}
}

22 
Elf64_Off
 
	gSe˘i⁄Hódî
::
	$gë_sh_off£t
(){

23  
sh_off£t
;

24 
	}
}

25 
Elf64_Xw‹d
 
	gSe˘i⁄Hódî
::
	$gë_sh_size
(){

26  
sh_size
;

27 
	}
}

28 
Elf64_W‹d
 
	gSe˘i⁄Hódî
::
	$gë_sh_lök
(){

29  
sh_lök
;

30 
	}
}

31 
Elf64_W‹d
 
	gSe˘i⁄Hódî
::
	$gë_sh_öfo
(){

32  
sh_öfo
;

33 
	}
}

34 
Elf64_Xw‹d
 
	gSe˘i⁄Hódî
::
	$gë_sh_addølign
(){

35  
sh_addølign
;

36 
	}
}

37 
Elf64_Xw‹d
 
	gSe˘i⁄Hódî
::
	$gë_sh_ítsize
(){

38  
sh_ítsize
;

39 
	}
}

41 
	gSe˘i⁄Hódî
::
	$lﬂd
(
°d
::
°rög
 
fûe
, 
Elf64_Off
 
off£t
, 
Elf64_Xw‹d
 
size
)

43 
°d
::
if°ªam
 
	`‰ód
(
fûe
,°d::
ios
::
ö
|°d::ios::
bö¨y
);

45 
‰ód
.
	`£ekg
(
°d
::
	`°ªamoff
(
off£t
), std::
ios
::
beg
);

47 
‰ód
.
	`ªad
((*)&
sh_«me
 , (sh_name ));

48 
‰ód
.
	`ªad
((*)&
sh_ty≥
 , (sh_type ));

49 
‰ód
.
	`ªad
((*)&
sh_Êags
 , (sh_flags ));

50 
‰ód
.
	`ªad
((*)&
sh_addr
 , (sh_addr ));

51 
‰ód
.
	`ªad
((*)&
sh_off£t
 , (sh_offset ));

52 
‰ód
.
	`ªad
((*)&
sh_size
 , (sh_size ));

53 
‰ód
.
	`ªad
((*)&
sh_lök
 , (sh_link ));

54 
‰ód
.
	`ªad
((*)&
sh_öfo
 , (sh_info ));

55 
‰ód
.
	`ªad
((*)&
sh_addølign
 , (sh_addralign ));

56 
‰ód
.
	`ªad
((*)&
sh_ítsize
 , (sh_entsize ));

58 
‰ód
.
	`˛o£
();

59 
	}
}

61 
	gSe˘i⁄Hódî
::
	$dump
(
uöt32_t
 
ödex
, 
°d
::
°rög
 
«me
)

63 
°d
::
cout
 << std::
	`£tw
(10*11 + 15Ë<< std::
	`£tfûl
('-'Ë<< std::
À·
 << "-" << std::
ídl
;

64 
°d
::
cout
 << std::
dec
 << std::
	`£tw
(8Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << 
ödex


65 << 
°d
::
hex
 << std::
	`£tw
(20Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << 
«me


66 << 
°d
::
hex
 << std::
	`£tw
(10Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << 
sh_ty≥


67 << 
°d
::
hex
 << std::
	`£tw
(10Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << 
sh_Êags


68 << 
°d
::
hex
 << std::
	`£tw
(10Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << 
sh_addr


69 << 
°d
::
hex
 << std::
	`£tw
(10Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << 
sh_off£t


70 << 
°d
::
hex
 << std::
	`£tw
(10Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << 
sh_size


71 << 
°d
::
hex
 << std::
	`£tw
(10Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << 
sh_lök


72 << 
°d
::
hex
 << std::
	`£tw
(10Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << 
sh_öfo


73 << 
°d
::
hex
 << std::
	`£tw
(15Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << 
sh_addølign


74 << 
°d
::
hex
 << std::
	`£tw
(15Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << 
sh_ítsize
 << std::
ídl
;;

75 
	}
}

77 
	g°d
::
ve˘‹
<
Se˘i⁄Hódî
> 
Se˘i⁄HódîTabÀ
::
	$gë
()

79  
m_£˘i⁄HódîTabÀ
;

80 
	}
}

82 
	gSe˘i⁄HódîTabÀ
::
	$lﬂd
(
°d
::
°rög
 
fûe
,

83 
Elf64_Off
 
Se˘i⁄HódîTabÀOff£t
,

84 
Elf64_HÆf
 
Se˘i⁄HódîTabÀIãmSize
,

85 
Elf64_HÆf
 
Se˘i⁄HódîTabÀIãmNum
)

87 
uöt32_t
 
ödex
 = 0; index < 
Se˘i⁄HódîTabÀIãmNum
; index++)

89 
Se˘i⁄Hódî
 
£˘i⁄Hódî
;

90 
£˘i⁄Hódî
.
	`lﬂd
(
fûe
,

91 
Se˘i⁄HódîTabÀOff£t
 + 
Se˘i⁄HódîTabÀIãmSize
 * 
ödex
,

92 
Se˘i⁄HódîTabÀIãmSize
);

93 
m_£˘i⁄HódîTabÀ
.
	`em∂a˚_back
(
£˘i⁄Hódî
);

95 
	}
}

97 
Se˘i⁄Hódî
 
	gSe˘i⁄HódîTabÀ
::
	$gëSe˘i⁄HódîByIndex
(
uöt32_t
 
ödex
){

98  
m_£˘i⁄HódîTabÀ
.
	`©
(
ödex
);

99 
	}
}

101 
	gSe˘i⁄HódîTabÀ
::
	$dump
()

103 
°d
::
cout
 << std::
ídl
;

104 
°d
::
cout
 << std::
ídl
;

105 
°d
::
cout
 << "Se˘i⁄ Hódî TabÀ : " << std::
ídl
;

106 
°d
::
cout
 << std::
	`£tw
(10*11+15Ë<< std::
	`£tfûl
('-'Ë<< std::
À·
 << "-" << std::
ídl
;

107 
°d
::
cout
 << std::
	`£tw
(8Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << "[No.]"

108 << 
°d
::
	`£tw
(20Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << "sh_name"

109 << 
°d
::
	`£tw
(10Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << "sh_type"

110 << 
°d
::
	`£tw
(10Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << "sh_flags"

111 << 
°d
::
	`£tw
(10Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << "sh_addr"

112 << 
°d
::
	`£tw
(10Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << "sh_offset"

113 << 
°d
::
	`£tw
(10Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << "sh_size"

114 << 
°d
::
	`£tw
(10Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << "sh_link"

115 << 
°d
::
	`£tw
(10Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << "sh_info"

116 << 
°d
::
	`£tw
(15Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << "sh_addralign"

117 << 
°d
::
	`£tw
(15Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << "sh_ítsize" << std::
ídl
;

119 
uöt32_t
 
ödex
{0};

121 auto& 
£˘i⁄Hódî
 : 
m_£˘i⁄HódîTabÀ
)

123 autÿ
«meId
 = 
£˘i⁄Hódî
.
	`gë_sh_«me
();

124 autÿ
«me
 = 
	`°r_sh_«me_ö_£˘i⁄_°rög_èbÀ
(
«meId
);

125 
£˘i⁄Hódî
.
	`dump
(
ödex
++, 
«me
);

127 
°d
::
cout
 << std::
	`£tw
(10*11+ 15Ë<< std::
	`£tfûl
('-'Ë<< std::
À·
 << "-" << std::
ídl
;

130 
	}
}

132 
	gSe˘i⁄HódîTabÀ
::
	$dumpSe˘i⁄SåögTabÀ
()

134 autÿ
ödex
{0};

135 
°d
::
cout
 << std::
ídl
;

136 
°d
::
cout
 << std::
ídl
;

137 
°d
::
cout
 << "Se˘i⁄ Såög TabÀ : " << std::
ídl
;

138 
°d
::
cout
 << std::
	`£tw
(8Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << "[No.]"

139 << 
°d
::
	`£tw
(8Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << "NameId"

140 << 
°d
::
	`£tw
(10Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << "Name"

141 << 
°d
::
ídl
;

142 auto& 
°rögName
 : 
m_£˘i⁄SåögTabÀ
)

144 
°d
::
cout
 << std::
	`£tw
(8Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << std::
dec
 << 
ödex
++

145 << 
°d
::
	`£tw
(8Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << std::
hex
 << 
°rögName
.
fú°


146 << 
°d
::
	`£tw
(10Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << 
°rögName
.
£c⁄d


147 << 
°d
::
ídl
;

149 
	}
}

151 
	gSe˘i⁄HódîTabÀ
::
	$lﬂdSe˘i⁄SåögTabÀ
(
°d
::
°rög
 
fûe
, 
Elf64_HÆf
 
£˘i⁄SåögTabÀIndex
)

153 
Se˘i⁄Hódî
 
£˘i⁄SåögTabÀSe˘i⁄Hódî
 = 
	`gëSe˘i⁄HódîByIndex
(
£˘i⁄SåögTabÀIndex
);

155 
°d
::
if°ªam
 
	`‰ód
(
fûe
,°d::
ios
::
ö
|°d::ios::
bö¨y
);

157 
‰ód
.
	`£ekg
(
°d
::
	`°ªamoff
(
£˘i⁄SåögTabÀSe˘i⁄Hódî
.
	`gë_sh_off£t
()), std::
ios
::
beg
);

159 
d©a
{0};

161 
uöt32_t
 
ödex
 = 0; index < 
£˘i⁄SåögTabÀSe˘i⁄Hódî
.
	`gë_sh_size
(); index++)

163 
°d
::
°rög
 
tmp°r
;

164 autÿ
«meId
{
ödex
};

166 
‰ód
.
	`ªad
((*)&
d©a
, (data));

168 
d©a
 != '\0')

170 
ödex
++;

171 
tmp°r
 +
d©a
;

172 
‰ód
.
	`ªad
((*)&
d©a
, (data));

174 
m_£˘i⁄SåögTabÀ
[
«meId
] = 
tmp°r
;

177 
‰ód
.
	`˛o£
();

178 
	}
}

180 
	g°d
::
°rög
 
Se˘i⁄HódîTabÀ
::
	$°r_sh_«me_ö_£˘i⁄_°rög_èbÀ
(
Elf64_W‹d
 
«meId
)

182 i‡(1 !
m_£˘i⁄SåögTabÀ
.
	`cou¡
(
«meId
))

184 
°d
::
	`ru¡ime_îr‹
("there isÇotÇame string ");

186  
m_£˘i⁄SåögTabÀ
[
«meId
];

187 
	}
}

189 
	g°d
::
°rög
 
Se˘i⁄HódîTabÀ
::
	$°r_sh_«me_ö_°rög_èbÀ
(
Elf64_W‹d
 
«meId
)

191 i‡(1 !
m_°rögTabÀ
.
	`cou¡
(
«meId
))

193 
°d
::
	`ru¡ime_îr‹
("there isÇotÇame string ");

195  
m_°rögTabÀ
[
«meId
];

196 
	}
}

200 
Se˘i⁄Hódî
 
	gSe˘i⁄HódîTabÀ
::
	$gëSåögTabÀ
()

202 
°d
::
°rög
 
°rögTabÀSå
{".strtab"};

203 
Se˘i⁄Hódî
 
£˘i⁄HódîResu…
;

205 auto& 
£˘i⁄Hódî
 : 
m_£˘i⁄HódîTabÀ
)

207 autÿ
«meId
 = 
£˘i⁄Hódî
.
	`gë_sh_«me
();

208 autÿ
«me
 = 
	`°r_sh_«me_ö_£˘i⁄_°rög_èbÀ
(
«meId
);

209 i‡(
«me
 =
°rögTabÀSå
)

211 
£˘i⁄HódîResu…
 = 
£˘i⁄Hódî
;

215  
£˘i⁄HódîResu…
;

216 
	}
}

218 
	gSe˘i⁄HódîTabÀ
::
	$lﬂdSåögTabÀ
(
°d
::
°rög
 
fûe
)

220 
Se˘i⁄Hódî
 
°rögTabÀSe˘i⁄Hódî
 = 
	`gëSåögTabÀ
();

222 
°d
::
if°ªam
 
	`‰ód
(
fûe
,°d::
ios
::
ö
|°d::ios::
bö¨y
);

224 
‰ód
.
	`£ekg
(
°d
::
	`°ªamoff
(
°rögTabÀSe˘i⁄Hódî
.
	`gë_sh_off£t
()), std::
ios
::
beg
);

226 
d©a
{0};

228 
uöt32_t
 
ödex
 = 0; index < 
°rögTabÀSe˘i⁄Hódî
.
	`gë_sh_size
(); index++)

230 
°d
::
°rög
 
tmp°r
;

231 autÿ
«meId
{
ödex
};

233 
‰ód
.
	`ªad
((*)&
d©a
, (data));

235 
d©a
 != '\0')

237 
ödex
++;

238 
tmp°r
 +
d©a
;

239 
‰ód
.
	`ªad
((*)&
d©a
, (data));

241 
m_°rögTabÀ
[
«meId
] = 
tmp°r
;

244 
‰ód
.
	`˛o£
();

245 
	}
}

246 
	gSe˘i⁄HódîTabÀ
::
	$dumpSåögTabÀ
()

248 autÿ
ödex
{0};

249 
°d
::
cout
 << std::
ídl
;

250 
°d
::
cout
 << "Såög TabÀ : " << std::
ídl
;

251 
°d
::
cout
 << std::
	`£tw
(8Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << "[No.]"

252 << 
°d
::
	`£tw
(8Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << "NameId"

253 << 
°d
::
	`£tw
(10Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << "Name"

254 << 
°d
::
ídl
;

255 auto& 
°rögName
 : 
m_°rögTabÀ
)

257 
°d
::
cout
 << std::
	`£tw
(8Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << std::
dec
 << 
ödex
++

258 << 
°d
::
	`£tw
(8Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << std::
hex
 << 
°rögName
.
fú°


259 << 
°d
::
	`£tw
(10Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << 
°rögName
.
£c⁄d


260 << 
°d
::
ídl
;

262 
	}
}

266 
Se˘i⁄Hódî
 
	gSe˘i⁄HódîTabÀ
::
	$gëSymbﬁTabÀ
()

268 
°d
::
°rög
 
°rögTabÀSå
{".symtab"};

269 
Se˘i⁄Hódî
 
£˘i⁄HódîResu…
;

271 auto& 
£˘i⁄Hódî
 : 
m_£˘i⁄HódîTabÀ
)

273 autÿ
«meId
 = 
£˘i⁄Hódî
.
	`gë_sh_«me
();

274 autÿ
«me
 = 
	`°r_sh_«me_ö_£˘i⁄_°rög_èbÀ
(
«meId
);

275 i‡(
«me
 =
°rögTabÀSå
)

277 
£˘i⁄HódîResu…
 = 
£˘i⁄Hódî
;

281  
£˘i⁄HódîResu…
;

282 
	}
}

283 
	gSe˘i⁄HódîTabÀ
::
	$lﬂdSymbﬁTabÀ
(
°d
::
°rög
 
fûe
)

285 
Se˘i⁄Hódî
 
symbﬁTabÀSe˘i⁄Hódî
 = 
	`gëSymbﬁTabÀ
();

287 
°d
::
if°ªam
 
	`‰ód
(
fûe
,°d::
ios
::
ö
|°d::ios::
bö¨y
);

289 
‰ód
.
	`£ekg
(
°d
::
	`°ªamoff
(
symbﬁTabÀSe˘i⁄Hódî
.
	`gë_sh_off£t
()), std::
ios
::
beg
);

291 
d©a
{0};

293 
uöt32_t
 
ödex
 = 0;

294 
ödex
 < 
symbﬁTabÀSe˘i⁄Hódî
.
	`gë_sh_size
())

296 
Symbﬁ
 
symbﬁ
;

298 
‰ód
.
	`ªad
((*)&
symbﬁ
 , (symbol));

300 
ödex
 +(
symbﬁ
);

302 
m_symbﬁs
.
	`em∂a˚_back
(
symbﬁ
);

305 
‰ód
.
	`˛o£
();

306 
	}
}

307 
	gSe˘i⁄HódîTabÀ
::
	$dumpSymbﬁTabÀ
()

309 autÿ
ödex
{0};

310 
°d
::
cout
 << std::
ídl
;

311 
°d
::
cout
 << "Symbﬁ TabÀ : " << std::
ídl
;

312 
°d
::
cout
 << std::
	`£tw
(15Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << "[No.]"

313 << 
°d
::
	`£tw
(15Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << "value"

314 << 
°d
::
	`£tw
(15Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << "size"

315 << 
°d
::
	`£tw
(15Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << "info"

316 << 
°d
::
	`£tw
(15Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << "other"

317 << 
°d
::
	`£tw
(15Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << "shndx"

319 << 
°d
::
ídl
;

320 auto& 
symbﬁ
 : 
m_symbﬁs
)

322 
°d
::
cout
 << std::
	`£tw
(15Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << std::
dec
 << 
ödex
++

323 << 
°d
::
	`£tw
(15Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << std::
hex
 << 
symbﬁ
.
°_vÆue


324 << 
°d
::
	`£tw
(15Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << std::
dec
 << 
symbﬁ
.
°_size


325 << 
°d
::
	`£tw
(15Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << std::
hex
 << 
symbﬁ
.
°_öfo


326 << 
°d
::
	`£tw
(15Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << std::
hex
 << 
symbﬁ
.
°_Ÿhî


327 << 
°d
::
	`£tw
(15Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << std::
hex
 << 
symbﬁ
.
°_shndx


328 << 
°d
::
	`£tw
(15Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << std::
hex
 << 
	`°r_sh_«me_ö_°rög_èbÀ
(
symbﬁ
.
°_«me
)

329 << 
°d
::
ídl
;

331 
	}
}

334 
Se˘i⁄Hódî
 
	gSe˘i⁄HódîTabÀ
::
	$gëDy«mciSåögTabÀ
()

336 
°d
::
°rög
 
°rögTabÀSå
{".dynstr"};

337 
Se˘i⁄Hódî
 
£˘i⁄HódîResu…
;

339 auto& 
£˘i⁄Hódî
 : 
m_£˘i⁄HódîTabÀ
)

341 autÿ
«meId
 = 
£˘i⁄Hódî
.
	`gë_sh_«me
();

342 autÿ
«me
 = 
	`°r_sh_«me_ö_£˘i⁄_°rög_èbÀ
(
«meId
);

343 i‡(
«me
 =
°rögTabÀSå
)

345 
£˘i⁄HódîResu…
 = 
£˘i⁄Hódî
;

349  
£˘i⁄HódîResu…
;

350 
	}
}

351 
	gSe˘i⁄HódîTabÀ
::
	$lﬂdDy«micSåögTabÀ
(
°d
::
°rög
 
fûe
)

353 
Se˘i⁄Hódî
 
dy«micSåögTabÀ
 = 
	`gëDy«mciSåögTabÀ
();

355 
°d
::
if°ªam
 
	`‰ód
(
fûe
,°d::
ios
::
ö
|°d::ios::
bö¨y
);

357 
‰ód
.
	`£ekg
(
°d
::
	`°ªamoff
(
dy«micSåögTabÀ
.
	`gë_sh_off£t
()), std::
ios
::
beg
);

359 
d©a
{0};

361 
uöt32_t
 
ödex
 = 0; index < 
dy«micSåögTabÀ
.
	`gë_sh_size
(); index++)

363 
°d
::
°rög
 
tmp°r
;

364 autÿ
«meId
{
ödex
};

366 
‰ód
.
	`ªad
((*)&
d©a
, (data));

368 
d©a
 != '\0')

370 
ödex
++;

371 
tmp°r
 +
d©a
;

372 
‰ód
.
	`ªad
((*)&
d©a
, (data));

374 
m_dy«micSåögTabÀ
[
«meId
] = 
tmp°r
;

377 
‰ód
.
	`˛o£
();

378 
	}
}

379 
	gSe˘i⁄HódîTabÀ
::
	$dumpDy«micSåögTabÀ
()

381 autÿ
ödex
{0};

382 
°d
::
cout
 << std::
ídl
;

383 
°d
::
cout
 << "Dy«mi¯Såög TabÀ : " << std::
ídl
;

384 
°d
::
cout
 << std::
	`£tw
(8Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << "[No.]"

385 << 
°d
::
	`£tw
(8Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << "NameId"

386 << 
°d
::
	`£tw
(10Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << "Name"

387 << 
°d
::
ídl
;

388 auto& 
°rögName
 : 
m_dy«micSåögTabÀ
)

390 
°d
::
cout
 << std::
	`£tw
(8Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << std::
dec
 << 
ödex
++

391 << 
°d
::
	`£tw
(8Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << std::
hex
 << 
°rögName
.
fú°


392 << 
°d
::
	`£tw
(10Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << 
°rögName
.
£c⁄d


393 << 
°d
::
ídl
;

395 
	}
}

397 
	g°d
::
°rög
 
Se˘i⁄HódîTabÀ
::
	$°r_sh_«me_ö_dy«mic_°rög_èbÀ
(
Elf64_W‹d
 
«meId
)

399 i‡(1 !
m_dy«micSåögTabÀ
.
	`cou¡
(
«meId
))

401 
°d
::
	`ru¡ime_îr‹
("there isÇotÇame string ");

403  
m_dy«micSåögTabÀ
[
«meId
];

404 
	}
}

405 
Se˘i⁄Hódî
 
	gSe˘i⁄HódîTabÀ
::
	$gëDy«micSymbﬁTabÀ
()

407 
°d
::
°rög
 
°rögTabÀSå
{".dynsym"};

408 
Se˘i⁄Hódî
 
£˘i⁄HódîResu…
;

410 auto& 
£˘i⁄Hódî
 : 
m_£˘i⁄HódîTabÀ
)

412 autÿ
«meId
 = 
£˘i⁄Hódî
.
	`gë_sh_«me
();

413 autÿ
«me
 = 
	`°r_sh_«me_ö_£˘i⁄_°rög_èbÀ
(
«meId
);

414 i‡(
«me
 =
°rögTabÀSå
)

416 
£˘i⁄HódîResu…
 = 
£˘i⁄Hódî
;

420  
£˘i⁄HódîResu…
;

421 
	}
}

422 
	gSe˘i⁄HódîTabÀ
::
	$lﬂdDy«micSymbﬁTabÀ
(
°d
::
°rög
 
fûe
)

424 
Se˘i⁄Hódî
 
dy«micSymbﬁTabÀ
 = 
	`gëDy«micSymbﬁTabÀ
();

426 
°d
::
if°ªam
 
	`‰ód
(
fûe
,°d::
ios
::
ö
|°d::ios::
bö¨y
);

428 
‰ód
.
	`£ekg
(
°d
::
	`°ªamoff
(
dy«micSymbﬁTabÀ
.
	`gë_sh_off£t
()), std::
ios
::
beg
);

430 
d©a
{0};

432 
uöt32_t
 
ödex
 = 0;

433 
ödex
 < 
dy«micSymbﬁTabÀ
.
	`gë_sh_size
())

435 
Symbﬁ
 
symbﬁ
;

437 
‰ód
.
	`ªad
((*)&
symbﬁ
 , (symbol));

439 
ödex
 +(
symbﬁ
);

441 
m_dy«micSymbﬁs
.
	`em∂a˚_back
(
symbﬁ
);

444 
‰ód
.
	`˛o£
();

445 
	}
}

446 
	gSe˘i⁄HódîTabÀ
::
	$dumpDy«micSymbﬁTabÀ
()

448 autÿ
ödex
{0};

449 
°d
::
cout
 << std::
ídl
;

450 
°d
::
cout
 << std::
ídl
;

451 
°d
::
cout
 << "Dy«mcòSymbﬁ TabÀ : " << std::
ídl
;

452 
°d
::
cout
 << std::
	`£tw
(15Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << "[No.]"

453 << 
°d
::
	`£tw
(15Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << "value"

454 << 
°d
::
	`£tw
(15Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << "size"

455 << 
°d
::
	`£tw
(15Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << "info"

456 << 
°d
::
	`£tw
(15Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << "other"

457 << 
°d
::
	`£tw
(15Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << "shndx"

459 << 
°d
::
ídl
;

460 auto& 
symbﬁ
 : 
m_dy«micSymbﬁs
)

462 
°d
::
cout
 << std::
	`£tw
(15Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << std::
dec
 << 
ödex
++

463 << 
°d
::
	`£tw
(15Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << std::
hex
 << 
symbﬁ
.
°_vÆue


464 << 
°d
::
	`£tw
(15Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << std::
dec
 << 
symbﬁ
.
°_size


465 << 
°d
::
	`£tw
(15Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << std::
hex
 << 
symbﬁ
.
°_öfo


466 << 
°d
::
	`£tw
(15Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << std::
hex
 << 
symbﬁ
.
°_Ÿhî


467 << 
°d
::
	`£tw
(15Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << std::
hex
 << 
symbﬁ
.
°_shndx


468 << 
°d
::
	`£tw
(15Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·
 << std::
hex
 << 
	`°r_sh_«me_ö_dy«mic_°rög_èbÀ
(
symbﬁ
.
°_«me
)

469 << 
°d
::
ídl
;

471 
	}
}

	@/home/xinhualu/repo/0_xhlu/0_pppppppp/0_project/0_elf_parser/section_header_table.hpp

1 #i‚de‡
__SECTION_HEADER_TABLE_H__


2 
	#__SECTION_HEADER_TABLE_H__


	)

4 
	~<ve˘‹
>

5 
	~"comm⁄.hµ
"

6 
	~"symbﬁ.hµ
"

8 ˛as†
	cSe˘i⁄Hódî
{

9 
	mpublic
:

10 
Se˘i⁄Hódî
() = ;

11 ~
Se˘i⁄Hódî
() = ;

13 
lﬂd
(
°d
::
°rög
 
fûe
, 
Elf64_Off
 
off£t
, 
Elf64_Xw‹d
 
size
);

14 
dump
(
uöt32_t
 
ödex
, 
°d
::
°rög
 
«me
);

16 
Elf64_W‹d
 
gë_sh_«me
();

17 
Elf64_W‹d
 
gë_sh_ty≥
();

18 
Elf64_Xw‹d
 
gë_sh_Êags
();

19 
Elf64_Addr
 
gë_sh_addr
();

20 
Elf64_Off
 
gë_sh_off£t
();

21 
Elf64_Xw‹d
 
gë_sh_size
();

22 
Elf64_W‹d
 
gë_sh_lök
();

23 
Elf64_W‹d
 
gë_sh_öfo
();

24 
Elf64_Xw‹d
 
gë_sh_addølign
();

25 
Elf64_Xw‹d
 
gë_sh_ítsize
();

27 
£t_sh_«me
(
Elf64_W‹d
);

28 
£t_sh_ty≥
(
Elf64_W‹d
);

29 
£t_sh_Êags
(
Elf64_Xw‹d
);

30 
£t_sh_addr
(
Elf64_Addr
);

31 
£t_sh_off£t
(
Elf64_Off
 );

32 
£t_sh_size
(
Elf64_Xw‹d
);

33 
£t_sh_lök
(
Elf64_W‹d
);

34 
£t_sh_öfo
(
Elf64_W‹d
);

35 
£t_sh_addølign
(
Elf64_Xw‹d
);

36 
£t_sh_ítsize
(
Elf64_Xw‹d
);

38 
	m¥iv©e
:

39 
Elf64_W‹d
 
sh_«me
;

40 
Elf64_W‹d
 
	msh_ty≥
;

41 
Elf64_Xw‹d
 
	msh_Êags
;

42 
Elf64_Addr
 
	msh_addr
;

43 
Elf64_Off
 
	msh_off£t
;

44 
Elf64_Xw‹d
 
	msh_size
;

45 
Elf64_W‹d
 
	msh_lök
;

46 
Elf64_W‹d
 
	msh_öfo
;

47 
Elf64_Xw‹d
 
	msh_addølign
;

48 
Elf64_Xw‹d
 
	msh_ítsize
;

51 ˛as†
	cSe˘i⁄HódîTabÀ
{

52 
	mpublic
:

53 
Se˘i⁄HódîTabÀ
() = ;

54 ~
Se˘i⁄HódîTabÀ
() = ;

56 
lﬂd
(
°d
::
°rög
 
fûe
, 
Elf64_Off
 
Se˘i⁄HódîTabÀOff£t
, 
Elf64_HÆf
 
Se˘i⁄HódîTabÀIãmSize
, Elf64_HÆ‡
Se˘i⁄HódîTabÀIãmNum
);

57 
dump
();

58 
	m°d
::
ve˘‹
<
Se˘i⁄Hódî
> 
gë
();

60 
	m°d
::
°rög
 
°r_sh_«me_ö_£˘i⁄_°rög_èbÀ
(
Elf64_W‹d
 
«meId
);

61 
Se˘i⁄Hódî
 
gëSe˘i⁄HódîByIndex
(
uöt32_t
 
ödex
);

62 
lﬂdSe˘i⁄SåögTabÀ
(
°d
::
°rög
 
fûe
, 
Elf64_HÆf
 
£˘i⁄SåögTabÀIndex
);

63 
dumpSe˘i⁄SåögTabÀ
();

65 
	m°d
::
°rög
 
°r_sh_«me_ö_°rög_èbÀ
(
Elf64_W‹d
 
«meId
);

66 
Se˘i⁄Hódî
 
gëSåögTabÀ
();

67 
lﬂdSåögTabÀ
(
°d
::
°rög
 
fûes
);

68 
dumpSåögTabÀ
();

69 
Se˘i⁄Hódî
 
gëSymbﬁTabÀ
();

70 
lﬂdSymbﬁTabÀ
(
°d
::
°rög
 
fûes
);

71 
dumpSymbﬁTabÀ
();

73 
	m°d
::
°rög
 
°r_sh_«me_ö_dy«mic_°rög_èbÀ
(
Elf64_W‹d
 
«meId
);

74 
Se˘i⁄Hódî
 
gëDy«mciSåögTabÀ
();

75 
lﬂdDy«micSåögTabÀ
(
°d
::
°rög
 
fûes
);

76 
dumpDy«micSåögTabÀ
();

77 
Se˘i⁄Hódî
 
gëDy«micSymbﬁTabÀ
();

78 
lﬂdDy«micSymbﬁTabÀ
(
°d
::
°rög
 
fûes
);

79 
dumpDy«micSymbﬁTabÀ
();

81 
	m¥iv©e
:

82 
°d
::
ve˘‹
<
Se˘i⁄Hódî
> 
m_£˘i⁄HódîTabÀ
;

84 
	m°d
::
m≠
<
uöt32_t
, std::
°rög
> 
m_£˘i⁄SåögTabÀ
;

86 
	m°d
::
m≠
<
uöt32_t
, std::
°rög
> 
m_°rögTabÀ
;

87 
	m°d
::
ve˘‹
<
Symbﬁ
> 
m_symbﬁs
;

89 
	m°d
::
m≠
<
uöt32_t
, std::
°rög
> 
m_dy«micSåögTabÀ
;

90 
	m°d
::
ve˘‹
<
Symbﬁ
> 
m_dy«micSymbﬁs
;

	@/home/xinhualu/repo/0_xhlu/0_pppppppp/0_project/0_elf_parser/segment.cpp

1 
	~"£gmít.hµ
"

	@/home/xinhualu/repo/0_xhlu/0_pppppppp/0_project/0_elf_parser/segment.hpp

1 #i‚de‡
__SEGMENT_H__


2 
	#__SEGMENT_H__


	)

4 
	~"comm⁄.hµ
"

6 ˛as†
	cSegmít
{

7 
	mpublic
:

8 
Segmít
() = ;

9 ~
Segmít
() = ;

11 
	m¥iv©e
:

15 ˛as†
	cSegmíts
{

16 
	mpublic
:

17 
Segmíts
() = ;

18 ~
Segmíts
() = ;

20 
	m¥iv©e
:

21 
°d
::
ve˘‹
<
Segmít
> 
m_£gmíts
;

	@/home/xinhualu/repo/0_xhlu/0_pppppppp/0_project/0_elf_parser/stack.hpp

1 #i‚de‡
__STACK_H__


2 
	#__STACK_H__


	)

4 
	~<io°ªam
>

6 ˛as†
	cSèck
{

7 
	mpublic
:

8 
	$Sèck
(
uöt32_t
 
ba£
, uöt32_à
size
): 
	`m_ba£
(ba£), 
	$m_size
(
size
) {}

9 ~
	`Sèck
() = ;

11 
uöt32_t
 
m_ba£
;

12 
uöt32_t
 
m_size
;

13 
	}
};

	@/home/xinhualu/repo/0_xhlu/0_pppppppp/0_project/0_elf_parser/symbol.cpp

1 
	~"symbﬁ.hµ
"

	@/home/xinhualu/repo/0_xhlu/0_pppppppp/0_project/0_elf_parser/symbol.hpp

1 #i‚de‡
__SYMBOL_H__


2 
	#__SYMBOL_H__


	)

4 
	~"comm⁄.hµ
"

7 
	sSymbﬁ


9 
Elf64_W‹d
 
	m°_«me
;

10 
	m°_öfo
;

11 
	m°_Ÿhî
;

12 
Elf64_HÆf
 
	m°_shndx
;

13 
Elf64_Addr
 
	m°_vÆue
;

14 
Elf64_Xw‹d
 
	m°_size
;

	@address.hpp

1 #i‚de‡
__ADDRESS_H__


2 
	#__ADDRESS_H__


	)

4 
	~<c°döt
>

6 ˛as†
	cAddªss


8 
	mpublic
:

9 
Addªss
(
uöt32_t
 
addr
);

10 
Addªss
(
uöt32_t
 
dú
, uöt32_à
∑ge
, uöt32_à
off£t
);

12 
uöt32_t
 
vÆue
();

14 
uöt32_t
 
	mm_Dú
;

15 
uöt32_t
 
	mm_∑ge
;

16 
uöt32_t
 
	mm_off£t
;

17 
uöt32_t
 
	mm_addr
;

	@common.hpp

1 #i‚de‡
__COMMON_H__


2 
	#__COMMON_H__


	)

4 
usög
 
«me•a˚
 
	g°d
;

6 
	~<°rög_võw
>

7 
	~<ve˘‹
>

8 
	~<io°ªam
>

9 
	~<f°ªam
>

10 
	~<o°ªam
>

11 
	~<°dex˚±
>

12 
	~<ios
>

13 
	~<c°döt
>

14 
	~<°rög
>

15 
	~<¨øy
>

16 
	~<iom™ù
>

17 
	~<m≠
>

19 
	~"ñf.h
"

20 
	~"°ack.hµ
"

23 
	#INST_LEN
 4

	)

	@cpu.hpp

1 #i‚de‡
__CPU_H__


2 
	#__CPU_H__


	)

4 
	~"comm⁄.hµ
"

5 
	~"mem‹y.hµ
"

6 
	~"ö°ru˘i⁄.hµ
"

8 ˛as†
	cC‹e
{

9 
	mpublic
:

10 
	$C‹e
(
Mem‹y
 * 
mem‹y
, 
Sèck
 
°ack
, 
uöt32_t
 
ñf_íåy
): 
m_mem
{mem‹y}, 
m_°ack
{
	}
°ack}, 
	gm_pc
{
	gñf_íåy
}{

11 
	gm_ö°
.
	gDoubÀW‹d
 = 0;

12 
	gm_c‹e_ªgi°îs
[
•
].
	gfú°
 = 
m_°ack
.
m_ba£
;

14 ~
C‹e
() = ;

22 
„tch
();

23 
decode
();

24 
execuã
();

25 
movePùe
();

27 
¥öt_c‹e_ªgi°îs
();

29 
	g¥iv©e
:

30 
execuã_lb
() ;

31 
execuã_lh
() ;

32 
execuã_lw
() ;

33 
execuã_lbu
();

34 
execuã_lhu
();

35 
execuã_lwu
();

36 
execuã_ld
() ;

37 
execuã_beq
() ;

38 
execuã_b√
() ;

39 
execuã_b…
() ;

40 
execuã_bge
() ;

41 
execuã_b…u
();

42 
execuã_bgeu
();

43 
execuã_auùc
();

44 
execuã_addi
();

45 
execuã_¶ti
();

46 
execuã_¶tu
();

47 
execuã_x‹i
();

48 
execuã_‹i
();

49 
execuã_™di
();

50 
execuã_¶li
();

51 
execuã_§ai
();

52 
execuã_sub
();

53 
execuã_jÆ
();

55 
execuã_bønch_ö°
();

56 
execuã_lﬂd_ö°
();

57 
execuã_°‹e_ö°
();

58 
execuã_imm_ö°
();

59 
execuã_ªg_ö°
();

60 
execuã_„n˚_ö°
();

61 
execuã_sy°em_ö°
();

62 
execuã_imm32_ö°
();

63 
execuã_›32_ö°
();

64 
execuã_auùc_ö°
();

65 
execuã_jÆ_ö°
();

66 
execuã_jÆr_ö°
();

67 
execuã_lut_ö°
();

69 
decode_sb
();

70 
decode_sh
();

71 
decode_sw
();

72 
decode_sd
();

73 
decode_lb
() ;

74 
decode_lh
() ;

75 
decode_lw
() ;

76 
decode_lbu
();

77 
decode_lhu
();

78 
decode_lwu
();

79 
decode_ld
() ;

80 
decode_beq
() ;

81 
decode_b√
() ;

82 
decode_b…
() ;

83 
decode_bge
() ;

84 
decode_b…u
();

85 
decode_bgeu
();

86 
decode_auùc
();

87 
decode_addi
();

88 
decode_¶ti
();

89 
decode_¶tu
();

90 
decode_x‹i
();

91 
decode_‹i
();

92 
decode_™di
();

93 
decode_¶li
();

94 
decode_§li
();

95 
decode_§ai
();

96 
decode_sub
();

97 
decode_jÆ
();

99 
decode_bønch_ö°
();

100 
decode_lﬂd_ö°
();

101 
decode_°‹e_ö°
();

102 
decode_imm_ö°
();

103 
decode_ªg_ö°
();

104 
decode_„n˚_ö°
();

105 
decode_sy°em_ö°
();

106 
decode_imm32_ö°
();

107 
decode_›32_ö°
();

108 
decode_auùc_ö°
();

109 
decode_jÆ_ö°
();

110 
decode_jÆr_ö°
();

111 
decode_lut_ö°
();

113 
	gpublic
:

114 
Mem‹y
 * 
m_mem
;

115 
Sèck
 
	gm_°ack
;

117 
	sSège
{

118 
uöt32_t
 
	gm_pc
;

119 
In°ru˘i⁄
 
	gm_ö°
;

120 
boﬁ
 
	gm_bubbÀ
;

121 
boﬁ
 
	gm_°Æl
;

124 
Sège
 
	gFëchReg
{0};

125 
Sège
 
	gFëchRegNew
{0};

126 
Sège
 
	gDecodeReg
{0};

127 
Sège
 
	gDecodeRegNew
{0};

128 
Sège
 
	gExecuãReg
{0};

129 
Sège
 
	gExecuãRegNew
{0};

131 
uöt32_t
 
	gm_pc
;

132 
In°ru˘i⁄
 
	gm_ö°
;

135 
	gzîo
 = 0,

136 
	gø
 ,

137 
	g•
 ,

138 
	ggp
 ,

139 
	gç
 ,

140 
	gt0
 ,

141 
	gt1
 ,

142 
	gt2
 ,

143 
	gs0
 ,

144 
	gs1
 ,

145 
	ga0
 ,

146 
	ga1
 ,

147 
	ga2
 ,

148 
	ga3
 ,

149 
	ga4
 ,

150 
	ga5
 ,

151 
	ga6
 ,

152 
	ga7
 ,

153 
	gs2
 ,

154 
	gs3
 ,

155 
	gs4
 ,

156 
	gs5
 ,

157 
	gs6
 ,

158 
	gs7
 ,

159 
	gs8
 ,

160 
	gs9
 ,

161 
	gs10
 ,

162 
	gs11
 ,

163 
	gt3
 ,

164 
	gt4
 ,

165 
	gt5
 ,

166 
	gt6
 ,

169 
	g°d
::
¨øy
<
°d
::
∑ú
<
uöt64_t
, std::
°rög
>, 32> 
	gm_c‹e_ªgi°îs
{

171 
	g°d
::
make_∑ú
( 0, "zero" ),

172 
	g°d
::
make_∑ú
( 0, "ra" ),

173 
	g°d
::
make_∑ú
( 0, "sp" ),

174 
	g°d
::
make_∑ú
( 0, "gp" ),

175 
	g°d
::
make_∑ú
( 0, "tp" ),

176 
	g°d
::
make_∑ú
( 0, "t0" ),

177 
	g°d
::
make_∑ú
( 0, "t1" ),

178 
	g°d
::
make_∑ú
( 0, "t2" ),

179 
	g°d
::
make_∑ú
( 0, "s0" ),

180 
	g°d
::
make_∑ú
( 0, "s1" ),

181 
	g°d
::
make_∑ú
( 0, "a0" ),

182 
	g°d
::
make_∑ú
( 0, "a1" ),

183 
	g°d
::
make_∑ú
( 0, "a2" ),

184 
	g°d
::
make_∑ú
( 0, "a3" ),

185 
	g°d
::
make_∑ú
( 0, "a4" ),

186 
	g°d
::
make_∑ú
( 0, "a5" ),

187 
	g°d
::
make_∑ú
( 0, "a6" ),

188 
	g°d
::
make_∑ú
( 0, "a7" ),

189 
	g°d
::
make_∑ú
( 0, "s2" ),

190 
	g°d
::
make_∑ú
( 0, "s3" ),

191 
	g°d
::
make_∑ú
( 0, "s4" ),

192 
	g°d
::
make_∑ú
( 0, "s5" ),

193 
	g°d
::
make_∑ú
( 0, "s6" ),

194 
	g°d
::
make_∑ú
( 0, "s7" ),

195 
	g°d
::
make_∑ú
( 0, "s8" ),

196 
	g°d
::
make_∑ú
( 0, "s9" ),

197 
	g°d
::
make_∑ú
( 0, "s10" ),

198 
	g°d
::
make_∑ú
( 0, "s11" ),

199 
	g°d
::
make_∑ú
( 0, "t3" ),

200 
	g°d
::
make_∑ú
( 0, "t4" ),

201 
	g°d
::
make_∑ú
( 0, "t5" ),

202 
	g°d
::
make_∑ú
( 0, "t6" ),

	@elf.h

19 #i‚de‡
_ELF_H


20 
	#_ELF_H
 1

	)

24 
	~<°döt.h
>

27 
uöt16_t
 
	tElf32_HÆf
;

28 
uöt16_t
 
	tElf64_HÆf
;

31 
uöt32_t
 
	tElf32_W‹d
;

32 
öt32_t
 
	tElf32_Sw‹d
;

33 
uöt32_t
 
	tElf64_W‹d
;

34 
öt32_t
 
	tElf64_Sw‹d
;

37 
uöt64_t
 
	tElf32_Xw‹d
;

38 
öt64_t
 
	tElf32_Sxw‹d
;

39 
uöt64_t
 
	tElf64_Xw‹d
;

40 
öt64_t
 
	tElf64_Sxw‹d
;

43 
uöt32_t
 
	tElf32_Addr
;

44 
uöt64_t
 
	tElf64_Addr
;

47 
uöt32_t
 
	tElf32_Off
;

48 
uöt64_t
 
	tElf64_Off
;

51 
uöt16_t
 
	tElf32_Se˘i⁄
;

52 
uöt16_t
 
	tElf64_Se˘i⁄
;

55 
Elf32_HÆf
 
	tElf32_Vîsym
;

56 
Elf64_HÆf
 
	tElf64_Vîsym
;

61 
	#EI_NIDENT
 (16)

	)

65 
	me_idít
[
EI_NIDENT
];

66 
Elf32_HÆf
 
	me_ty≥
;

67 
Elf32_HÆf
 
	me_machöe
;

68 
Elf32_W‹d
 
	me_vîsi⁄
;

69 
Elf32_Addr
 
	me_íåy
;

70 
Elf32_Off
 
	me_phoff
;

71 
Elf32_Off
 
	me_shoff
;

72 
Elf32_W‹d
 
	me_Êags
;

73 
Elf32_HÆf
 
	me_ehsize
;

74 
Elf32_HÆf
 
	me_phítsize
;

75 
Elf32_HÆf
 
	me_phnum
;

76 
Elf32_HÆf
 
	me_shítsize
;

77 
Elf32_HÆf
 
	me_shnum
;

78 
Elf32_HÆf
 
	me_sh°∫dx
;

79 } 
	tElf32_Ehdr
;

83 
	me_idít
[
EI_NIDENT
];

84 
Elf64_HÆf
 
	me_ty≥
;

85 
Elf64_HÆf
 
	me_machöe
;

86 
Elf64_W‹d
 
	me_vîsi⁄
;

87 
Elf64_Addr
 
	me_íåy
;

88 
Elf64_Off
 
	me_phoff
;

89 
Elf64_Off
 
	me_shoff
;

90 
Elf64_W‹d
 
	me_Êags
;

91 
Elf64_HÆf
 
	me_ehsize
;

92 
Elf64_HÆf
 
	me_phítsize
;

93 
Elf64_HÆf
 
	me_phnum
;

94 
Elf64_HÆf
 
	me_shítsize
;

95 
Elf64_HÆf
 
	me_shnum
;

96 
Elf64_HÆf
 
	me_sh°∫dx
;

97 } 
	tElf64_Ehdr
;

103 
	#EI_MAG0
 0

	)

104 
	#ELFMAG0
 0x7‡

	)

106 
	#EI_MAG1
 1

	)

107 
	#ELFMAG1
 'E'

	)

109 
	#EI_MAG2
 2

	)

110 
	#ELFMAG2
 'L'

	)

112 
	#EI_MAG3
 3

	)

113 
	#ELFMAG3
 'F'

	)

116 
	#ELFMAG
 "\177ELF"

	)

117 
	#SELFMAG
 4

	)

119 
	#EI_CLASS
 4

	)

120 
	#ELFCLASSNONE
 0

	)

121 
	#ELFCLASS32
 1

	)

122 
	#ELFCLASS64
 2

	)

123 
	#ELFCLASSNUM
 3

	)

125 
	#EI_DATA
 5

	)

126 
	#ELFDATANONE
 0

	)

127 
	#ELFDATA2LSB
 1

	)

128 
	#ELFDATA2MSB
 2

	)

129 
	#ELFDATANUM
 3

	)

131 
	#EI_VERSION
 6

	)

134 
	#EI_OSABI
 7

	)

135 
	#ELFOSABI_NONE
 0

	)

136 
	#ELFOSABI_SYSV
 0

	)

137 
	#ELFOSABI_HPUX
 1

	)

138 
	#ELFOSABI_NETBSD
 2

	)

139 
	#ELFOSABI_GNU
 3

	)

140 
	#ELFOSABI_LINUX
 
ELFOSABI_GNU


	)

141 
	#ELFOSABI_SOLARIS
 6

	)

142 
	#ELFOSABI_AIX
 7

	)

143 
	#ELFOSABI_IRIX
 8

	)

144 
	#ELFOSABI_FREEBSD
 9

	)

145 
	#ELFOSABI_TRU64
 10

	)

146 
	#ELFOSABI_MODESTO
 11

	)

147 
	#ELFOSABI_OPENBSD
 12

	)

148 
	#ELFOSABI_ARM_AEABI
 64

	)

149 
	#ELFOSABI_ARM
 97

	)

150 
	#ELFOSABI_STANDALONE
 255

	)

152 
	#EI_ABIVERSION
 8

	)

154 
	#EI_PAD
 9

	)

158 
	#ET_NONE
 0

	)

159 
	#ET_REL
 1

	)

160 
	#ET_EXEC
 2

	)

161 
	#ET_DYN
 3

	)

162 
	#ET_CORE
 4

	)

163 
	#ET_NUM
 5

	)

164 
	#ET_LOOS
 0x„00

	)

165 
	#ET_HIOS
 0x„f‡

	)

166 
	#ET_LOPROC
 0xff00

	)

167 
	#ET_HIPROC
 0xfff‡

	)

171 
	#EM_NONE
 0

	)

172 
	#EM_M32
 1

	)

173 
	#EM_SPARC
 2

	)

174 
	#EM_386
 3

	)

175 
	#EM_68K
 4

	)

176 
	#EM_88K
 5

	)

177 
	#EM_IAMCU
 6

	)

178 
	#EM_860
 7

	)

179 
	#EM_MIPS
 8

	)

180 
	#EM_S370
 9

	)

181 
	#EM_MIPS_RS3_LE
 10

	)

183 
	#EM_PARISC
 15

	)

185 
	#EM_VPP500
 17

	)

186 
	#EM_SPARC32PLUS
 18

	)

187 
	#EM_960
 19

	)

188 
	#EM_PPC
 20

	)

189 
	#EM_PPC64
 21

	)

190 
	#EM_S390
 22

	)

191 
	#EM_SPU
 23

	)

193 
	#EM_V800
 36

	)

194 
	#EM_FR20
 37

	)

195 
	#EM_RH32
 38

	)

196 
	#EM_RCE
 39

	)

197 
	#EM_ARM
 40

	)

198 
	#EM_FAKE_ALPHA
 41

	)

199 
	#EM_SH
 42

	)

200 
	#EM_SPARCV9
 43

	)

201 
	#EM_TRICORE
 44

	)

202 
	#EM_ARC
 45

	)

203 
	#EM_H8_300
 46

	)

204 
	#EM_H8_300H
 47

	)

205 
	#EM_H8S
 48

	)

206 
	#EM_H8_500
 49

	)

207 
	#EM_IA_64
 50

	)

208 
	#EM_MIPS_X
 51

	)

209 
	#EM_COLDFIRE
 52

	)

210 
	#EM_68HC12
 53

	)

211 
	#EM_MMA
 54

	)

212 
	#EM_PCP
 55

	)

213 
	#EM_NCPU
 56

	)

214 
	#EM_NDR1
 57

	)

215 
	#EM_STARCORE
 58

	)

216 
	#EM_ME16
 59

	)

217 
	#EM_ST100
 60

	)

218 
	#EM_TINYJ
 61

	)

219 
	#EM_X86_64
 62

	)

220 
	#EM_PDSP
 63

	)

221 
	#EM_PDP10
 64

	)

222 
	#EM_PDP11
 65

	)

223 
	#EM_FX66
 66

	)

224 
	#EM_ST9PLUS
 67

	)

225 
	#EM_ST7
 68

	)

226 
	#EM_68HC16
 69

	)

227 
	#EM_68HC11
 70

	)

228 
	#EM_68HC08
 71

	)

229 
	#EM_68HC05
 72

	)

230 
	#EM_SVX
 73

	)

231 
	#EM_ST19
 74

	)

232 
	#EM_VAX
 75

	)

233 
	#EM_CRIS
 76

	)

234 
	#EM_JAVELIN
 77

	)

235 
	#EM_FIREPATH
 78

	)

236 
	#EM_ZSP
 79

	)

237 
	#EM_MMIX
 80

	)

238 
	#EM_HUANY
 81

	)

239 
	#EM_PRISM
 82

	)

240 
	#EM_AVR
 83

	)

241 
	#EM_FR30
 84

	)

242 
	#EM_D10V
 85

	)

243 
	#EM_D30V
 86

	)

244 
	#EM_V850
 87

	)

245 
	#EM_M32R
 88

	)

246 
	#EM_MN10300
 89

	)

247 
	#EM_MN10200
 90

	)

248 
	#EM_PJ
 91

	)

249 
	#EM_OPENRISC
 92

	)

250 
	#EM_ARC_COMPACT
 93

	)

251 
	#EM_XTENSA
 94

	)

252 
	#EM_VIDEOCORE
 95

	)

253 
	#EM_TMM_GPP
 96

	)

254 
	#EM_NS32K
 97

	)

255 
	#EM_TPC
 98

	)

256 
	#EM_SNP1K
 99

	)

257 
	#EM_ST200
 100

	)

258 
	#EM_IP2K
 101

	)

259 
	#EM_MAX
 102

	)

260 
	#EM_CR
 103

	)

261 
	#EM_F2MC16
 104

	)

262 
	#EM_MSP430
 105

	)

263 
	#EM_BLACKFIN
 106

	)

264 
	#EM_SE_C33
 107

	)

265 
	#EM_SEP
 108

	)

266 
	#EM_ARCA
 109

	)

267 
	#EM_UNICORE
 110

	)

268 
	#EM_EXCESS
 111

	)

269 
	#EM_DXP
 112

	)

270 
	#EM_ALTERA_NIOS2
 113

	)

271 
	#EM_CRX
 114

	)

272 
	#EM_XGATE
 115

	)

273 
	#EM_C166
 116

	)

274 
	#EM_M16C
 117

	)

275 
	#EM_DSPIC30F
 118

	)

276 
	#EM_CE
 119

	)

277 
	#EM_M32C
 120

	)

279 
	#EM_TSK3000
 131

	)

280 
	#EM_RS08
 132

	)

281 
	#EM_SHARC
 133

	)

282 
	#EM_ECOG2
 134

	)

283 
	#EM_SCORE7
 135

	)

284 
	#EM_DSP24
 136

	)

285 
	#EM_VIDEOCORE3
 137

	)

286 
	#EM_LATTICEMICO32
 138

	)

287 
	#EM_SE_C17
 139

	)

288 
	#EM_TI_C6000
 140

	)

289 
	#EM_TI_C2000
 141

	)

290 
	#EM_TI_C5500
 142

	)

291 
	#EM_TI_ARP32
 143

	)

292 
	#EM_TI_PRU
 144

	)

294 
	#EM_MMDSP_PLUS
 160

	)

295 
	#EM_CYPRESS_M8C
 161

	)

296 
	#EM_R32C
 162

	)

297 
	#EM_TRIMEDIA
 163

	)

298 
	#EM_QDSP6
 164

	)

299 
	#EM_8051
 165

	)

300 
	#EM_STXP7X
 166

	)

301 
	#EM_NDS32
 167

	)

302 
	#EM_ECOG1X
 168

	)

303 
	#EM_MAXQ30
 169

	)

304 
	#EM_XIMO16
 170

	)

305 
	#EM_MANIK
 171

	)

306 
	#EM_CRAYNV2
 172

	)

307 
	#EM_RX
 173

	)

308 
	#EM_METAG
 174

	)

309 
	#EM_MCST_ELBRUS
 175

	)

310 
	#EM_ECOG16
 176

	)

311 
	#EM_CR16
 177

	)

312 
	#EM_ETPU
 178

	)

313 
	#EM_SLE9X
 179

	)

314 
	#EM_L10M
 180

	)

315 
	#EM_K10M
 181

	)

317 
	#EM_AARCH64
 183

	)

319 
	#EM_AVR32
 185

	)

320 
	#EM_STM8
 186

	)

321 
	#EM_TILE64
 187

	)

322 
	#EM_TILEPRO
 188

	)

323 
	#EM_MICROBLAZE
 189

	)

324 
	#EM_CUDA
 190

	)

325 
	#EM_TILEGX
 191

	)

326 
	#EM_CLOUDSHIELD
 192

	)

327 
	#EM_COREA_1ST
 193

	)

328 
	#EM_COREA_2ND
 194

	)

329 
	#EM_ARCV2
 195

	)

330 
	#EM_OPEN8
 196

	)

331 
	#EM_RL78
 197

	)

332 
	#EM_VIDEOCORE5
 198

	)

333 
	#EM_78KOR
 199

	)

334 
	#EM_56800EX
 200

	)

335 
	#EM_BA1
 201

	)

336 
	#EM_BA2
 202

	)

337 
	#EM_XCORE
 203

	)

338 
	#EM_MCHP_PIC
 204

	)

339 
	#EM_INTELGT
 205

	)

341 
	#EM_KM32
 210

	)

342 
	#EM_KMX32
 211

	)

343 
	#EM_EMX16
 212

	)

344 
	#EM_EMX8
 213

	)

345 
	#EM_KVARC
 214

	)

346 
	#EM_CDP
 215

	)

347 
	#EM_COGE
 216

	)

348 
	#EM_COOL
 217

	)

349 
	#EM_NORC
 218

	)

350 
	#EM_CSR_KALIMBA
 219

	)

351 
	#EM_Z80
 220

	)

352 
	#EM_VISIUM
 221

	)

353 
	#EM_FT32
 222

	)

354 
	#EM_MOXIE
 223

	)

355 
	#EM_AMDGPU
 224

	)

357 
	#EM_RISCV
 243

	)

359 
	#EM_BPF
 247

	)

360 
	#EM_CSKY
 252

	)

361 
	#EM_LOONGARCH
 258

	)

363 
	#EM_NUM
 259

	)

367 
	#EM_ARC_A5
 
EM_ARC_COMPACT


	)

373 
	#EM_ALPHA
 0x9026

	)

377 
	#EV_NONE
 0

	)

378 
	#EV_CURRENT
 1

	)

379 
	#EV_NUM
 2

	)

385 
Elf32_W‹d
 
	msh_«me
;

386 
Elf32_W‹d
 
	msh_ty≥
;

387 
Elf32_W‹d
 
	msh_Êags
;

388 
Elf32_Addr
 
	msh_addr
;

389 
Elf32_Off
 
	msh_off£t
;

390 
Elf32_W‹d
 
	msh_size
;

391 
Elf32_W‹d
 
	msh_lök
;

392 
Elf32_W‹d
 
	msh_öfo
;

393 
Elf32_W‹d
 
	msh_addølign
;

394 
Elf32_W‹d
 
	msh_ítsize
;

395 } 
	tElf32_Shdr
;

399 
Elf64_W‹d
 
	msh_«me
;

400 
Elf64_W‹d
 
	msh_ty≥
;

401 
Elf64_Xw‹d
 
	msh_Êags
;

402 
Elf64_Addr
 
	msh_addr
;

403 
Elf64_Off
 
	msh_off£t
;

404 
Elf64_Xw‹d
 
	msh_size
;

405 
Elf64_W‹d
 
	msh_lök
;

406 
Elf64_W‹d
 
	msh_öfo
;

407 
Elf64_Xw‹d
 
	msh_addølign
;

408 
Elf64_Xw‹d
 
	msh_ítsize
;

409 } 
	tElf64_Shdr
;

413 
	#SHN_UNDEF
 0

	)

414 
	#SHN_LORESERVE
 0xff00

	)

415 
	#SHN_LOPROC
 0xff00

	)

416 
	#SHN_BEFORE
 0xff00

	)

418 
	#SHN_AFTER
 0xff01

	)

420 
	#SHN_HIPROC
 0xff1‡

	)

421 
	#SHN_LOOS
 0xff20

	)

422 
	#SHN_HIOS
 0xff3‡

	)

423 
	#SHN_ABS
 0xfff1

	)

424 
	#SHN_COMMON
 0xfff2

	)

425 
	#SHN_XINDEX
 0xfff‡

	)

426 
	#SHN_HIRESERVE
 0xfff‡

	)

430 
	#SHT_NULL
 0

	)

431 
	#SHT_PROGBITS
 1

	)

432 
	#SHT_SYMTAB
 2

	)

433 
	#SHT_STRTAB
 3

	)

434 
	#SHT_RELA
 4

	)

435 
	#SHT_HASH
 5

	)

436 
	#SHT_DYNAMIC
 6

	)

437 
	#SHT_NOTE
 7

	)

438 
	#SHT_NOBITS
 8

	)

439 
	#SHT_REL
 9

	)

440 
	#SHT_SHLIB
 10

	)

441 
	#SHT_DYNSYM
 11

	)

442 
	#SHT_INIT_ARRAY
 14

	)

443 
	#SHT_FINI_ARRAY
 15

	)

444 
	#SHT_PREINIT_ARRAY
 16

	)

445 
	#SHT_GROUP
 17

	)

446 
	#SHT_SYMTAB_SHNDX
 18

	)

447 
	#SHT_RELR
 19

	)

448 
	#SHT_NUM
 20

	)

449 
	#SHT_LOOS
 0x60000000

	)

450 
	#SHT_GNU_ATTRIBUTES
 0x6ffffff5

	)

451 
	#SHT_GNU_HASH
 0x6ffffff6

	)

452 
	#SHT_GNU_LIBLIST
 0x6ffffff7

	)

453 
	#SHT_CHECKSUM
 0x6ffffff8

	)

454 
	#SHT_LOSUNW
 0x6fffffÁ

	)

455 
	#SHT_SUNW_move
 0x6fffffÁ

	)

456 
	#SHT_SUNW_COMDAT
 0x6ffffffb

	)

457 
	#SHT_SUNW_symöfo
 0x6ffffffc

	)

458 
	#SHT_GNU_vîdef
 0x6ffffffd

	)

459 
	#SHT_GNU_vî√ed
 0x6fffff„

	)

460 
	#SHT_GNU_vîsym
 0x6ffffff‡

	)

461 
	#SHT_HISUNW
 0x6ffffff‡

	)

462 
	#SHT_HIOS
 0x6ffffff‡

	)

463 
	#SHT_LOPROC
 0x70000000

	)

464 
	#SHT_HIPROC
 0x7ffffff‡

	)

465 
	#SHT_LOUSER
 0x80000000

	)

466 
	#SHT_HIUSER
 0x8ffffff‡

	)

470 
	#SHF_WRITE
 (1 << 0Ë

	)

471 
	#SHF_ALLOC
 (1 << 1Ë

	)

472 
	#SHF_EXECINSTR
 (1 << 2Ë

	)

473 
	#SHF_MERGE
 (1 << 4Ë

	)

474 
	#SHF_STRINGS
 (1 << 5Ë

	)

475 
	#SHF_INFO_LINK
 (1 << 6Ë

	)

476 
	#SHF_LINK_ORDER
 (1 << 7Ë

	)

477 
	#SHF_OS_NONCONFORMING
 (1 << 8Ë

	)

479 
	#SHF_GROUP
 (1 << 9Ë

	)

480 
	#SHF_TLS
 (1 << 10Ë

	)

481 
	#SHF_COMPRESSED
 (1 << 11Ë

	)

482 
	#SHF_MASKOS
 0x0ff00000

	)

483 
	#SHF_MASKPROC
 0xf0000000

	)

484 
	#SHF_GNU_RETAIN
 (1 << 21Ë

	)

485 
	#SHF_ORDERED
 (1 << 30Ë

	)

487 
	#SHF_EXCLUDE
 (1U << 31Ë

	)

494 
Elf32_W‹d
 
	mch_ty≥
;

495 
Elf32_W‹d
 
	mch_size
;

496 
Elf32_W‹d
 
	mch_addølign
;

497 } 
	tElf32_Chdr
;

501 
Elf64_W‹d
 
	mch_ty≥
;

502 
Elf64_W‹d
 
	mch_ª£rved
;

503 
Elf64_Xw‹d
 
	mch_size
;

504 
Elf64_Xw‹d
 
	mch_addølign
;

505 } 
	tElf64_Chdr
;

508 
	#ELFCOMPRESS_ZLIB
 1

	)

509 
	#ELFCOMPRESS_ZSTD
 2

	)

510 
	#ELFCOMPRESS_LOOS
 0x60000000

	)

511 
	#ELFCOMPRESS_HIOS
 0x6ffffff‡

	)

512 
	#ELFCOMPRESS_LOPROC
 0x70000000

	)

513 
	#ELFCOMPRESS_HIPROC
 0x7ffffff‡

	)

516 
	#GRP_COMDAT
 0x1

	)

522 
Elf32_W‹d
 
	m°_«me
;

523 
Elf32_Addr
 
	m°_vÆue
;

524 
Elf32_W‹d
 
	m°_size
;

525 
	m°_öfo
;

526 
	m°_Ÿhî
;

527 
Elf32_Se˘i⁄
 
	m°_shndx
;

528 } 
	tElf32_Sym
;

532 
Elf64_W‹d
 
	m°_«me
;

533 
	m°_öfo
;

534 
	m°_Ÿhî
;

535 
Elf64_Se˘i⁄
 
	m°_shndx
;

536 
Elf64_Addr
 
	m°_vÆue
;

537 
Elf64_Xw‹d
 
	m°_size
;

538 } 
	tElf64_Sym
;

545 
Elf32_HÆf
 
	msi_boundto
;

546 
Elf32_HÆf
 
	msi_Êags
;

547 } 
	tElf32_Symöfo
;

551 
Elf64_HÆf
 
	msi_boundto
;

552 
Elf64_HÆf
 
	msi_Êags
;

553 } 
	tElf64_Symöfo
;

556 
	#SYMINFO_BT_SELF
 0xfff‡

	)

557 
	#SYMINFO_BT_PARENT
 0xff„

	)

558 
	#SYMINFO_BT_LOWRESERVE
 0xff00

	)

561 
	#SYMINFO_FLG_DIRECT
 0x0001

	)

562 
	#SYMINFO_FLG_PASSTHRU
 0x0002

	)

563 
	#SYMINFO_FLG_COPY
 0x0004

	)

564 
	#SYMINFO_FLG_LAZYLOAD
 0x0008

	)

567 
	#SYMINFO_NONE
 0

	)

568 
	#SYMINFO_CURRENT
 1

	)

569 
	#SYMINFO_NUM
 2

	)

574 
	#ELF32_ST_BIND
(
vÆ
Ë(((Ë(vÆ)Ë>> 4)

	)

575 
	#ELF32_ST_TYPE
(
vÆ
Ë((vÆË& 0xf)

	)

576 
	#ELF32_ST_INFO
(
böd
, 
ty≥
Ë(((bödË<< 4Ë+ (—y≥Ë& 0xf))

	)

579 
	#ELF64_ST_BIND
(
vÆ
Ë
	`ELF32_ST_BIND
 (vÆ)

	)

580 
	#ELF64_ST_TYPE
(
vÆ
Ë
	`ELF32_ST_TYPE
 (vÆ)

	)

581 
	#ELF64_ST_INFO
(
böd
, 
ty≥
Ë
	`ELF32_ST_INFO
 ((böd), (ty≥))

	)

585 
	#STB_LOCAL
 0

	)

586 
	#STB_GLOBAL
 1

	)

587 
	#STB_WEAK
 2

	)

588 
	#STB_NUM
 3

	)

589 
	#STB_LOOS
 10

	)

590 
	#STB_GNU_UNIQUE
 10

	)

591 
	#STB_HIOS
 12

	)

592 
	#STB_LOPROC
 13

	)

593 
	#STB_HIPROC
 15

	)

597 
	#STT_NOTYPE
 0

	)

598 
	#STT_OBJECT
 1

	)

599 
	#STT_FUNC
 2

	)

600 
	#STT_SECTION
 3

	)

601 
	#STT_FILE
 4

	)

602 
	#STT_COMMON
 5

	)

603 
	#STT_TLS
 6

	)

604 
	#STT_NUM
 7

	)

605 
	#STT_LOOS
 10

	)

606 
	#STT_GNU_IFUNC
 10

	)

607 
	#STT_HIOS
 12

	)

608 
	#STT_LOPROC
 13

	)

609 
	#STT_HIPROC
 15

	)

616 
	#STN_UNDEF
 0

	)

621 
	#ELF32_ST_VISIBILITY
(
o
Ë((oË& 0x03)

	)

624 
	#ELF64_ST_VISIBILITY
(
o
Ë
	`ELF32_ST_VISIBILITY
 (o)

	)

627 
	#STV_DEFAULT
 0

	)

628 
	#STV_INTERNAL
 1

	)

629 
	#STV_HIDDEN
 2

	)

630 
	#STV_PROTECTED
 3

	)

637 
Elf32_Addr
 
	mr_off£t
;

638 
Elf32_W‹d
 
	mr_öfo
;

639 } 
	tElf32_Rñ
;

648 
Elf64_Addr
 
	mr_off£t
;

649 
Elf64_Xw‹d
 
	mr_öfo
;

650 } 
	tElf64_Rñ
;

656 
Elf32_Addr
 
	mr_off£t
;

657 
Elf32_W‹d
 
	mr_öfo
;

658 
Elf32_Sw‹d
 
	mr_addíd
;

659 } 
	tElf32_Rña
;

663 
Elf64_Addr
 
	mr_off£t
;

664 
Elf64_Xw‹d
 
	mr_öfo
;

665 
Elf64_Sxw‹d
 
	mr_addíd
;

666 } 
	tElf64_Rña
;

670 
Elf32_W‹d
 
	tElf32_Rñr
;

671 
Elf64_Xw‹d
 
	tElf64_Rñr
;

675 
	#ELF32_R_SYM
(
vÆ
Ë((vÆË>> 8)

	)

676 
	#ELF32_R_TYPE
(
vÆ
Ë((vÆË& 0xff)

	)

677 
	#ELF32_R_INFO
(
sym
, 
ty≥
Ë(((symË<< 8Ë+ (—y≥Ë& 0xff))

	)

679 
	#ELF64_R_SYM
(
i
Ë((iË>> 32)

	)

680 
	#ELF64_R_TYPE
(
i
Ë((iË& 0xffffffff)

	)

681 
	#ELF64_R_INFO
(
sym
,
ty≥
Ë((((
Elf64_Xw‹d
Ë(sym)Ë<< 32Ë+ (ty≥))

	)

687 
Elf32_W‹d
 
	mp_ty≥
;

688 
Elf32_Off
 
	mp_off£t
;

689 
Elf32_Addr
 
	mp_vaddr
;

690 
Elf32_Addr
 
	mp_∑ddr
;

691 
Elf32_W‹d
 
	mp_fûesz
;

692 
Elf32_W‹d
 
	mp_memsz
;

693 
Elf32_W‹d
 
	mp_Êags
;

694 
Elf32_W‹d
 
	mp_Æign
;

695 } 
	tElf32_Phdr
;

699 
Elf64_W‹d
 
	mp_ty≥
;

700 
Elf64_W‹d
 
	mp_Êags
;

701 
Elf64_Off
 
	mp_off£t
;

702 
Elf64_Addr
 
	mp_vaddr
;

703 
Elf64_Addr
 
	mp_∑ddr
;

704 
Elf64_Xw‹d
 
	mp_fûesz
;

705 
Elf64_Xw‹d
 
	mp_memsz
;

706 
Elf64_Xw‹d
 
	mp_Æign
;

707 } 
	tElf64_Phdr
;

713 
	#PN_XNUM
 0xffff

	)

717 
	#PT_NULL
 0

	)

718 
	#PT_LOAD
 1

	)

719 
	#PT_DYNAMIC
 2

	)

720 
	#PT_INTERP
 3

	)

721 
	#PT_NOTE
 4

	)

722 
	#PT_SHLIB
 5

	)

723 
	#PT_PHDR
 6

	)

724 
	#PT_TLS
 7

	)

725 
	#PT_NUM
 8

	)

726 
	#PT_LOOS
 0x60000000

	)

727 
	#PT_GNU_EH_FRAME
 0x6474e550

	)

728 
	#PT_GNU_STACK
 0x6474e551

	)

729 
	#PT_GNU_RELRO
 0x6474e552

	)

730 
	#PT_GNU_PROPERTY
 0x6474e553

	)

731 
	#PT_GNU_SFRAME
 0x6474e554

	)

732 
	#PT_LOSUNW
 0x6fffffÁ

	)

733 
	#PT_SUNWBSS
 0x6fffffÁ

	)

734 
	#PT_SUNWSTACK
 0x6ffffffb

	)

735 
	#PT_HISUNW
 0x6fffffff

	)

736 
	#PT_HIOS
 0x6ffffff‡

	)

737 
	#PT_LOPROC
 0x70000000

	)

738 
	#PT_HIPROC
 0x7ffffff‡

	)

742 
	#PF_X
 (1 << 0Ë

	)

743 
	#PF_W
 (1 << 1Ë

	)

744 
	#PF_R
 (1 << 2Ë

	)

745 
	#PF_MASKOS
 0x0ff00000

	)

746 
	#PF_MASKPROC
 0xf0000000

	)

750 
	#NT_PRSTATUS
 1

	)

751 
	#NT_PRFPREG
 2

	)

753 
	#NT_FPREGSET
 2

	)

754 
	#NT_PRPSINFO
 3

	)

755 
	#NT_PRXREG
 4

	)

756 
	#NT_TASKSTRUCT
 4

	)

757 
	#NT_PLATFORM
 5

	)

758 
	#NT_AUXV
 6

	)

759 
	#NT_GWINDOWS
 7

	)

760 
	#NT_ASRS
 8

	)

761 
	#NT_PSTATUS
 10

	)

762 
	#NT_PSINFO
 13

	)

763 
	#NT_PRCRED
 14

	)

764 
	#NT_UTSNAME
 15

	)

765 
	#NT_LWPSTATUS
 16

	)

766 
	#NT_LWPSINFO
 17

	)

767 
	#NT_PRFPXREG
 20

	)

768 
	#NT_SIGINFO
 0x53494749

	)

770 
	#NT_FILE
 0x46494c45

	)

772 
	#NT_PRXFPREG
 0x46e62b7‡

	)

773 
	#NT_PPC_VMX
 0x100

	)

774 
	#NT_PPC_SPE
 0x101

	)

775 
	#NT_PPC_VSX
 0x102

	)

776 
	#NT_PPC_TAR
 0x103

	)

777 
	#NT_PPC_PPR
 0x104

	)

778 
	#NT_PPC_DSCR
 0x105

	)

779 
	#NT_PPC_EBB
 0x106

	)

780 
	#NT_PPC_PMU
 0x107

	)

781 
	#NT_PPC_TM_CGPR
 0x108

	)

782 
	#NT_PPC_TM_CFPR
 0x109

	)

783 
	#NT_PPC_TM_CVMX
 0x10®

	)

784 
	#NT_PPC_TM_CVSX
 0x10b

	)

785 
	#NT_PPC_TM_SPR
 0x10¯

	)

786 
	#NT_PPC_TM_CTAR
 0x10d

	)

788 
	#NT_PPC_TM_CPPR
 0x10ê

	)

790 
	#NT_PPC_TM_CDSCR
 0x10‡

	)

792 
	#NT_PPC_PKEY
 0x110

	)

794 
	#NT_386_TLS
 0x200

	)

795 
	#NT_386_IOPERM
 0x201

	)

796 
	#NT_X86_XSTATE
 0x202

	)

797 
	#NT_S390_HIGH_GPRS
 0x300

	)

798 
	#NT_S390_TIMER
 0x301

	)

799 
	#NT_S390_TODCMP
 0x302

	)

800 
	#NT_S390_TODPREG
 0x303

	)

801 
	#NT_S390_CTRS
 0x304

	)

802 
	#NT_S390_PREFIX
 0x305

	)

803 
	#NT_S390_LAST_BREAK
 0x306

	)

804 
	#NT_S390_SYSTEM_CALL
 0x307

	)

805 
	#NT_S390_TDB
 0x308

	)

806 
	#NT_S390_VXRS_LOW
 0x309

	)

808 
	#NT_S390_VXRS_HIGH
 0x30®

	)

809 
	#NT_S390_GS_CB
 0x30b

	)

810 
	#NT_S390_GS_BC
 0x30¯

	)

812 
	#NT_S390_RI_CB
 0x30d

	)

813 
	#NT_S390_PV_CPU_DATA
 0x30ê

	)

814 
	#NT_ARM_VFP
 0x400

	)

815 
	#NT_ARM_TLS
 0x401

	)

816 
	#NT_ARM_HW_BREAK
 0x402

	)

817 
	#NT_ARM_HW_WATCH
 0x403

	)

818 
	#NT_ARM_SYSTEM_CALL
 0x404

	)

819 
	#NT_ARM_SVE
 0x405

	)

821 
	#NT_ARM_PAC_MASK
 0x406

	)

823 
	#NT_ARM_PACA_KEYS
 0x407

	)

825 
	#NT_ARM_PACG_KEYS
 0x408

	)

827 
	#NT_ARM_TAGGED_ADDR_CTRL
 0x409

	)

829 
	#NT_ARM_PAC_ENABLED_KEYS
 0x40®

	)

831 
	#NT_VMCOREDD
 0x700

	)

832 
	#NT_MIPS_DSP
 0x800

	)

833 
	#NT_MIPS_FP_MODE
 0x801

	)

834 
	#NT_MIPS_MSA
 0x802

	)

835 
	#NT_LOONGARCH_CPUCFG
 0xa00

	)

836 
	#NT_LOONGARCH_CSR
 0xa01

	)

838 
	#NT_LOONGARCH_LSX
 0xa02

	)

840 
	#NT_LOONGARCH_LASX
 0xa03

	)

842 
	#NT_LOONGARCH_LBT
 0xa04

	)

847 
	#NT_VERSION
 1

	)

854 
Elf32_Sw‹d
 
	md_èg
;

857 
Elf32_W‹d
 
	md_vÆ
;

858 
Elf32_Addr
 
	md_±r
;

859 } 
	md_un
;

860 } 
	tElf32_Dyn
;

864 
Elf64_Sxw‹d
 
	md_èg
;

867 
Elf64_Xw‹d
 
	md_vÆ
;

868 
Elf64_Addr
 
	md_±r
;

869 } 
	md_un
;

870 } 
	tElf64_Dyn
;

874 
	#DT_NULL
 0

	)

875 
	#DT_NEEDED
 1

	)

876 
	#DT_PLTRELSZ
 2

	)

877 
	#DT_PLTGOT
 3

	)

878 
	#DT_HASH
 4

	)

879 
	#DT_STRTAB
 5

	)

880 
	#DT_SYMTAB
 6

	)

881 
	#DT_RELA
 7

	)

882 
	#DT_RELASZ
 8

	)

883 
	#DT_RELAENT
 9

	)

884 
	#DT_STRSZ
 10

	)

885 
	#DT_SYMENT
 11

	)

886 
	#DT_INIT
 12

	)

887 
	#DT_FINI
 13

	)

888 
	#DT_SONAME
 14

	)

889 
	#DT_RPATH
 15

	)

890 
	#DT_SYMBOLIC
 16

	)

891 
	#DT_REL
 17

	)

892 
	#DT_RELSZ
 18

	)

893 
	#DT_RELENT
 19

	)

894 
	#DT_PLTREL
 20

	)

895 
	#DT_DEBUG
 21

	)

896 
	#DT_TEXTREL
 22

	)

897 
	#DT_JMPREL
 23

	)

898 
	#DT_BIND_NOW
 24

	)

899 
	#DT_INIT_ARRAY
 25

	)

900 
	#DT_FINI_ARRAY
 26

	)

901 
	#DT_INIT_ARRAYSZ
 27

	)

902 
	#DT_FINI_ARRAYSZ
 28

	)

903 
	#DT_RUNPATH
 29

	)

904 
	#DT_FLAGS
 30

	)

905 
	#DT_ENCODING
 32

	)

906 
	#DT_PREINIT_ARRAY
 32

	)

907 
	#DT_PREINIT_ARRAYSZ
 33

	)

908 
	#DT_SYMTAB_SHNDX
 34

	)

909 
	#DT_RELRSZ
 35

	)

910 
	#DT_RELR
 36

	)

911 
	#DT_RELRENT
 37

	)

912 
	#DT_NUM
 38

	)

913 
	#DT_LOOS
 0x6000000d

	)

914 
	#DT_HIOS
 0x6ffff000

	)

915 
	#DT_LOPROC
 0x70000000

	)

916 
	#DT_HIPROC
 0x7ffffff‡

	)

917 
	#DT_PROCNUM
 
DT_MIPS_NUM


	)

922 
	#DT_VALRNGLO
 0x6ffffd00

	)

923 
	#DT_GNU_PRELINKED
 0x6ffffdf5

	)

924 
	#DT_GNU_CONFLICTSZ
 0x6ffffdf6

	)

925 
	#DT_GNU_LIBLISTSZ
 0x6ffffdf7

	)

926 
	#DT_CHECKSUM
 0x6ffffdf8

	)

927 
	#DT_PLTPADSZ
 0x6ffffdf9

	)

928 
	#DT_MOVEENT
 0x6ffffdÁ

	)

929 
	#DT_MOVESZ
 0x6ffffdfb

	)

930 
	#DT_FEATURE_1
 0x6ffffdf¯

	)

931 
	#DT_POSFLAG_1
 0x6ffffdfd

	)

933 
	#DT_SYMINSZ
 0x6ffffd„

	)

934 
	#DT_SYMINENT
 0x6ffffdf‡

	)

935 
	#DT_VALRNGHI
 0x6ffffdff

	)

936 
	#DT_VALTAGIDX
(
èg
Ë(
DT_VALRNGHI
 - (èg)Ë

	)

937 
	#DT_VALNUM
 12

	)

944 
	#DT_ADDRRNGLO
 0x6fff„00

	)

945 
	#DT_GNU_HASH
 0x6fff„f5

	)

946 
	#DT_TLSDESC_PLT
 0x6fff„f6

	)

947 
	#DT_TLSDESC_GOT
 0x6fff„f7

	)

948 
	#DT_GNU_CONFLICT
 0x6fff„f8

	)

949 
	#DT_GNU_LIBLIST
 0x6fff„f9

	)

950 
	#DT_CONFIG
 0x6fff„Á

	)

951 
	#DT_DEPAUDIT
 0x6fff„fb

	)

952 
	#DT_AUDIT
 0x6fff„f¯

	)

953 
	#DT_PLTPAD
 0x6fff„fd

	)

954 
	#DT_MOVETAB
 0x6fff„„

	)

955 
	#DT_SYMINFO
 0x6fff„f‡

	)

956 
	#DT_ADDRRNGHI
 0x6fff„ff

	)

957 
	#DT_ADDRTAGIDX
(
èg
Ë(
DT_ADDRRNGHI
 - (èg)Ë

	)

958 
	#DT_ADDRNUM
 11

	)

962 
	#DT_VERSYM
 0x6ffffff0

	)

964 
	#DT_RELACOUNT
 0x6ffffff9

	)

965 
	#DT_RELCOUNT
 0x6fffffÁ

	)

968 
	#DT_FLAGS_1
 0x6ffffffb

	)

969 
	#DT_VERDEF
 0x6ffffff¯

	)

971 
	#DT_VERDEFNUM
 0x6ffffffd

	)

972 
	#DT_VERNEED
 0x6fffff„

	)

974 
	#DT_VERNEEDNUM
 0x6ffffff‡

	)

975 
	#DT_VERSIONTAGIDX
(
èg
Ë(
DT_VERNEEDNUM
 - (èg)Ë

	)

976 
	#DT_VERSIONTAGNUM
 16

	)

980 
	#DT_AUXILIARY
 0x7ffffffd

	)

981 
	#DT_FILTER
 0x7ffffff‡

	)

982 
	#DT_EXTRATAGIDX
(
èg
Ë((
Elf32_W‹d
)-((
Elf32_Sw‹d
Ë—agË<<1>>1)-1)

	)

983 
	#DT_EXTRANUM
 3

	)

986 
	#DF_ORIGIN
 0x00000001

	)

987 
	#DF_SYMBOLIC
 0x00000002

	)

988 
	#DF_TEXTREL
 0x00000004

	)

989 
	#DF_BIND_NOW
 0x00000008

	)

990 
	#DF_STATIC_TLS
 0x00000010

	)

994 
	#DF_1_NOW
 0x00000001

	)

995 
	#DF_1_GLOBAL
 0x00000002

	)

996 
	#DF_1_GROUP
 0x00000004

	)

997 
	#DF_1_NODELETE
 0x00000008

	)

998 
	#DF_1_LOADFLTR
 0x00000010

	)

999 
	#DF_1_INITFIRST
 0x00000020

	)

1000 
	#DF_1_NOOPEN
 0x00000040

	)

1001 
	#DF_1_ORIGIN
 0x00000080

	)

1002 
	#DF_1_DIRECT
 0x00000100

	)

1003 
	#DF_1_TRANS
 0x00000200

	)

1004 
	#DF_1_INTERPOSE
 0x00000400

	)

1005 
	#DF_1_NODEFLIB
 0x00000800

	)

1006 
	#DF_1_NODUMP
 0x00001000

	)

1007 
	#DF_1_CONFALT
 0x00002000

	)

1008 
	#DF_1_ENDFILTEE
 0x00004000

	)

1009 
	#DF_1_DISPRELDNE
 0x00008000

	)

1010 
	#DF_1_DISPRELPND
 0x00010000

	)

1011 
	#DF_1_NODIRECT
 0x00020000

	)

1012 
	#DF_1_IGNMULDEF
 0x00040000

	)

1013 
	#DF_1_NOKSYMS
 0x00080000

	)

1014 
	#DF_1_NOHDR
 0x00100000

	)

1015 
	#DF_1_EDITED
 0x00200000

	)

1016 
	#DF_1_NORELOC
 0x00400000

	)

1017 
	#DF_1_SYMINTPOSE
 0x00800000

	)

1018 
	#DF_1_GLOBAUDIT
 0x01000000

	)

1019 
	#DF_1_SINGLETON
 0x02000000

	)

1020 
	#DF_1_STUB
 0x04000000

	)

1021 
	#DF_1_PIE
 0x08000000

	)

1022 
	#DF_1_KMOD
 0x10000000

	)

1023 
	#DF_1_WEAKFILTER
 0x20000000

	)

1024 
	#DF_1_NOCOMMON
 0x40000000

	)

1027 
	#DTF_1_PARINIT
 0x00000001

	)

1028 
	#DTF_1_CONFEXP
 0x00000002

	)

1031 
	#DF_P1_LAZYLOAD
 0x00000001

	)

1032 
	#DF_P1_GROUPPERM
 0x00000002

	)

1039 
Elf32_HÆf
 
	mvd_vîsi⁄
;

1040 
Elf32_HÆf
 
	mvd_Êags
;

1041 
Elf32_HÆf
 
	mvd_ndx
;

1042 
Elf32_HÆf
 
	mvd_˙t
;

1043 
Elf32_W‹d
 
	mvd_hash
;

1044 
Elf32_W‹d
 
	mvd_aux
;

1045 
Elf32_W‹d
 
	mvd_√xt
;

1047 } 
	tElf32_Vîdef
;

1051 
Elf64_HÆf
 
	mvd_vîsi⁄
;

1052 
Elf64_HÆf
 
	mvd_Êags
;

1053 
Elf64_HÆf
 
	mvd_ndx
;

1054 
Elf64_HÆf
 
	mvd_˙t
;

1055 
Elf64_W‹d
 
	mvd_hash
;

1056 
Elf64_W‹d
 
	mvd_aux
;

1057 
Elf64_W‹d
 
	mvd_√xt
;

1059 } 
	tElf64_Vîdef
;

1063 
	#VER_DEF_NONE
 0

	)

1064 
	#VER_DEF_CURRENT
 1

	)

1065 
	#VER_DEF_NUM
 2

	)

1068 
	#VER_FLG_BASE
 0x1

	)

1069 
	#VER_FLG_WEAK
 0x2

	)

1073 
	#VER_NDX_LOCAL
 0

	)

1074 
	#VER_NDX_GLOBAL
 1

	)

1075 
	#VER_NDX_LORESERVE
 0xff00

	)

1076 
	#VER_NDX_ELIMINATE
 0xff01

	)

1082 
Elf32_W‹d
 
	mvda_«me
;

1083 
Elf32_W‹d
 
	mvda_√xt
;

1085 } 
	tElf32_Vîdaux
;

1089 
Elf64_W‹d
 
	mvda_«me
;

1090 
Elf64_W‹d
 
	mvda_√xt
;

1092 } 
	tElf64_Vîdaux
;

1099 
Elf32_HÆf
 
	mvn_vîsi⁄
;

1100 
Elf32_HÆf
 
	mvn_˙t
;

1101 
Elf32_W‹d
 
	mvn_fûe
;

1103 
Elf32_W‹d
 
	mvn_aux
;

1104 
Elf32_W‹d
 
	mvn_√xt
;

1106 } 
	tElf32_Vî√ed
;

1110 
Elf64_HÆf
 
	mvn_vîsi⁄
;

1111 
Elf64_HÆf
 
	mvn_˙t
;

1112 
Elf64_W‹d
 
	mvn_fûe
;

1114 
Elf64_W‹d
 
	mvn_aux
;

1115 
Elf64_W‹d
 
	mvn_√xt
;

1117 } 
	tElf64_Vî√ed
;

1121 
	#VER_NEED_NONE
 0

	)

1122 
	#VER_NEED_CURRENT
 1

	)

1123 
	#VER_NEED_NUM
 2

	)

1129 
Elf32_W‹d
 
	mv«_hash
;

1130 
Elf32_HÆf
 
	mv«_Êags
;

1131 
Elf32_HÆf
 
	mv«_Ÿhî
;

1132 
Elf32_W‹d
 
	mv«_«me
;

1133 
Elf32_W‹d
 
	mv«_√xt
;

1135 } 
	tElf32_Vî«ux
;

1139 
Elf64_W‹d
 
	mv«_hash
;

1140 
Elf64_HÆf
 
	mv«_Êags
;

1141 
Elf64_HÆf
 
	mv«_Ÿhî
;

1142 
Elf64_W‹d
 
	mv«_«me
;

1143 
Elf64_W‹d
 
	mv«_√xt
;

1145 } 
	tElf64_Vî«ux
;

1159 
uöt32_t
 
	ma_ty≥
;

1162 
uöt32_t
 
	ma_vÆ
;

1166 } 
	ma_un
;

1167 } 
	tElf32_auxv_t
;

1171 
uöt64_t
 
	ma_ty≥
;

1174 
uöt64_t
 
	ma_vÆ
;

1178 } 
	ma_un
;

1179 } 
	tElf64_auxv_t
;

1183 
	#AT_NULL
 0

	)

1184 
	#AT_IGNORE
 1

	)

1185 
	#AT_EXECFD
 2

	)

1186 
	#AT_PHDR
 3

	)

1187 
	#AT_PHENT
 4

	)

1188 
	#AT_PHNUM
 5

	)

1189 
	#AT_PAGESZ
 6

	)

1190 
	#AT_BASE
 7

	)

1191 
	#AT_FLAGS
 8

	)

1192 
	#AT_ENTRY
 9

	)

1193 
	#AT_NOTELF
 10

	)

1194 
	#AT_UID
 11

	)

1195 
	#AT_EUID
 12

	)

1196 
	#AT_GID
 13

	)

1197 
	#AT_EGID
 14

	)

1198 
	#AT_CLKTCK
 17

	)

1201 
	#AT_PLATFORM
 15

	)

1202 
	#AT_HWCAP
 16

	)

1207 
	#AT_FPUCW
 18

	)

1210 
	#AT_DCACHEBSIZE
 19

	)

1211 
	#AT_ICACHEBSIZE
 20

	)

1212 
	#AT_UCACHEBSIZE
 21

	)

1216 
	#AT_IGNOREPPC
 22

	)

1218 
	#AT_SECURE
 23

	)

1220 
	#AT_BASE_PLATFORM
 24

	)

1222 
	#AT_RANDOM
 25

	)

1224 
	#AT_HWCAP2
 26

	)

1227 
	#AT_RSEQ_FEATURE_SIZE
 27

	)

1228 
	#AT_RSEQ_ALIGN
 28

	)

1230 
	#AT_EXECFN
 31

	)

1234 
	#AT_SYSINFO
 32

	)

1235 
	#AT_SYSINFO_EHDR
 33

	)

1239 
	#AT_L1I_CACHESHAPE
 34

	)

1240 
	#AT_L1D_CACHESHAPE
 35

	)

1241 
	#AT_L2_CACHESHAPE
 36

	)

1242 
	#AT_L3_CACHESHAPE
 37

	)

1247 
	#AT_L1I_CACHESIZE
 40

	)

1248 
	#AT_L1I_CACHEGEOMETRY
 41

	)

1249 
	#AT_L1D_CACHESIZE
 42

	)

1250 
	#AT_L1D_CACHEGEOMETRY
 43

	)

1251 
	#AT_L2_CACHESIZE
 44

	)

1252 
	#AT_L2_CACHEGEOMETRY
 45

	)

1253 
	#AT_L3_CACHESIZE
 46

	)

1254 
	#AT_L3_CACHEGEOMETRY
 47

	)

1256 
	#AT_MINSIGSTKSZ
 51

	)

1263 
Elf32_W‹d
 
	mn_«mesz
;

1264 
Elf32_W‹d
 
	mn_descsz
;

1265 
Elf32_W‹d
 
	mn_ty≥
;

1266 } 
	tElf32_Nhdr
;

1270 
Elf64_W‹d
 
	mn_«mesz
;

1271 
Elf64_W‹d
 
	mn_descsz
;

1272 
Elf64_W‹d
 
	mn_ty≥
;

1273 } 
	tElf64_Nhdr
;

1278 
	#ELF_NOTE_SOLARIS
 "SUNW Sﬁ¨is"

	)

1281 
	#ELF_NOTE_GNU
 "GNU"

	)

1284 
	#ELF_NOTE_FDO
 "FDO"

	)

1289 
	#ELF_NOTE_PAGESIZE_HINT
 1

	)

1300 
	#NT_GNU_ABI_TAG
 1

	)

1301 
	#ELF_NOTE_ABI
 
NT_GNU_ABI_TAG


	)

1305 
	#ELF_NOTE_OS_LINUX
 0

	)

1306 
	#ELF_NOTE_OS_GNU
 1

	)

1307 
	#ELF_NOTE_OS_SOLARIS2
 2

	)

1308 
	#ELF_NOTE_OS_FREEBSD
 3

	)

1316 
	#NT_GNU_HWCAP
 2

	)

1320 
	#NT_GNU_BUILD_ID
 3

	)

1323 
	#NT_GNU_GOLD_VERSION
 4

	)

1326 
	#NT_GNU_PROPERTY_TYPE_0
 5

	)

1330 
	#NT_FDO_PACKAGING_METADATA
 0xˇ„1a7e

	)

1333 
	#NOTE_GNU_PROPERTY_SECTION_NAME
 ".nŸe.gnu.¥›îty"

	)

1338 
	#GNU_PROPERTY_STACK_SIZE
 1

	)

1340 
	#GNU_PROPERTY_NO_COPY_ON_PROTECTED
 2

	)

1344 
	#GNU_PROPERTY_UINT32_AND_LO
 0xb0000000

	)

1345 
	#GNU_PROPERTY_UINT32_AND_HI
 0xb0007fff

	)

1349 
	#GNU_PROPERTY_UINT32_OR_LO
 0xb0008000

	)

1350 
	#GNU_PROPERTY_UINT32_OR_HI
 0xb000ffff

	)

1353 
	#GNU_PROPERTY_1_NEEDED
 
GNU_PROPERTY_UINT32_OR_LO


	)

1357 
	#GNU_PROPERTY_1_NEEDED_INDIRECT_EXTERN_ACCESS
 (1U << 0)

	)

1360 
	#GNU_PROPERTY_LOPROC
 0xc0000000

	)

1362 
	#GNU_PROPERTY_HIPROC
 0xdfffffff

	)

1364 
	#GNU_PROPERTY_LOUSER
 0xe0000000

	)

1366 
	#GNU_PROPERTY_HIUSER
 0xffffffff

	)

1369 
	#GNU_PROPERTY_AARCH64_FEATURE_1_AND
 0xc0000000

	)

1371 
	#GNU_PROPERTY_AARCH64_FEATURE_1_BTI
 (1U << 0)

	)

1372 
	#GNU_PROPERTY_AARCH64_FEATURE_1_PAC
 (1U << 1)

	)

1376 
	#GNU_PROPERTY_X86_ISA_1_USED
 0xc0010002

	)

1379 
	#GNU_PROPERTY_X86_ISA_1_NEEDED
 0xc0008002

	)

1381 
	#GNU_PROPERTY_X86_FEATURE_1_AND
 0xc0000002

	)

1385 
	#GNU_PROPERTY_X86_ISA_1_BASELINE
 (1U << 0)

	)

1389 
	#GNU_PROPERTY_X86_ISA_1_V2
 (1U << 1)

	)

1392 
	#GNU_PROPERTY_X86_ISA_1_V3
 (1U << 2)

	)

1395 
	#GNU_PROPERTY_X86_ISA_1_V4
 (1U << 3)

	)

1399 
	#GNU_PROPERTY_X86_FEATURE_1_IBT
 (1U << 0)

	)

1402 
	#GNU_PROPERTY_X86_FEATURE_1_SHSTK
 (1U << 1)

	)

1407 
Elf32_Xw‹d
 
	mm_vÆue
;

1408 
Elf32_W‹d
 
	mm_öfo
;

1409 
Elf32_W‹d
 
	mm_poff£t
;

1410 
Elf32_HÆf
 
	mm_ª≥©
;

1411 
Elf32_HÆf
 
	mm_°ride
;

1412 } 
	tElf32_Move
;

1416 
Elf64_Xw‹d
 
	mm_vÆue
;

1417 
Elf64_Xw‹d
 
	mm_öfo
;

1418 
Elf64_Xw‹d
 
	mm_poff£t
;

1419 
Elf64_HÆf
 
	mm_ª≥©
;

1420 
Elf64_HÆf
 
	mm_°ride
;

1421 } 
	tElf64_Move
;

1424 
	#ELF32_M_SYM
(
öfo
Ë((öfoË>> 8)

	)

1425 
	#ELF32_M_SIZE
(
öfo
Ë((Ë(öfo))

	)

1426 
	#ELF32_M_INFO
(
sym
, 
size
Ë(((symË<< 8Ë+ (Ë(size))

	)

1428 
	#ELF64_M_SYM
(
öfo
Ë
	`ELF32_M_SYM
 (öfo)

	)

1429 
	#ELF64_M_SIZE
(
öfo
Ë
	`ELF32_M_SIZE
 (öfo)

	)

1430 
	#ELF64_M_INFO
(
sym
, 
size
Ë
	`ELF32_M_INFO
 (sym, size)

	)

1436 
	#EF_CPU32
 0x00810000

	)

1440 
	#R_68K_NONE
 0

	)

1441 
	#R_68K_32
 1

	)

1442 
	#R_68K_16
 2

	)

1443 
	#R_68K_8
 3

	)

1444 
	#R_68K_PC32
 4

	)

1445 
	#R_68K_PC16
 5

	)

1446 
	#R_68K_PC8
 6

	)

1447 
	#R_68K_GOT32
 7

	)

1448 
	#R_68K_GOT16
 8

	)

1449 
	#R_68K_GOT8
 9

	)

1450 
	#R_68K_GOT32O
 10

	)

1451 
	#R_68K_GOT16O
 11

	)

1452 
	#R_68K_GOT8O
 12

	)

1453 
	#R_68K_PLT32
 13

	)

1454 
	#R_68K_PLT16
 14

	)

1455 
	#R_68K_PLT8
 15

	)

1456 
	#R_68K_PLT32O
 16

	)

1457 
	#R_68K_PLT16O
 17

	)

1458 
	#R_68K_PLT8O
 18

	)

1459 
	#R_68K_COPY
 19

	)

1460 
	#R_68K_GLOB_DAT
 20

	)

1461 
	#R_68K_JMP_SLOT
 21

	)

1462 
	#R_68K_RELATIVE
 22

	)

1463 
	#R_68K_TLS_GD32
 25

	)

1464 
	#R_68K_TLS_GD16
 26

	)

1465 
	#R_68K_TLS_GD8
 27

	)

1466 
	#R_68K_TLS_LDM32
 28

	)

1467 
	#R_68K_TLS_LDM16
 29

	)

1468 
	#R_68K_TLS_LDM8
 30

	)

1469 
	#R_68K_TLS_LDO32
 31

	)

1470 
	#R_68K_TLS_LDO16
 32

	)

1471 
	#R_68K_TLS_LDO8
 33

	)

1472 
	#R_68K_TLS_IE32
 34

	)

1473 
	#R_68K_TLS_IE16
 35

	)

1474 
	#R_68K_TLS_IE8
 36

	)

1475 
	#R_68K_TLS_LE32
 37

	)

1477 
	#R_68K_TLS_LE16
 38

	)

1479 
	#R_68K_TLS_LE8
 39

	)

1481 
	#R_68K_TLS_DTPMOD32
 40

	)

1482 
	#R_68K_TLS_DTPREL32
 41

	)

1483 
	#R_68K_TLS_TPREL32
 42

	)

1485 
	#R_68K_NUM
 43

	)

1491 
	#R_386_NONE
 0

	)

1492 
	#R_386_32
 1

	)

1493 
	#R_386_PC32
 2

	)

1494 
	#R_386_GOT32
 3

	)

1495 
	#R_386_PLT32
 4

	)

1496 
	#R_386_COPY
 5

	)

1497 
	#R_386_GLOB_DAT
 6

	)

1498 
	#R_386_JMP_SLOT
 7

	)

1499 
	#R_386_RELATIVE
 8

	)

1500 
	#R_386_GOTOFF
 9

	)

1501 
	#R_386_GOTPC
 10

	)

1502 
	#R_386_32PLT
 11

	)

1503 
	#R_386_TLS_TPOFF
 14

	)

1504 
	#R_386_TLS_IE
 15

	)

1506 
	#R_386_TLS_GOTIE
 16

	)

1508 
	#R_386_TLS_LE
 17

	)

1510 
	#R_386_TLS_GD
 18

	)

1512 
	#R_386_TLS_LDM
 19

	)

1515 
	#R_386_16
 20

	)

1516 
	#R_386_PC16
 21

	)

1517 
	#R_386_8
 22

	)

1518 
	#R_386_PC8
 23

	)

1519 
	#R_386_TLS_GD_32
 24

	)

1521 
	#R_386_TLS_GD_PUSH
 25

	)

1522 
	#R_386_TLS_GD_CALL
 26

	)

1524 
	#R_386_TLS_GD_POP
 27

	)

1525 
	#R_386_TLS_LDM_32
 28

	)

1527 
	#R_386_TLS_LDM_PUSH
 29

	)

1528 
	#R_386_TLS_LDM_CALL
 30

	)

1530 
	#R_386_TLS_LDM_POP
 31

	)

1531 
	#R_386_TLS_LDO_32
 32

	)

1532 
	#R_386_TLS_IE_32
 33

	)

1534 
	#R_386_TLS_LE_32
 34

	)

1536 
	#R_386_TLS_DTPMOD32
 35

	)

1537 
	#R_386_TLS_DTPOFF32
 36

	)

1538 
	#R_386_TLS_TPOFF32
 37

	)

1539 
	#R_386_SIZE32
 38

	)

1540 
	#R_386_TLS_GOTDESC
 39

	)

1541 
	#R_386_TLS_DESC_CALL
 40

	)

1544 
	#R_386_TLS_DESC
 41

	)

1548 
	#R_386_IRELATIVE
 42

	)

1549 
	#R_386_GOT32X
 43

	)

1552 
	#R_386_NUM
 44

	)

1558 
	#STT_SPARC_REGISTER
 13

	)

1562 
	#EF_SPARCV9_MM
 3

	)

1563 
	#EF_SPARCV9_TSO
 0

	)

1564 
	#EF_SPARCV9_PSO
 1

	)

1565 
	#EF_SPARCV9_RMO
 2

	)

1566 
	#EF_SPARC_LEDATA
 0x800000

	)

1567 
	#EF_SPARC_EXT_MASK
 0xFFFF00

	)

1568 
	#EF_SPARC_32PLUS
 0x000100

	)

1569 
	#EF_SPARC_SUN_US1
 0x000200

	)

1570 
	#EF_SPARC_HAL_R1
 0x000400

	)

1571 
	#EF_SPARC_SUN_US3
 0x000800

	)

1575 
	#R_SPARC_NONE
 0

	)

1576 
	#R_SPARC_8
 1

	)

1577 
	#R_SPARC_16
 2

	)

1578 
	#R_SPARC_32
 3

	)

1579 
	#R_SPARC_DISP8
 4

	)

1580 
	#R_SPARC_DISP16
 5

	)

1581 
	#R_SPARC_DISP32
 6

	)

1582 
	#R_SPARC_WDISP30
 7

	)

1583 
	#R_SPARC_WDISP22
 8

	)

1584 
	#R_SPARC_HI22
 9

	)

1585 
	#R_SPARC_22
 10

	)

1586 
	#R_SPARC_13
 11

	)

1587 
	#R_SPARC_LO10
 12

	)

1588 
	#R_SPARC_GOT10
 13

	)

1589 
	#R_SPARC_GOT13
 14

	)

1590 
	#R_SPARC_GOT22
 15

	)

1591 
	#R_SPARC_PC10
 16

	)

1592 
	#R_SPARC_PC22
 17

	)

1593 
	#R_SPARC_WPLT30
 18

	)

1594 
	#R_SPARC_COPY
 19

	)

1595 
	#R_SPARC_GLOB_DAT
 20

	)

1596 
	#R_SPARC_JMP_SLOT
 21

	)

1597 
	#R_SPARC_RELATIVE
 22

	)

1598 
	#R_SPARC_UA32
 23

	)

1602 
	#R_SPARC_PLT32
 24

	)

1603 
	#R_SPARC_HIPLT22
 25

	)

1604 
	#R_SPARC_LOPLT10
 26

	)

1605 
	#R_SPARC_PCPLT32
 27

	)

1606 
	#R_SPARC_PCPLT22
 28

	)

1607 
	#R_SPARC_PCPLT10
 29

	)

1608 
	#R_SPARC_10
 30

	)

1609 
	#R_SPARC_11
 31

	)

1610 
	#R_SPARC_64
 32

	)

1611 
	#R_SPARC_OLO10
 33

	)

1612 
	#R_SPARC_HH22
 34

	)

1613 
	#R_SPARC_HM10
 35

	)

1614 
	#R_SPARC_LM22
 36

	)

1615 
	#R_SPARC_PC_HH22
 37

	)

1616 
	#R_SPARC_PC_HM10
 38

	)

1617 
	#R_SPARC_PC_LM22
 39

	)

1618 
	#R_SPARC_WDISP16
 40

	)

1619 
	#R_SPARC_WDISP19
 41

	)

1620 
	#R_SPARC_GLOB_JMP
 42

	)

1621 
	#R_SPARC_7
 43

	)

1622 
	#R_SPARC_5
 44

	)

1623 
	#R_SPARC_6
 45

	)

1624 
	#R_SPARC_DISP64
 46

	)

1625 
	#R_SPARC_PLT64
 47

	)

1626 
	#R_SPARC_HIX22
 48

	)

1627 
	#R_SPARC_LOX10
 49

	)

1628 
	#R_SPARC_H44
 50

	)

1629 
	#R_SPARC_M44
 51

	)

1630 
	#R_SPARC_L44
 52

	)

1631 
	#R_SPARC_REGISTER
 53

	)

1632 
	#R_SPARC_UA64
 54

	)

1633 
	#R_SPARC_UA16
 55

	)

1634 
	#R_SPARC_TLS_GD_HI22
 56

	)

1635 
	#R_SPARC_TLS_GD_LO10
 57

	)

1636 
	#R_SPARC_TLS_GD_ADD
 58

	)

1637 
	#R_SPARC_TLS_GD_CALL
 59

	)

1638 
	#R_SPARC_TLS_LDM_HI22
 60

	)

1639 
	#R_SPARC_TLS_LDM_LO10
 61

	)

1640 
	#R_SPARC_TLS_LDM_ADD
 62

	)

1641 
	#R_SPARC_TLS_LDM_CALL
 63

	)

1642 
	#R_SPARC_TLS_LDO_HIX22
 64

	)

1643 
	#R_SPARC_TLS_LDO_LOX10
 65

	)

1644 
	#R_SPARC_TLS_LDO_ADD
 66

	)

1645 
	#R_SPARC_TLS_IE_HI22
 67

	)

1646 
	#R_SPARC_TLS_IE_LO10
 68

	)

1647 
	#R_SPARC_TLS_IE_LD
 69

	)

1648 
	#R_SPARC_TLS_IE_LDX
 70

	)

1649 
	#R_SPARC_TLS_IE_ADD
 71

	)

1650 
	#R_SPARC_TLS_LE_HIX22
 72

	)

1651 
	#R_SPARC_TLS_LE_LOX10
 73

	)

1652 
	#R_SPARC_TLS_DTPMOD32
 74

	)

1653 
	#R_SPARC_TLS_DTPMOD64
 75

	)

1654 
	#R_SPARC_TLS_DTPOFF32
 76

	)

1655 
	#R_SPARC_TLS_DTPOFF64
 77

	)

1656 
	#R_SPARC_TLS_TPOFF32
 78

	)

1657 
	#R_SPARC_TLS_TPOFF64
 79

	)

1658 
	#R_SPARC_GOTDATA_HIX22
 80

	)

1659 
	#R_SPARC_GOTDATA_LOX10
 81

	)

1660 
	#R_SPARC_GOTDATA_OP_HIX22
 82

	)

1661 
	#R_SPARC_GOTDATA_OP_LOX10
 83

	)

1662 
	#R_SPARC_GOTDATA_OP
 84

	)

1663 
	#R_SPARC_H34
 85

	)

1664 
	#R_SPARC_SIZE32
 86

	)

1665 
	#R_SPARC_SIZE64
 87

	)

1666 
	#R_SPARC_WDISP10
 88

	)

1667 
	#R_SPARC_JMP_IREL
 248

	)

1668 
	#R_SPARC_IRELATIVE
 249

	)

1669 
	#R_SPARC_GNU_VTINHERIT
 250

	)

1670 
	#R_SPARC_GNU_VTENTRY
 251

	)

1671 
	#R_SPARC_REV32
 252

	)

1673 
	#R_SPARC_NUM
 253

	)

1677 
	#DT_SPARC_REGISTER
 0x70000001

	)

1678 
	#DT_SPARC_NUM
 2

	)

1684 
	#EF_MIPS_NOREORDER
 1

	)

1685 
	#EF_MIPS_PIC
 2

	)

1686 
	#EF_MIPS_CPIC
 4

	)

1687 
	#EF_MIPS_XGOT
 8

	)

1688 
	#EF_MIPS_64BIT_WHIRL
 16

	)

1689 
	#EF_MIPS_ABI2
 32

	)

1690 
	#EF_MIPS_ABI_ON32
 64

	)

1691 
	#EF_MIPS_FP64
 512

	)

1692 
	#EF_MIPS_NAN2008
 1024

	)

1693 
	#EF_MIPS_ARCH
 0xf0000000

	)

1697 
	#EF_MIPS_ARCH_1
 0x00000000

	)

1698 
	#EF_MIPS_ARCH_2
 0x10000000

	)

1699 
	#EF_MIPS_ARCH_3
 0x20000000

	)

1700 
	#EF_MIPS_ARCH_4
 0x30000000

	)

1701 
	#EF_MIPS_ARCH_5
 0x40000000

	)

1702 
	#EF_MIPS_ARCH_32
 0x50000000

	)

1703 
	#EF_MIPS_ARCH_64
 0x60000000

	)

1704 
	#EF_MIPS_ARCH_32R2
 0x70000000

	)

1705 
	#EF_MIPS_ARCH_64R2
 0x80000000

	)

1709 
	#E_MIPS_ARCH_1
 
EF_MIPS_ARCH_1


	)

1710 
	#E_MIPS_ARCH_2
 
EF_MIPS_ARCH_2


	)

1711 
	#E_MIPS_ARCH_3
 
EF_MIPS_ARCH_3


	)

1712 
	#E_MIPS_ARCH_4
 
EF_MIPS_ARCH_4


	)

1713 
	#E_MIPS_ARCH_5
 
EF_MIPS_ARCH_5


	)

1714 
	#E_MIPS_ARCH_32
 
EF_MIPS_ARCH_32


	)

1715 
	#E_MIPS_ARCH_64
 
EF_MIPS_ARCH_64


	)

1719 
	#SHN_MIPS_ACOMMON
 0xff00

	)

1720 
	#SHN_MIPS_TEXT
 0xff01

	)

1721 
	#SHN_MIPS_DATA
 0xff02

	)

1722 
	#SHN_MIPS_SCOMMON
 0xff03

	)

1723 
	#SHN_MIPS_SUNDEFINED
 0xff04

	)

1727 
	#SHT_MIPS_LIBLIST
 0x70000000

	)

1728 
	#SHT_MIPS_MSYM
 0x70000001

	)

1729 
	#SHT_MIPS_CONFLICT
 0x70000002

	)

1730 
	#SHT_MIPS_GPTAB
 0x70000003

	)

1731 
	#SHT_MIPS_UCODE
 0x70000004

	)

1732 
	#SHT_MIPS_DEBUG
 0x70000005

	)

1733 
	#SHT_MIPS_REGINFO
 0x70000006

	)

1734 
	#SHT_MIPS_PACKAGE
 0x70000007

	)

1735 
	#SHT_MIPS_PACKSYM
 0x70000008

	)

1736 
	#SHT_MIPS_RELD
 0x70000009

	)

1737 
	#SHT_MIPS_IFACE
 0x7000000b

	)

1738 
	#SHT_MIPS_CONTENT
 0x7000000c

	)

1739 
	#SHT_MIPS_OPTIONS
 0x7000000d

	)

1740 
	#SHT_MIPS_SHDR
 0x70000010

	)

1741 
	#SHT_MIPS_FDESC
 0x70000011

	)

1742 
	#SHT_MIPS_EXTSYM
 0x70000012

	)

1743 
	#SHT_MIPS_DENSE
 0x70000013

	)

1744 
	#SHT_MIPS_PDESC
 0x70000014

	)

1745 
	#SHT_MIPS_LOCSYM
 0x70000015

	)

1746 
	#SHT_MIPS_AUXSYM
 0x70000016

	)

1747 
	#SHT_MIPS_OPTSYM
 0x70000017

	)

1748 
	#SHT_MIPS_LOCSTR
 0x70000018

	)

1749 
	#SHT_MIPS_LINE
 0x70000019

	)

1750 
	#SHT_MIPS_RFDESC
 0x7000001a

	)

1751 
	#SHT_MIPS_DELTASYM
 0x7000001b

	)

1752 
	#SHT_MIPS_DELTAINST
 0x7000001c

	)

1753 
	#SHT_MIPS_DELTACLASS
 0x7000001d

	)

1754 
	#SHT_MIPS_DWARF
 0x7000001ê

	)

1755 
	#SHT_MIPS_DELTADECL
 0x7000001f

	)

1756 
	#SHT_MIPS_SYMBOL_LIB
 0x70000020

	)

1757 
	#SHT_MIPS_EVENTS
 0x70000021

	)

1758 
	#SHT_MIPS_TRANSLATE
 0x70000022

	)

1759 
	#SHT_MIPS_PIXIE
 0x70000023

	)

1760 
	#SHT_MIPS_XLATE
 0x70000024

	)

1761 
	#SHT_MIPS_XLATE_DEBUG
 0x70000025

	)

1762 
	#SHT_MIPS_WHIRL
 0x70000026

	)

1763 
	#SHT_MIPS_EH_REGION
 0x70000027

	)

1764 
	#SHT_MIPS_XLATE_OLD
 0x70000028

	)

1765 
	#SHT_MIPS_PDR_EXCEPTION
 0x70000029

	)

1766 
	#SHT_MIPS_XHASH
 0x7000002b

	)

1770 
	#SHF_MIPS_GPREL
 0x10000000

	)

1771 
	#SHF_MIPS_MERGE
 0x20000000

	)

1772 
	#SHF_MIPS_ADDR
 0x40000000

	)

1773 
	#SHF_MIPS_STRINGS
 0x80000000

	)

1774 
	#SHF_MIPS_NOSTRIP
 0x08000000

	)

1775 
	#SHF_MIPS_LOCAL
 0x04000000

	)

1776 
	#SHF_MIPS_NAMES
 0x02000000

	)

1777 
	#SHF_MIPS_NODUPE
 0x01000000

	)

1783 
	#STO_MIPS_DEFAULT
 0x0

	)

1784 
	#STO_MIPS_INTERNAL
 0x1

	)

1785 
	#STO_MIPS_HIDDEN
 0x2

	)

1786 
	#STO_MIPS_PROTECTED
 0x3

	)

1787 
	#STO_MIPS_PLT
 0x8

	)

1788 
	#STO_MIPS_SC_ALIGN_UNUSED
 0xff

	)

1791 
	#STB_MIPS_SPLIT_COMMON
 13

	)

1799 
Elf32_W‹d
 
	mgt_cuºít_g_vÆue
;

1800 
Elf32_W‹d
 
	mgt_unu£d
;

1801 } 
	mgt_hódî
;

1804 
Elf32_W‹d
 
	mgt_g_vÆue
;

1805 
Elf32_W‹d
 
	mgt_byãs
;

1806 } 
	mgt_íåy
;

1807 } 
	tElf32_g±ab
;

1813 
Elf32_W‹d
 
	mri_g¥mask
;

1814 
Elf32_W‹d
 
	mri_˝rmask
[4];

1815 
Elf32_Sw‹d
 
	mri_gp_vÆue
;

1816 } 
	tElf32_RegInfo
;

1822 
	mköd
;

1824 
	msize
;

1825 
Elf32_Se˘i⁄
 
	m£˘i⁄
;

1827 
Elf32_W‹d
 
	möfo
;

1828 } 
	tElf_O±i⁄s
;

1832 
	#ODK_NULL
 0

	)

1833 
	#ODK_REGINFO
 1

	)

1834 
	#ODK_EXCEPTIONS
 2

	)

1835 
	#ODK_PAD
 3

	)

1836 
	#ODK_HWPATCH
 4

	)

1837 
	#ODK_FILL
 5

	)

1838 
	#ODK_TAGS
 6

	)

1839 
	#ODK_HWAND
 7

	)

1840 
	#ODK_HWOR
 8

	)

1844 
	#OEX_FPU_MIN
 0x1‡

	)

1845 
	#OEX_FPU_MAX
 0x1f00

	)

1846 
	#OEX_PAGE0
 0x10000

	)

1847 
	#OEX_SMM
 0x20000

	)

1848 
	#OEX_FPDBUG
 0x40000

	)

1849 
	#OEX_PRECISEFP
 
OEX_FPDBUG


	)

1850 
	#OEX_DISMISS
 0x80000

	)

1852 
	#OEX_FPU_INVAL
 0x10

	)

1853 
	#OEX_FPU_DIV0
 0x08

	)

1854 
	#OEX_FPU_OFLO
 0x04

	)

1855 
	#OEX_FPU_UFLO
 0x02

	)

1856 
	#OEX_FPU_INEX
 0x01

	)

1860 
	#OHW_R4KEOP
 0x1

	)

1861 
	#OHW_R8KPFETCH
 0x2

	)

1862 
	#OHW_R5KEOP
 0x4

	)

1863 
	#OHW_R5KCVTL
 0x8

	)

1865 
	#OPAD_PREFIX
 0x1

	)

1866 
	#OPAD_POSTFIX
 0x2

	)

1867 
	#OPAD_SYMBOL
 0x4

	)

1873 
Elf32_W‹d
 
	mhwp_Êags1
;

1874 
Elf32_W‹d
 
	mhwp_Êags2
;

1875 } 
	tElf_O±i⁄s_Hw
;

1879 
	#OHWA0_R4KEOP_CHECKED
 0x00000001

	)

1880 
	#OHWA1_R4KEOP_CLEAN
 0x00000002

	)

1884 
	#R_MIPS_NONE
 0

	)

1885 
	#R_MIPS_16
 1

	)

1886 
	#R_MIPS_32
 2

	)

1887 
	#R_MIPS_REL32
 3

	)

1888 
	#R_MIPS_26
 4

	)

1889 
	#R_MIPS_HI16
 5

	)

1890 
	#R_MIPS_LO16
 6

	)

1891 
	#R_MIPS_GPREL16
 7

	)

1892 
	#R_MIPS_LITERAL
 8

	)

1893 
	#R_MIPS_GOT16
 9

	)

1894 
	#R_MIPS_PC16
 10

	)

1895 
	#R_MIPS_CALL16
 11

	)

1896 
	#R_MIPS_GPREL32
 12

	)

1898 
	#R_MIPS_SHIFT5
 16

	)

1899 
	#R_MIPS_SHIFT6
 17

	)

1900 
	#R_MIPS_64
 18

	)

1901 
	#R_MIPS_GOT_DISP
 19

	)

1902 
	#R_MIPS_GOT_PAGE
 20

	)

1903 
	#R_MIPS_GOT_OFST
 21

	)

1904 
	#R_MIPS_GOT_HI16
 22

	)

1905 
	#R_MIPS_GOT_LO16
 23

	)

1906 
	#R_MIPS_SUB
 24

	)

1907 
	#R_MIPS_INSERT_A
 25

	)

1908 
	#R_MIPS_INSERT_B
 26

	)

1909 
	#R_MIPS_DELETE
 27

	)

1910 
	#R_MIPS_HIGHER
 28

	)

1911 
	#R_MIPS_HIGHEST
 29

	)

1912 
	#R_MIPS_CALL_HI16
 30

	)

1913 
	#R_MIPS_CALL_LO16
 31

	)

1914 
	#R_MIPS_SCN_DISP
 32

	)

1915 
	#R_MIPS_REL16
 33

	)

1916 
	#R_MIPS_ADD_IMMEDIATE
 34

	)

1917 
	#R_MIPS_PJUMP
 35

	)

1918 
	#R_MIPS_RELGOT
 36

	)

1919 
	#R_MIPS_JALR
 37

	)

1920 
	#R_MIPS_TLS_DTPMOD32
 38

	)

1921 
	#R_MIPS_TLS_DTPREL32
 39

	)

1922 
	#R_MIPS_TLS_DTPMOD64
 40

	)

1923 
	#R_MIPS_TLS_DTPREL64
 41

	)

1924 
	#R_MIPS_TLS_GD
 42

	)

1925 
	#R_MIPS_TLS_LDM
 43

	)

1926 
	#R_MIPS_TLS_DTPREL_HI16
 44

	)

1927 
	#R_MIPS_TLS_DTPREL_LO16
 45

	)

1928 
	#R_MIPS_TLS_GOTTPREL
 46

	)

1929 
	#R_MIPS_TLS_TPREL32
 47

	)

1930 
	#R_MIPS_TLS_TPREL64
 48

	)

1931 
	#R_MIPS_TLS_TPREL_HI16
 49

	)

1932 
	#R_MIPS_TLS_TPREL_LO16
 50

	)

1933 
	#R_MIPS_GLOB_DAT
 51

	)

1934 
	#R_MIPS_COPY
 126

	)

1935 
	#R_MIPS_JUMP_SLOT
 127

	)

1937 
	#R_MIPS_NUM
 128

	)

1941 
	#PT_MIPS_REGINFO
 0x70000000

	)

1942 
	#PT_MIPS_RTPROC
 0x70000001

	)

1943 
	#PT_MIPS_OPTIONS
 0x70000002

	)

1944 
	#PT_MIPS_ABIFLAGS
 0x70000003

	)

1948 
	#PF_MIPS_LOCAL
 0x10000000

	)

1952 
	#DT_MIPS_RLD_VERSION
 0x70000001

	)

1953 
	#DT_MIPS_TIME_STAMP
 0x70000002

	)

1954 
	#DT_MIPS_ICHECKSUM
 0x70000003

	)

1955 
	#DT_MIPS_IVERSION
 0x70000004

	)

1956 
	#DT_MIPS_FLAGS
 0x70000005

	)

1957 
	#DT_MIPS_BASE_ADDRESS
 0x70000006

	)

1958 
	#DT_MIPS_MSYM
 0x70000007

	)

1959 
	#DT_MIPS_CONFLICT
 0x70000008

	)

1960 
	#DT_MIPS_LIBLIST
 0x70000009

	)

1961 
	#DT_MIPS_LOCAL_GOTNO
 0x7000000®

	)

1962 
	#DT_MIPS_CONFLICTNO
 0x7000000b

	)

1963 
	#DT_MIPS_LIBLISTNO
 0x70000010

	)

1964 
	#DT_MIPS_SYMTABNO
 0x70000011

	)

1965 
	#DT_MIPS_UNREFEXTNO
 0x70000012

	)

1966 
	#DT_MIPS_GOTSYM
 0x70000013

	)

1967 
	#DT_MIPS_HIPAGENO
 0x70000014

	)

1968 
	#DT_MIPS_RLD_MAP
 0x70000016

	)

1969 
	#DT_MIPS_DELTA_CLASS
 0x70000017

	)

1970 
	#DT_MIPS_DELTA_CLASS_NO
 0x70000018

	)

1972 
	#DT_MIPS_DELTA_INSTANCE
 0x70000019

	)

1973 
	#DT_MIPS_DELTA_INSTANCE_NO
 0x7000001®

	)

1975 
	#DT_MIPS_DELTA_RELOC
 0x7000001b

	)

1976 
	#DT_MIPS_DELTA_RELOC_NO
 0x7000001¯

	)

1978 
	#DT_MIPS_DELTA_SYM
 0x7000001d

	)

1980 
	#DT_MIPS_DELTA_SYM_NO
 0x7000001ê

	)

1982 
	#DT_MIPS_DELTA_CLASSSYM
 0x70000020

	)

1984 
	#DT_MIPS_DELTA_CLASSSYM_NO
 0x70000021

	)

1986 
	#DT_MIPS_CXX_FLAGS
 0x70000022

	)

1987 
	#DT_MIPS_PIXIE_INIT
 0x70000023

	)

1988 
	#DT_MIPS_SYMBOL_LIB
 0x70000024

	)

1989 
	#DT_MIPS_LOCALPAGE_GOTIDX
 0x70000025

	)

1990 
	#DT_MIPS_LOCAL_GOTIDX
 0x70000026

	)

1991 
	#DT_MIPS_HIDDEN_GOTIDX
 0x70000027

	)

1992 
	#DT_MIPS_PROTECTED_GOTIDX
 0x70000028

	)

1993 
	#DT_MIPS_OPTIONS
 0x70000029

	)

1994 
	#DT_MIPS_INTERFACE
 0x7000002®

	)

1995 
	#DT_MIPS_DYNSTR_ALIGN
 0x7000002b

	)

1996 
	#DT_MIPS_INTERFACE_SIZE
 0x7000002¯

	)

1997 
	#DT_MIPS_RLD_TEXT_RESOLVE_ADDR
 0x7000002d

	)

1999 
	#DT_MIPS_PERF_SUFFIX
 0x7000002ê

	)

2001 
	#DT_MIPS_COMPACT_SIZE
 0x7000002‡

	)

2002 
	#DT_MIPS_GP_VALUE
 0x70000030

	)

2003 
	#DT_MIPS_AUX_DYNAMIC
 0x70000031

	)

2005 
	#DT_MIPS_PLTGOT
 0x70000032

	)

2009 
	#DT_MIPS_RWPLT
 0x70000034

	)

2013 
	#DT_MIPS_RLD_MAP_REL
 0x70000035

	)

2015 
	#DT_MIPS_XHASH
 0x70000036

	)

2016 
	#DT_MIPS_NUM
 0x37

	)

2020 
	#RHF_NONE
 0

	)

2021 
	#RHF_QUICKSTART
 (1 << 0Ë

	)

2022 
	#RHF_NOTPOT
 (1 << 1Ë

	)

2023 
	#RHF_NO_LIBRARY_REPLACEMENT
 (1 << 2Ë

	)

2024 
	#RHF_NO_MOVE
 (1 << 3)

	)

2025 
	#RHF_SGI_ONLY
 (1 << 4)

	)

2026 
	#RHF_GUARANTEE_INIT
 (1 << 5)

	)

2027 
	#RHF_DELTA_C_PLUS_PLUS
 (1 << 6)

	)

2028 
	#RHF_GUARANTEE_START_INIT
 (1 << 7)

	)

2029 
	#RHF_PIXIE
 (1 << 8)

	)

2030 
	#RHF_DEFAULT_DELAY_LOAD
 (1 << 9)

	)

2031 
	#RHF_REQUICKSTART
 (1 << 10)

	)

2032 
	#RHF_REQUICKSTARTED
 (1 << 11)

	)

2033 
	#RHF_CORD
 (1 << 12)

	)

2034 
	#RHF_NO_UNRES_UNDEF
 (1 << 13)

	)

2035 
	#RHF_RLD_ORDER_SAFE
 (1 << 14)

	)

2041 
Elf32_W‹d
 
	ml_«me
;

2042 
Elf32_W‹d
 
	ml_time_°amp
;

2043 
Elf32_W‹d
 
	ml_checksum
;

2044 
Elf32_W‹d
 
	ml_vîsi⁄
;

2045 
Elf32_W‹d
 
	ml_Êags
;

2046 } 
	tElf32_Lib
;

2050 
Elf64_W‹d
 
	ml_«me
;

2051 
Elf64_W‹d
 
	ml_time_°amp
;

2052 
Elf64_W‹d
 
	ml_checksum
;

2053 
Elf64_W‹d
 
	ml_vîsi⁄
;

2054 
Elf64_W‹d
 
	ml_Êags
;

2055 } 
	tElf64_Lib
;

2060 
	#LL_NONE
 0

	)

2061 
	#LL_EXACT_MATCH
 (1 << 0Ë

	)

2062 
	#LL_IGNORE_INT_VER
 (1 << 1Ë

	)

2063 
	#LL_REQUIRE_MINOR
 (1 << 2)

	)

2064 
	#LL_EXPORTS
 (1 << 3)

	)

2065 
	#LL_DELAY_LOAD
 (1 << 4)

	)

2066 
	#LL_DELTA
 (1 << 5)

	)

2070 
Elf32_Addr
 
	tElf32_C⁄Êi˘
;

2075 
Elf32_HÆf
 
	mvîsi⁄
;

2077 
	miß_Àvñ
;

2079 
	miß_ªv
;

2081 
	mg¥_size
;

2083 
	m˝r1_size
;

2085 
	m˝r2_size
;

2087 
	mÂ_abi
;

2089 
Elf32_W‹d
 
	miß_ext
;

2091 
Elf32_W‹d
 
	ma£s
;

2093 
Elf32_W‹d
 
	mÊags1
;

2094 
Elf32_W‹d
 
	mÊags2
;

2095 } 
	tElf_MIPS_ABIFœgs_v0
;

2099 
	#MIPS_AFL_REG_NONE
 0x00

	)

2100 
	#MIPS_AFL_REG_32
 0x01

	)

2101 
	#MIPS_AFL_REG_64
 0x02

	)

2102 
	#MIPS_AFL_REG_128
 0x03

	)

2106 
	#MIPS_AFL_ASE_DSP
 0x00000001

	)

2107 
	#MIPS_AFL_ASE_DSPR2
 0x00000002

	)

2108 
	#MIPS_AFL_ASE_EVA
 0x00000004

	)

2109 
	#MIPS_AFL_ASE_MCU
 0x00000008

	)

2110 
	#MIPS_AFL_ASE_MDMX
 0x00000010

	)

2111 
	#MIPS_AFL_ASE_MIPS3D
 0x00000020

	)

2112 
	#MIPS_AFL_ASE_MT
 0x00000040

	)

2113 
	#MIPS_AFL_ASE_SMARTMIPS
 0x00000080

	)

2114 
	#MIPS_AFL_ASE_VIRT
 0x00000100

	)

2115 
	#MIPS_AFL_ASE_MSA
 0x00000200

	)

2116 
	#MIPS_AFL_ASE_MIPS16
 0x00000400

	)

2117 
	#MIPS_AFL_ASE_MICROMIPS
 0x00000800

	)

2118 
	#MIPS_AFL_ASE_XPA
 0x00001000

	)

2119 
	#MIPS_AFL_ASE_MASK
 0x00001ff‡

	)

2123 
	#MIPS_AFL_EXT_XLR
 1

	)

2124 
	#MIPS_AFL_EXT_OCTEON2
 2

	)

2125 
	#MIPS_AFL_EXT_OCTEONP
 3

	)

2126 
	#MIPS_AFL_EXT_LOONGSON_3A
 4

	)

2127 
	#MIPS_AFL_EXT_OCTEON
 5

	)

2128 
	#MIPS_AFL_EXT_5900
 6

	)

2129 
	#MIPS_AFL_EXT_4650
 7

	)

2130 
	#MIPS_AFL_EXT_4010
 8

	)

2131 
	#MIPS_AFL_EXT_4100
 9

	)

2132 
	#MIPS_AFL_EXT_3900
 10

	)

2133 
	#MIPS_AFL_EXT_10000
 11

	)

2134 
	#MIPS_AFL_EXT_SB1
 12

	)

2135 
	#MIPS_AFL_EXT_4111
 13

	)

2136 
	#MIPS_AFL_EXT_4120
 14

	)

2137 
	#MIPS_AFL_EXT_5400
 15

	)

2138 
	#MIPS_AFL_EXT_5500
 16

	)

2139 
	#MIPS_AFL_EXT_LOONGSON_2E
 17

	)

2140 
	#MIPS_AFL_EXT_LOONGSON_2F
 18

	)

2143 
	#MIPS_AFL_FLAGS1_ODDSPREG
 1

	)

2149 
	mVÆ_GNU_MIPS_ABI_FP_ANY
 = 0,

2151 
	mVÆ_GNU_MIPS_ABI_FP_DOUBLE
 = 1,

2153 
	mVÆ_GNU_MIPS_ABI_FP_SINGLE
 = 2,

2155 
	mVÆ_GNU_MIPS_ABI_FP_SOFT
 = 3,

2157 
	mVÆ_GNU_MIPS_ABI_FP_OLD_64
 = 4,

2159 
	mVÆ_GNU_MIPS_ABI_FP_XX
 = 5,

2161 
	mVÆ_GNU_MIPS_ABI_FP_64
 = 6,

2163 
	mVÆ_GNU_MIPS_ABI_FP_64A
 = 7,

2165 
	mVÆ_GNU_MIPS_ABI_FP_MAX
 = 7

2172 
	#EF_PARISC_TRAPNIL
 0x00010000

	)

2173 
	#EF_PARISC_EXT
 0x00020000

	)

2174 
	#EF_PARISC_LSB
 0x00040000

	)

2175 
	#EF_PARISC_WIDE
 0x00080000

	)

2176 
	#EF_PARISC_NO_KABP
 0x00100000

	)

2178 
	#EF_PARISC_LAZYSWAP
 0x00400000

	)

2179 
	#EF_PARISC_ARCH
 0x0000fff‡

	)

2183 
	#EFA_PARISC_1_0
 0x020b

	)

2184 
	#EFA_PARISC_1_1
 0x0210

	)

2185 
	#EFA_PARISC_2_0
 0x0214

	)

2189 
	#SHN_PARISC_ANSI_COMMON
 0xff00

	)

2191 
	#SHN_PARISC_HUGE_COMMON
 0xff01

	)

2195 
	#SHT_PARISC_EXT
 0x70000000

	)

2196 
	#SHT_PARISC_UNWIND
 0x70000001

	)

2197 
	#SHT_PARISC_DOC
 0x70000002

	)

2201 
	#SHF_PARISC_SHORT
 0x20000000

	)

2202 
	#SHF_PARISC_HUGE
 0x40000000

	)

2203 
	#SHF_PARISC_SBP
 0x80000000

	)

2207 
	#STT_PARISC_MILLICODE
 13

	)

2209 
	#STT_HP_OPAQUE
 (
STT_LOOS
 + 0x1)

	)

2210 
	#STT_HP_STUB
 (
STT_LOOS
 + 0x2)

	)

2214 
	#R_PARISC_NONE
 0

	)

2215 
	#R_PARISC_DIR32
 1

	)

2216 
	#R_PARISC_DIR21L
 2

	)

2217 
	#R_PARISC_DIR17R
 3

	)

2218 
	#R_PARISC_DIR17F
 4

	)

2219 
	#R_PARISC_DIR14R
 6

	)

2220 
	#R_PARISC_PCREL32
 9

	)

2221 
	#R_PARISC_PCREL21L
 10

	)

2222 
	#R_PARISC_PCREL17R
 11

	)

2223 
	#R_PARISC_PCREL17F
 12

	)

2224 
	#R_PARISC_PCREL14R
 14

	)

2225 
	#R_PARISC_DPREL21L
 18

	)

2226 
	#R_PARISC_DPREL14R
 22

	)

2227 
	#R_PARISC_GPREL21L
 26

	)

2228 
	#R_PARISC_GPREL14R
 30

	)

2229 
	#R_PARISC_LTOFF21L
 34

	)

2230 
	#R_PARISC_LTOFF14R
 38

	)

2231 
	#R_PARISC_SECREL32
 41

	)

2232 
	#R_PARISC_SEGBASE
 48

	)

2233 
	#R_PARISC_SEGREL32
 49

	)

2234 
	#R_PARISC_PLTOFF21L
 50

	)

2235 
	#R_PARISC_PLTOFF14R
 54

	)

2236 
	#R_PARISC_LTOFF_FPTR32
 57

	)

2237 
	#R_PARISC_LTOFF_FPTR21L
 58

	)

2238 
	#R_PARISC_LTOFF_FPTR14R
 62

	)

2239 
	#R_PARISC_FPTR64
 64

	)

2240 
	#R_PARISC_PLABEL32
 65

	)

2241 
	#R_PARISC_PLABEL21L
 66

	)

2242 
	#R_PARISC_PLABEL14R
 70

	)

2243 
	#R_PARISC_PCREL64
 72

	)

2244 
	#R_PARISC_PCREL22F
 74

	)

2245 
	#R_PARISC_PCREL14WR
 75

	)

2246 
	#R_PARISC_PCREL14DR
 76

	)

2247 
	#R_PARISC_PCREL16F
 77

	)

2248 
	#R_PARISC_PCREL16WF
 78

	)

2249 
	#R_PARISC_PCREL16DF
 79

	)

2250 
	#R_PARISC_DIR64
 80

	)

2251 
	#R_PARISC_DIR14WR
 83

	)

2252 
	#R_PARISC_DIR14DR
 84

	)

2253 
	#R_PARISC_DIR16F
 85

	)

2254 
	#R_PARISC_DIR16WF
 86

	)

2255 
	#R_PARISC_DIR16DF
 87

	)

2256 
	#R_PARISC_GPREL64
 88

	)

2257 
	#R_PARISC_GPREL14WR
 91

	)

2258 
	#R_PARISC_GPREL14DR
 92

	)

2259 
	#R_PARISC_GPREL16F
 93

	)

2260 
	#R_PARISC_GPREL16WF
 94

	)

2261 
	#R_PARISC_GPREL16DF
 95

	)

2262 
	#R_PARISC_LTOFF64
 96

	)

2263 
	#R_PARISC_LTOFF14WR
 99

	)

2264 
	#R_PARISC_LTOFF14DR
 100

	)

2265 
	#R_PARISC_LTOFF16F
 101

	)

2266 
	#R_PARISC_LTOFF16WF
 102

	)

2267 
	#R_PARISC_LTOFF16DF
 103

	)

2268 
	#R_PARISC_SECREL64
 104

	)

2269 
	#R_PARISC_SEGREL64
 112

	)

2270 
	#R_PARISC_PLTOFF14WR
 115

	)

2271 
	#R_PARISC_PLTOFF14DR
 116

	)

2272 
	#R_PARISC_PLTOFF16F
 117

	)

2273 
	#R_PARISC_PLTOFF16WF
 118

	)

2274 
	#R_PARISC_PLTOFF16DF
 119

	)

2275 
	#R_PARISC_LTOFF_FPTR64
 120

	)

2276 
	#R_PARISC_LTOFF_FPTR14WR
 123

	)

2277 
	#R_PARISC_LTOFF_FPTR14DR
 124

	)

2278 
	#R_PARISC_LTOFF_FPTR16F
 125

	)

2279 
	#R_PARISC_LTOFF_FPTR16WF
 126

	)

2280 
	#R_PARISC_LTOFF_FPTR16DF
 127

	)

2281 
	#R_PARISC_LORESERVE
 128

	)

2282 
	#R_PARISC_COPY
 128

	)

2283 
	#R_PARISC_IPLT
 129

	)

2284 
	#R_PARISC_EPLT
 130

	)

2285 
	#R_PARISC_TPREL32
 153

	)

2286 
	#R_PARISC_TPREL21L
 154

	)

2287 
	#R_PARISC_TPREL14R
 158

	)

2288 
	#R_PARISC_LTOFF_TP21L
 162

	)

2289 
	#R_PARISC_LTOFF_TP14R
 166

	)

2290 
	#R_PARISC_LTOFF_TP14F
 167

	)

2291 
	#R_PARISC_TPREL64
 216

	)

2292 
	#R_PARISC_TPREL14WR
 219

	)

2293 
	#R_PARISC_TPREL14DR
 220

	)

2294 
	#R_PARISC_TPREL16F
 221

	)

2295 
	#R_PARISC_TPREL16WF
 222

	)

2296 
	#R_PARISC_TPREL16DF
 223

	)

2297 
	#R_PARISC_LTOFF_TP64
 224

	)

2298 
	#R_PARISC_LTOFF_TP14WR
 227

	)

2299 
	#R_PARISC_LTOFF_TP14DR
 228

	)

2300 
	#R_PARISC_LTOFF_TP16F
 229

	)

2301 
	#R_PARISC_LTOFF_TP16WF
 230

	)

2302 
	#R_PARISC_LTOFF_TP16DF
 231

	)

2303 
	#R_PARISC_GNU_VTENTRY
 232

	)

2304 
	#R_PARISC_GNU_VTINHERIT
 233

	)

2305 
	#R_PARISC_TLS_GD21L
 234

	)

2306 
	#R_PARISC_TLS_GD14R
 235

	)

2307 
	#R_PARISC_TLS_GDCALL
 236

	)

2308 
	#R_PARISC_TLS_LDM21L
 237

	)

2309 
	#R_PARISC_TLS_LDM14R
 238

	)

2310 
	#R_PARISC_TLS_LDMCALL
 239

	)

2311 
	#R_PARISC_TLS_LDO21L
 240

	)

2312 
	#R_PARISC_TLS_LDO14R
 241

	)

2313 
	#R_PARISC_TLS_DTPMOD32
 242

	)

2314 
	#R_PARISC_TLS_DTPMOD64
 243

	)

2315 
	#R_PARISC_TLS_DTPOFF32
 244

	)

2316 
	#R_PARISC_TLS_DTPOFF64
 245

	)

2317 
	#R_PARISC_TLS_LE21L
 
R_PARISC_TPREL21L


	)

2318 
	#R_PARISC_TLS_LE14R
 
R_PARISC_TPREL14R


	)

2319 
	#R_PARISC_TLS_IE21L
 
R_PARISC_LTOFF_TP21L


	)

2320 
	#R_PARISC_TLS_IE14R
 
R_PARISC_LTOFF_TP14R


	)

2321 
	#R_PARISC_TLS_TPREL32
 
R_PARISC_TPREL32


	)

2322 
	#R_PARISC_TLS_TPREL64
 
R_PARISC_TPREL64


	)

2323 
	#R_PARISC_HIRESERVE
 255

	)

2327 
	#PT_HP_TLS
 (
PT_LOOS
 + 0x0)

	)

2328 
	#PT_HP_CORE_NONE
 (
PT_LOOS
 + 0x1)

	)

2329 
	#PT_HP_CORE_VERSION
 (
PT_LOOS
 + 0x2)

	)

2330 
	#PT_HP_CORE_KERNEL
 (
PT_LOOS
 + 0x3)

	)

2331 
	#PT_HP_CORE_COMM
 (
PT_LOOS
 + 0x4)

	)

2332 
	#PT_HP_CORE_PROC
 (
PT_LOOS
 + 0x5)

	)

2333 
	#PT_HP_CORE_LOADABLE
 (
PT_LOOS
 + 0x6)

	)

2334 
	#PT_HP_CORE_STACK
 (
PT_LOOS
 + 0x7)

	)

2335 
	#PT_HP_CORE_SHM
 (
PT_LOOS
 + 0x8)

	)

2336 
	#PT_HP_CORE_MMF
 (
PT_LOOS
 + 0x9)

	)

2337 
	#PT_HP_PARALLEL
 (
PT_LOOS
 + 0x10)

	)

2338 
	#PT_HP_FASTBIND
 (
PT_LOOS
 + 0x11)

	)

2339 
	#PT_HP_OPT_ANNOT
 (
PT_LOOS
 + 0x12)

	)

2340 
	#PT_HP_HSL_ANNOT
 (
PT_LOOS
 + 0x13)

	)

2341 
	#PT_HP_STACK
 (
PT_LOOS
 + 0x14)

	)

2343 
	#PT_PARISC_ARCHEXT
 0x70000000

	)

2344 
	#PT_PARISC_UNWIND
 0x70000001

	)

2348 
	#PF_PARISC_SBP
 0x08000000

	)

2350 
	#PF_HP_PAGE_SIZE
 0x00100000

	)

2351 
	#PF_HP_FAR_SHARED
 0x00200000

	)

2352 
	#PF_HP_NEAR_SHARED
 0x00400000

	)

2353 
	#PF_HP_CODE
 0x01000000

	)

2354 
	#PF_HP_MODIFY
 0x02000000

	)

2355 
	#PF_HP_LAZYSWAP
 0x04000000

	)

2356 
	#PF_HP_SBP
 0x08000000

	)

2363 
	#EF_ALPHA_32BIT
 1

	)

2364 
	#EF_ALPHA_CANRELAX
 2

	)

2369 
	#SHT_ALPHA_DEBUG
 0x70000001

	)

2370 
	#SHT_ALPHA_REGINFO
 0x70000002

	)

2374 
	#SHF_ALPHA_GPREL
 0x10000000

	)

2377 
	#STO_ALPHA_NOPV
 0x80

	)

2378 
	#STO_ALPHA_STD_GPLOAD
 0x88

	)

2382 
	#R_ALPHA_NONE
 0

	)

2383 
	#R_ALPHA_REFLONG
 1

	)

2384 
	#R_ALPHA_REFQUAD
 2

	)

2385 
	#R_ALPHA_GPREL32
 3

	)

2386 
	#R_ALPHA_LITERAL
 4

	)

2387 
	#R_ALPHA_LITUSE
 5

	)

2388 
	#R_ALPHA_GPDISP
 6

	)

2389 
	#R_ALPHA_BRADDR
 7

	)

2390 
	#R_ALPHA_HINT
 8

	)

2391 
	#R_ALPHA_SREL16
 9

	)

2392 
	#R_ALPHA_SREL32
 10

	)

2393 
	#R_ALPHA_SREL64
 11

	)

2394 
	#R_ALPHA_GPRELHIGH
 17

	)

2395 
	#R_ALPHA_GPRELLOW
 18

	)

2396 
	#R_ALPHA_GPREL16
 19

	)

2397 
	#R_ALPHA_COPY
 24

	)

2398 
	#R_ALPHA_GLOB_DAT
 25

	)

2399 
	#R_ALPHA_JMP_SLOT
 26

	)

2400 
	#R_ALPHA_RELATIVE
 27

	)

2401 
	#R_ALPHA_TLS_GD_HI
 28

	)

2402 
	#R_ALPHA_TLSGD
 29

	)

2403 
	#R_ALPHA_TLS_LDM
 30

	)

2404 
	#R_ALPHA_DTPMOD64
 31

	)

2405 
	#R_ALPHA_GOTDTPREL
 32

	)

2406 
	#R_ALPHA_DTPREL64
 33

	)

2407 
	#R_ALPHA_DTPRELHI
 34

	)

2408 
	#R_ALPHA_DTPRELLO
 35

	)

2409 
	#R_ALPHA_DTPREL16
 36

	)

2410 
	#R_ALPHA_GOTTPREL
 37

	)

2411 
	#R_ALPHA_TPREL64
 38

	)

2412 
	#R_ALPHA_TPRELHI
 39

	)

2413 
	#R_ALPHA_TPRELLO
 40

	)

2414 
	#R_ALPHA_TPREL16
 41

	)

2416 
	#R_ALPHA_NUM
 46

	)

2419 
	#LITUSE_ALPHA_ADDR
 0

	)

2420 
	#LITUSE_ALPHA_BASE
 1

	)

2421 
	#LITUSE_ALPHA_BYTOFF
 2

	)

2422 
	#LITUSE_ALPHA_JSR
 3

	)

2423 
	#LITUSE_ALPHA_TLS_GD
 4

	)

2424 
	#LITUSE_ALPHA_TLS_LDM
 5

	)

2427 
	#DT_ALPHA_PLTRO
 (
DT_LOPROC
 + 0)

	)

2428 
	#DT_ALPHA_NUM
 1

	)

2433 
	#EF_PPC_EMB
 0x80000000

	)

2436 
	#EF_PPC_RELOCATABLE
 0x00010000

	)

2437 
	#EF_PPC_RELOCATABLE_LIB
 0x00008000

	)

2441 
	#R_PPC_NONE
 0

	)

2442 
	#R_PPC_ADDR32
 1

	)

2443 
	#R_PPC_ADDR24
 2

	)

2444 
	#R_PPC_ADDR16
 3

	)

2445 
	#R_PPC_ADDR16_LO
 4

	)

2446 
	#R_PPC_ADDR16_HI
 5

	)

2447 
	#R_PPC_ADDR16_HA
 6

	)

2448 
	#R_PPC_ADDR14
 7

	)

2449 
	#R_PPC_ADDR14_BRTAKEN
 8

	)

2450 
	#R_PPC_ADDR14_BRNTAKEN
 9

	)

2451 
	#R_PPC_REL24
 10

	)

2452 
	#R_PPC_REL14
 11

	)

2453 
	#R_PPC_REL14_BRTAKEN
 12

	)

2454 
	#R_PPC_REL14_BRNTAKEN
 13

	)

2455 
	#R_PPC_GOT16
 14

	)

2456 
	#R_PPC_GOT16_LO
 15

	)

2457 
	#R_PPC_GOT16_HI
 16

	)

2458 
	#R_PPC_GOT16_HA
 17

	)

2459 
	#R_PPC_PLTREL24
 18

	)

2460 
	#R_PPC_COPY
 19

	)

2461 
	#R_PPC_GLOB_DAT
 20

	)

2462 
	#R_PPC_JMP_SLOT
 21

	)

2463 
	#R_PPC_RELATIVE
 22

	)

2464 
	#R_PPC_LOCAL24PC
 23

	)

2465 
	#R_PPC_UADDR32
 24

	)

2466 
	#R_PPC_UADDR16
 25

	)

2467 
	#R_PPC_REL32
 26

	)

2468 
	#R_PPC_PLT32
 27

	)

2469 
	#R_PPC_PLTREL32
 28

	)

2470 
	#R_PPC_PLT16_LO
 29

	)

2471 
	#R_PPC_PLT16_HI
 30

	)

2472 
	#R_PPC_PLT16_HA
 31

	)

2473 
	#R_PPC_SDAREL16
 32

	)

2474 
	#R_PPC_SECTOFF
 33

	)

2475 
	#R_PPC_SECTOFF_LO
 34

	)

2476 
	#R_PPC_SECTOFF_HI
 35

	)

2477 
	#R_PPC_SECTOFF_HA
 36

	)

2480 
	#R_PPC_TLS
 67

	)

2481 
	#R_PPC_DTPMOD32
 68

	)

2482 
	#R_PPC_TPREL16
 69

	)

2483 
	#R_PPC_TPREL16_LO
 70

	)

2484 
	#R_PPC_TPREL16_HI
 71

	)

2485 
	#R_PPC_TPREL16_HA
 72

	)

2486 
	#R_PPC_TPREL32
 73

	)

2487 
	#R_PPC_DTPREL16
 74

	)

2488 
	#R_PPC_DTPREL16_LO
 75

	)

2489 
	#R_PPC_DTPREL16_HI
 76

	)

2490 
	#R_PPC_DTPREL16_HA
 77

	)

2491 
	#R_PPC_DTPREL32
 78

	)

2492 
	#R_PPC_GOT_TLSGD16
 79

	)

2493 
	#R_PPC_GOT_TLSGD16_LO
 80

	)

2494 
	#R_PPC_GOT_TLSGD16_HI
 81

	)

2495 
	#R_PPC_GOT_TLSGD16_HA
 82

	)

2496 
	#R_PPC_GOT_TLSLD16
 83

	)

2497 
	#R_PPC_GOT_TLSLD16_LO
 84

	)

2498 
	#R_PPC_GOT_TLSLD16_HI
 85

	)

2499 
	#R_PPC_GOT_TLSLD16_HA
 86

	)

2500 
	#R_PPC_GOT_TPREL16
 87

	)

2501 
	#R_PPC_GOT_TPREL16_LO
 88

	)

2502 
	#R_PPC_GOT_TPREL16_HI
 89

	)

2503 
	#R_PPC_GOT_TPREL16_HA
 90

	)

2504 
	#R_PPC_GOT_DTPREL16
 91

	)

2505 
	#R_PPC_GOT_DTPREL16_LO
 92

	)

2506 
	#R_PPC_GOT_DTPREL16_HI
 93

	)

2507 
	#R_PPC_GOT_DTPREL16_HA
 94

	)

2508 
	#R_PPC_TLSGD
 95

	)

2509 
	#R_PPC_TLSLD
 96

	)

2513 
	#R_PPC_EMB_NADDR32
 101

	)

2514 
	#R_PPC_EMB_NADDR16
 102

	)

2515 
	#R_PPC_EMB_NADDR16_LO
 103

	)

2516 
	#R_PPC_EMB_NADDR16_HI
 104

	)

2517 
	#R_PPC_EMB_NADDR16_HA
 105

	)

2518 
	#R_PPC_EMB_SDAI16
 106

	)

2519 
	#R_PPC_EMB_SDA2I16
 107

	)

2520 
	#R_PPC_EMB_SDA2REL
 108

	)

2521 
	#R_PPC_EMB_SDA21
 109

	)

2522 
	#R_PPC_EMB_MRKREF
 110

	)

2523 
	#R_PPC_EMB_RELSEC16
 111

	)

2524 
	#R_PPC_EMB_RELST_LO
 112

	)

2525 
	#R_PPC_EMB_RELST_HI
 113

	)

2526 
	#R_PPC_EMB_RELST_HA
 114

	)

2527 
	#R_PPC_EMB_BIT_FLD
 115

	)

2528 
	#R_PPC_EMB_RELSDA
 116

	)

2531 
	#R_PPC_DIAB_SDA21_LO
 180

	)

2532 
	#R_PPC_DIAB_SDA21_HI
 181

	)

2533 
	#R_PPC_DIAB_SDA21_HA
 182

	)

2534 
	#R_PPC_DIAB_RELSDA_LO
 183

	)

2535 
	#R_PPC_DIAB_RELSDA_HI
 184

	)

2536 
	#R_PPC_DIAB_RELSDA_HA
 185

	)

2539 
	#R_PPC_IRELATIVE
 248

	)

2542 
	#R_PPC_REL16
 249

	)

2543 
	#R_PPC_REL16_LO
 250

	)

2544 
	#R_PPC_REL16_HI
 251

	)

2545 
	#R_PPC_REL16_HA
 252

	)

2549 
	#R_PPC_TOC16
 255

	)

2552 
	#DT_PPC_GOT
 (
DT_LOPROC
 + 0)

	)

2553 
	#DT_PPC_OPT
 (
DT_LOPROC
 + 1)

	)

2554 
	#DT_PPC_NUM
 2

	)

2557 
	#PPC_OPT_TLS
 1

	)

2560 
	#R_PPC64_NONE
 
R_PPC_NONE


	)

2561 
	#R_PPC64_ADDR32
 
R_PPC_ADDR32


	)

2562 
	#R_PPC64_ADDR24
 
R_PPC_ADDR24


	)

2563 
	#R_PPC64_ADDR16
 
R_PPC_ADDR16


	)

2564 
	#R_PPC64_ADDR16_LO
 
R_PPC_ADDR16_LO


	)

2565 
	#R_PPC64_ADDR16_HI
 
R_PPC_ADDR16_HI


	)

2566 
	#R_PPC64_ADDR16_HA
 
R_PPC_ADDR16_HA


	)

2567 
	#R_PPC64_ADDR14
 
R_PPC_ADDR14


	)

2568 
	#R_PPC64_ADDR14_BRTAKEN
 
R_PPC_ADDR14_BRTAKEN


	)

2569 
	#R_PPC64_ADDR14_BRNTAKEN
 
R_PPC_ADDR14_BRNTAKEN


	)

2570 
	#R_PPC64_REL24
 
R_PPC_REL24


	)

2571 
	#R_PPC64_REL14
 
R_PPC_REL14


	)

2572 
	#R_PPC64_REL14_BRTAKEN
 
R_PPC_REL14_BRTAKEN


	)

2573 
	#R_PPC64_REL14_BRNTAKEN
 
R_PPC_REL14_BRNTAKEN


	)

2574 
	#R_PPC64_GOT16
 
R_PPC_GOT16


	)

2575 
	#R_PPC64_GOT16_LO
 
R_PPC_GOT16_LO


	)

2576 
	#R_PPC64_GOT16_HI
 
R_PPC_GOT16_HI


	)

2577 
	#R_PPC64_GOT16_HA
 
R_PPC_GOT16_HA


	)

2579 
	#R_PPC64_COPY
 
R_PPC_COPY


	)

2580 
	#R_PPC64_GLOB_DAT
 
R_PPC_GLOB_DAT


	)

2581 
	#R_PPC64_JMP_SLOT
 
R_PPC_JMP_SLOT


	)

2582 
	#R_PPC64_RELATIVE
 
R_PPC_RELATIVE


	)

2584 
	#R_PPC64_UADDR32
 
R_PPC_UADDR32


	)

2585 
	#R_PPC64_UADDR16
 
R_PPC_UADDR16


	)

2586 
	#R_PPC64_REL32
 
R_PPC_REL32


	)

2587 
	#R_PPC64_PLT32
 
R_PPC_PLT32


	)

2588 
	#R_PPC64_PLTREL32
 
R_PPC_PLTREL32


	)

2589 
	#R_PPC64_PLT16_LO
 
R_PPC_PLT16_LO


	)

2590 
	#R_PPC64_PLT16_HI
 
R_PPC_PLT16_HI


	)

2591 
	#R_PPC64_PLT16_HA
 
R_PPC_PLT16_HA


	)

2593 
	#R_PPC64_SECTOFF
 
R_PPC_SECTOFF


	)

2594 
	#R_PPC64_SECTOFF_LO
 
R_PPC_SECTOFF_LO


	)

2595 
	#R_PPC64_SECTOFF_HI
 
R_PPC_SECTOFF_HI


	)

2596 
	#R_PPC64_SECTOFF_HA
 
R_PPC_SECTOFF_HA


	)

2597 
	#R_PPC64_ADDR30
 37

	)

2598 
	#R_PPC64_ADDR64
 38

	)

2599 
	#R_PPC64_ADDR16_HIGHER
 39

	)

2600 
	#R_PPC64_ADDR16_HIGHERA
 40

	)

2601 
	#R_PPC64_ADDR16_HIGHEST
 41

	)

2602 
	#R_PPC64_ADDR16_HIGHESTA
 42

	)

2603 
	#R_PPC64_UADDR64
 43

	)

2604 
	#R_PPC64_REL64
 44

	)

2605 
	#R_PPC64_PLT64
 45

	)

2606 
	#R_PPC64_PLTREL64
 46

	)

2607 
	#R_PPC64_TOC16
 47

	)

2608 
	#R_PPC64_TOC16_LO
 48

	)

2609 
	#R_PPC64_TOC16_HI
 49

	)

2610 
	#R_PPC64_TOC16_HA
 50

	)

2611 
	#R_PPC64_TOC
 51

	)

2612 
	#R_PPC64_PLTGOT16
 52

	)

2613 
	#R_PPC64_PLTGOT16_LO
 53

	)

2614 
	#R_PPC64_PLTGOT16_HI
 54

	)

2615 
	#R_PPC64_PLTGOT16_HA
 55

	)

2617 
	#R_PPC64_ADDR16_DS
 56

	)

2618 
	#R_PPC64_ADDR16_LO_DS
 57

	)

2619 
	#R_PPC64_GOT16_DS
 58

	)

2620 
	#R_PPC64_GOT16_LO_DS
 59

	)

2621 
	#R_PPC64_PLT16_LO_DS
 60

	)

2622 
	#R_PPC64_SECTOFF_DS
 61

	)

2623 
	#R_PPC64_SECTOFF_LO_DS
 62

	)

2624 
	#R_PPC64_TOC16_DS
 63

	)

2625 
	#R_PPC64_TOC16_LO_DS
 64

	)

2626 
	#R_PPC64_PLTGOT16_DS
 65

	)

2627 
	#R_PPC64_PLTGOT16_LO_DS
 66

	)

2630 
	#R_PPC64_TLS
 67

	)

2631 
	#R_PPC64_DTPMOD64
 68

	)

2632 
	#R_PPC64_TPREL16
 69

	)

2633 
	#R_PPC64_TPREL16_LO
 70

	)

2634 
	#R_PPC64_TPREL16_HI
 71

	)

2635 
	#R_PPC64_TPREL16_HA
 72

	)

2636 
	#R_PPC64_TPREL64
 73

	)

2637 
	#R_PPC64_DTPREL16
 74

	)

2638 
	#R_PPC64_DTPREL16_LO
 75

	)

2639 
	#R_PPC64_DTPREL16_HI
 76

	)

2640 
	#R_PPC64_DTPREL16_HA
 77

	)

2641 
	#R_PPC64_DTPREL64
 78

	)

2642 
	#R_PPC64_GOT_TLSGD16
 79

	)

2643 
	#R_PPC64_GOT_TLSGD16_LO
 80

	)

2644 
	#R_PPC64_GOT_TLSGD16_HI
 81

	)

2645 
	#R_PPC64_GOT_TLSGD16_HA
 82

	)

2646 
	#R_PPC64_GOT_TLSLD16
 83

	)

2647 
	#R_PPC64_GOT_TLSLD16_LO
 84

	)

2648 
	#R_PPC64_GOT_TLSLD16_HI
 85

	)

2649 
	#R_PPC64_GOT_TLSLD16_HA
 86

	)

2650 
	#R_PPC64_GOT_TPREL16_DS
 87

	)

2651 
	#R_PPC64_GOT_TPREL16_LO_DS
 88

	)

2652 
	#R_PPC64_GOT_TPREL16_HI
 89

	)

2653 
	#R_PPC64_GOT_TPREL16_HA
 90

	)

2654 
	#R_PPC64_GOT_DTPREL16_DS
 91

	)

2655 
	#R_PPC64_GOT_DTPREL16_LO_DS
 92

	)

2656 
	#R_PPC64_GOT_DTPREL16_HI
 93

	)

2657 
	#R_PPC64_GOT_DTPREL16_HA
 94

	)

2658 
	#R_PPC64_TPREL16_DS
 95

	)

2659 
	#R_PPC64_TPREL16_LO_DS
 96

	)

2660 
	#R_PPC64_TPREL16_HIGHER
 97

	)

2661 
	#R_PPC64_TPREL16_HIGHERA
 98

	)

2662 
	#R_PPC64_TPREL16_HIGHEST
 99

	)

2663 
	#R_PPC64_TPREL16_HIGHESTA
 100

	)

2664 
	#R_PPC64_DTPREL16_DS
 101

	)

2665 
	#R_PPC64_DTPREL16_LO_DS
 102

	)

2666 
	#R_PPC64_DTPREL16_HIGHER
 103

	)

2667 
	#R_PPC64_DTPREL16_HIGHERA
 104

	)

2668 
	#R_PPC64_DTPREL16_HIGHEST
 105

	)

2669 
	#R_PPC64_DTPREL16_HIGHESTA
 106

	)

2670 
	#R_PPC64_TLSGD
 107

	)

2671 
	#R_PPC64_TLSLD
 108

	)

2672 
	#R_PPC64_TOCSAVE
 109

	)

2675 
	#R_PPC64_ADDR16_HIGH
 110

	)

2676 
	#R_PPC64_ADDR16_HIGHA
 111

	)

2677 
	#R_PPC64_TPREL16_HIGH
 112

	)

2678 
	#R_PPC64_TPREL16_HIGHA
 113

	)

2679 
	#R_PPC64_DTPREL16_HIGH
 114

	)

2680 
	#R_PPC64_DTPREL16_HIGHA
 115

	)

2683 
	#R_PPC64_JMP_IREL
 247

	)

2684 
	#R_PPC64_IRELATIVE
 248

	)

2685 
	#R_PPC64_REL16
 249

	)

2686 
	#R_PPC64_REL16_LO
 250

	)

2687 
	#R_PPC64_REL16_HI
 251

	)

2688 
	#R_PPC64_REL16_HA
 252

	)

2694 
	#EF_PPC64_ABI
 3

	)

2697 
	#DT_PPC64_GLINK
 (
DT_LOPROC
 + 0)

	)

2698 
	#DT_PPC64_OPD
 (
DT_LOPROC
 + 1)

	)

2699 
	#DT_PPC64_OPDSZ
 (
DT_LOPROC
 + 2)

	)

2700 
	#DT_PPC64_OPT
 (
DT_LOPROC
 + 3)

	)

2701 
	#DT_PPC64_NUM
 4

	)

2704 
	#PPC64_OPT_TLS
 1

	)

2705 
	#PPC64_OPT_MULTI_TOC
 2

	)

2706 
	#PPC64_OPT_LOCALENTRY
 4

	)

2709 
	#STO_PPC64_LOCAL_BIT
 5

	)

2710 
	#STO_PPC64_LOCAL_MASK
 (7 << 
STO_PPC64_LOCAL_BIT
)

	)

2711 
	#PPC64_LOCAL_ENTRY_OFFSET
(
Ÿhî
) \

2712 (((1 << (((
Ÿhî
Ë& 
STO_PPC64_LOCAL_MASK
Ë>> 
STO_PPC64_LOCAL_BIT
)Ë>> 2Ë<< 2)

	)

2718 
	#EF_ARM_RELEXEC
 0x01

	)

2719 
	#EF_ARM_HASENTRY
 0x02

	)

2720 
	#EF_ARM_INTERWORK
 0x04

	)

2721 
	#EF_ARM_APCS_26
 0x08

	)

2722 
	#EF_ARM_APCS_FLOAT
 0x10

	)

2723 
	#EF_ARM_PIC
 0x20

	)

2724 
	#EF_ARM_ALIGN8
 0x40

	)

2725 
	#EF_ARM_NEW_ABI
 0x80

	)

2726 
	#EF_ARM_OLD_ABI
 0x100

	)

2727 
	#EF_ARM_SOFT_FLOAT
 0x200

	)

2728 
	#EF_ARM_VFP_FLOAT
 0x400

	)

2729 
	#EF_ARM_MAVERICK_FLOAT
 0x800

	)

2731 
	#EF_ARM_ABI_FLOAT_SOFT
 0x200

	)

2732 
	#EF_ARM_ABI_FLOAT_HARD
 0x400

	)

2737 
	#EF_ARM_SYMSARESORTED
 0x04

	)

2738 
	#EF_ARM_DYNSYMSUSESEGIDX
 0x08

	)

2739 
	#EF_ARM_MAPSYMSFIRST
 0x10

	)

2740 
	#EF_ARM_EABIMASK
 0XFF000000

	)

2743 
	#EF_ARM_BE8
 0x00800000

	)

2744 
	#EF_ARM_LE8
 0x00400000

	)

2746 
	#EF_ARM_EABI_VERSION
(
Êags
Ë((ÊagsË& 
EF_ARM_EABIMASK
)

	)

2747 
	#EF_ARM_EABI_UNKNOWN
 0x00000000

	)

2748 
	#EF_ARM_EABI_VER1
 0x01000000

	)

2749 
	#EF_ARM_EABI_VER2
 0x02000000

	)

2750 
	#EF_ARM_EABI_VER3
 0x03000000

	)

2751 
	#EF_ARM_EABI_VER4
 0x04000000

	)

2752 
	#EF_ARM_EABI_VER5
 0x05000000

	)

2755 
	#STT_ARM_TFUNC
 
STT_LOPROC


	)

2756 
	#STT_ARM_16BIT
 
STT_HIPROC


	)

2759 
	#SHF_ARM_ENTRYSECT
 0x10000000

	)

2760 
	#SHF_ARM_COMDEF
 0x80000000

	)

2764 
	#PF_ARM_SB
 0x10000000

	)

2766 
	#PF_ARM_PI
 0x20000000

	)

2767 
	#PF_ARM_ABS
 0x40000000

	)

2770 
	#PT_ARM_EXIDX
 (
PT_LOPROC
 + 1Ë

	)

2773 
	#SHT_ARM_EXIDX
 (
SHT_LOPROC
 + 1Ë

	)

2774 
	#SHT_ARM_PREEMPTMAP
 (
SHT_LOPROC
 + 2Ë

	)

2775 
	#SHT_ARM_ATTRIBUTES
 (
SHT_LOPROC
 + 3Ë

	)

2780 
	#R_AARCH64_NONE
 0

	)

2783 
	#R_AARCH64_P32_ABS32
 1

	)

2784 
	#R_AARCH64_P32_COPY
 180

	)

2785 
	#R_AARCH64_P32_GLOB_DAT
 181

	)

2786 
	#R_AARCH64_P32_JUMP_SLOT
 182

	)

2787 
	#R_AARCH64_P32_RELATIVE
 183

	)

2788 
	#R_AARCH64_P32_TLS_DTPMOD
 184

	)

2789 
	#R_AARCH64_P32_TLS_DTPREL
 185

	)

2790 
	#R_AARCH64_P32_TLS_TPREL
 186

	)

2791 
	#R_AARCH64_P32_TLSDESC
 187

	)

2792 
	#R_AARCH64_P32_IRELATIVE
 188

	)

2795 
	#R_AARCH64_ABS64
 257

	)

2796 
	#R_AARCH64_ABS32
 258

	)

2797 
	#R_AARCH64_ABS16
 259

	)

2798 
	#R_AARCH64_PREL64
 260

	)

2799 
	#R_AARCH64_PREL32
 261

	)

2800 
	#R_AARCH64_PREL16
 262

	)

2801 
	#R_AARCH64_MOVW_UABS_G0
 263

	)

2802 
	#R_AARCH64_MOVW_UABS_G0_NC
 264

	)

2803 
	#R_AARCH64_MOVW_UABS_G1
 265

	)

2804 
	#R_AARCH64_MOVW_UABS_G1_NC
 266

	)

2805 
	#R_AARCH64_MOVW_UABS_G2
 267

	)

2806 
	#R_AARCH64_MOVW_UABS_G2_NC
 268

	)

2807 
	#R_AARCH64_MOVW_UABS_G3
 269

	)

2808 
	#R_AARCH64_MOVW_SABS_G0
 270

	)

2809 
	#R_AARCH64_MOVW_SABS_G1
 271

	)

2810 
	#R_AARCH64_MOVW_SABS_G2
 272

	)

2811 
	#R_AARCH64_LD_PREL_LO19
 273

	)

2812 
	#R_AARCH64_ADR_PREL_LO21
 274

	)

2813 
	#R_AARCH64_ADR_PREL_PG_HI21
 275

	)

2814 
	#R_AARCH64_ADR_PREL_PG_HI21_NC
 276

	)

2815 
	#R_AARCH64_ADD_ABS_LO12_NC
 277

	)

2816 
	#R_AARCH64_LDST8_ABS_LO12_NC
 278

	)

2817 
	#R_AARCH64_TSTBR14
 279

	)

2818 
	#R_AARCH64_CONDBR19
 280

	)

2819 
	#R_AARCH64_JUMP26
 282

	)

2820 
	#R_AARCH64_CALL26
 283

	)

2821 
	#R_AARCH64_LDST16_ABS_LO12_NC
 284

	)

2822 
	#R_AARCH64_LDST32_ABS_LO12_NC
 285

	)

2823 
	#R_AARCH64_LDST64_ABS_LO12_NC
 286

	)

2824 
	#R_AARCH64_MOVW_PREL_G0
 287

	)

2825 
	#R_AARCH64_MOVW_PREL_G0_NC
 288

	)

2826 
	#R_AARCH64_MOVW_PREL_G1
 289

	)

2827 
	#R_AARCH64_MOVW_PREL_G1_NC
 290

	)

2828 
	#R_AARCH64_MOVW_PREL_G2
 291

	)

2829 
	#R_AARCH64_MOVW_PREL_G2_NC
 292

	)

2830 
	#R_AARCH64_MOVW_PREL_G3
 293

	)

2831 
	#R_AARCH64_LDST128_ABS_LO12_NC
 299

	)

2832 
	#R_AARCH64_MOVW_GOTOFF_G0
 300

	)

2833 
	#R_AARCH64_MOVW_GOTOFF_G0_NC
 301

	)

2834 
	#R_AARCH64_MOVW_GOTOFF_G1
 302

	)

2835 
	#R_AARCH64_MOVW_GOTOFF_G1_NC
 303

	)

2836 
	#R_AARCH64_MOVW_GOTOFF_G2
 304

	)

2837 
	#R_AARCH64_MOVW_GOTOFF_G2_NC
 305

	)

2838 
	#R_AARCH64_MOVW_GOTOFF_G3
 306

	)

2839 
	#R_AARCH64_GOTREL64
 307

	)

2840 
	#R_AARCH64_GOTREL32
 308

	)

2841 
	#R_AARCH64_GOT_LD_PREL19
 309

	)

2842 
	#R_AARCH64_LD64_GOTOFF_LO15
 310

	)

2843 
	#R_AARCH64_ADR_GOT_PAGE
 311

	)

2844 
	#R_AARCH64_LD64_GOT_LO12_NC
 312

	)

2845 
	#R_AARCH64_LD64_GOTPAGE_LO15
 313

	)

2846 
	#R_AARCH64_TLSGD_ADR_PREL21
 512

	)

2847 
	#R_AARCH64_TLSGD_ADR_PAGE21
 513

	)

2848 
	#R_AARCH64_TLSGD_ADD_LO12_NC
 514

	)

2849 
	#R_AARCH64_TLSGD_MOVW_G1
 515

	)

2850 
	#R_AARCH64_TLSGD_MOVW_G0_NC
 516

	)

2851 
	#R_AARCH64_TLSLD_ADR_PREL21
 517

	)

2852 
	#R_AARCH64_TLSLD_ADR_PAGE21
 518

	)

2853 
	#R_AARCH64_TLSLD_ADD_LO12_NC
 519

	)

2854 
	#R_AARCH64_TLSLD_MOVW_G1
 520

	)

2855 
	#R_AARCH64_TLSLD_MOVW_G0_NC
 521

	)

2856 
	#R_AARCH64_TLSLD_LD_PREL19
 522

	)

2857 
	#R_AARCH64_TLSLD_MOVW_DTPREL_G2
 523

	)

2858 
	#R_AARCH64_TLSLD_MOVW_DTPREL_G1
 524

	)

2859 
	#R_AARCH64_TLSLD_MOVW_DTPREL_G1_NC
 525

	)

2860 
	#R_AARCH64_TLSLD_MOVW_DTPREL_G0
 526

	)

2861 
	#R_AARCH64_TLSLD_MOVW_DTPREL_G0_NC
 527

	)

2862 
	#R_AARCH64_TLSLD_ADD_DTPREL_HI12
 528

	)

2863 
	#R_AARCH64_TLSLD_ADD_DTPREL_LO12
 529

	)

2864 
	#R_AARCH64_TLSLD_ADD_DTPREL_LO12_NC
 530

	)

2865 
	#R_AARCH64_TLSLD_LDST8_DTPREL_LO12
 531

	)

2866 
	#R_AARCH64_TLSLD_LDST8_DTPREL_LO12_NC
 532

	)

2867 
	#R_AARCH64_TLSLD_LDST16_DTPREL_LO12
 533

	)

2868 
	#R_AARCH64_TLSLD_LDST16_DTPREL_LO12_NC
 534

	)

2869 
	#R_AARCH64_TLSLD_LDST32_DTPREL_LO12
 535

	)

2870 
	#R_AARCH64_TLSLD_LDST32_DTPREL_LO12_NC
 536

	)

2871 
	#R_AARCH64_TLSLD_LDST64_DTPREL_LO12
 537

	)

2872 
	#R_AARCH64_TLSLD_LDST64_DTPREL_LO12_NC
 538

	)

2873 
	#R_AARCH64_TLSIE_MOVW_GOTTPREL_G1
 539

	)

2874 
	#R_AARCH64_TLSIE_MOVW_GOTTPREL_G0_NC
 540

	)

2875 
	#R_AARCH64_TLSIE_ADR_GOTTPREL_PAGE21
 541

	)

2876 
	#R_AARCH64_TLSIE_LD64_GOTTPREL_LO12_NC
 542

	)

2877 
	#R_AARCH64_TLSIE_LD_GOTTPREL_PREL19
 543

	)

2878 
	#R_AARCH64_TLSLE_MOVW_TPREL_G2
 544

	)

2879 
	#R_AARCH64_TLSLE_MOVW_TPREL_G1
 545

	)

2880 
	#R_AARCH64_TLSLE_MOVW_TPREL_G1_NC
 546

	)

2881 
	#R_AARCH64_TLSLE_MOVW_TPREL_G0
 547

	)

2882 
	#R_AARCH64_TLSLE_MOVW_TPREL_G0_NC
 548

	)

2883 
	#R_AARCH64_TLSLE_ADD_TPREL_HI12
 549

	)

2884 
	#R_AARCH64_TLSLE_ADD_TPREL_LO12
 550

	)

2885 
	#R_AARCH64_TLSLE_ADD_TPREL_LO12_NC
 551

	)

2886 
	#R_AARCH64_TLSLE_LDST8_TPREL_LO12
 552

	)

2887 
	#R_AARCH64_TLSLE_LDST8_TPREL_LO12_NC
 553

	)

2888 
	#R_AARCH64_TLSLE_LDST16_TPREL_LO12
 554

	)

2889 
	#R_AARCH64_TLSLE_LDST16_TPREL_LO12_NC
 555

	)

2890 
	#R_AARCH64_TLSLE_LDST32_TPREL_LO12
 556

	)

2891 
	#R_AARCH64_TLSLE_LDST32_TPREL_LO12_NC
 557

	)

2892 
	#R_AARCH64_TLSLE_LDST64_TPREL_LO12
 558

	)

2893 
	#R_AARCH64_TLSLE_LDST64_TPREL_LO12_NC
 559

	)

2894 
	#R_AARCH64_TLSDESC_LD_PREL19
 560

	)

2895 
	#R_AARCH64_TLSDESC_ADR_PREL21
 561

	)

2896 
	#R_AARCH64_TLSDESC_ADR_PAGE21
 562

	)

2897 
	#R_AARCH64_TLSDESC_LD64_LO12
 563

	)

2898 
	#R_AARCH64_TLSDESC_ADD_LO12
 564

	)

2899 
	#R_AARCH64_TLSDESC_OFF_G1
 565

	)

2900 
	#R_AARCH64_TLSDESC_OFF_G0_NC
 566

	)

2901 
	#R_AARCH64_TLSDESC_LDR
 567

	)

2902 
	#R_AARCH64_TLSDESC_ADD
 568

	)

2903 
	#R_AARCH64_TLSDESC_CALL
 569

	)

2904 
	#R_AARCH64_TLSLE_LDST128_TPREL_LO12
 570

	)

2905 
	#R_AARCH64_TLSLE_LDST128_TPREL_LO12_NC
 571

	)

2906 
	#R_AARCH64_TLSLD_LDST128_DTPREL_LO12
 572

	)

2907 
	#R_AARCH64_TLSLD_LDST128_DTPREL_LO12_NC
 573

	)

2908 
	#R_AARCH64_COPY
 1024

	)

2909 
	#R_AARCH64_GLOB_DAT
 1025

	)

2910 
	#R_AARCH64_JUMP_SLOT
 1026

	)

2911 
	#R_AARCH64_RELATIVE
 1027

	)

2912 
	#R_AARCH64_TLS_DTPMOD
 1028

	)

2913 
	#R_AARCH64_TLS_DTPREL
 1029

	)

2914 
	#R_AARCH64_TLS_TPREL
 1030

	)

2915 
	#R_AARCH64_TLSDESC
 1031

	)

2916 
	#R_AARCH64_IRELATIVE
 1032

	)

2919 
	#PT_AARCH64_MEMTAG_MTE
 (
PT_LOPROC
 + 2)

	)

2922 
	#DT_AARCH64_BTI_PLT
 (
DT_LOPROC
 + 1)

	)

2923 
	#DT_AARCH64_PAC_PLT
 (
DT_LOPROC
 + 3)

	)

2924 
	#DT_AARCH64_VARIANT_PCS
 (
DT_LOPROC
 + 5)

	)

2925 
	#DT_AARCH64_NUM
 6

	)

2928 
	#STO_AARCH64_VARIANT_PCS
 0x80

	)

2932 
	#R_ARM_NONE
 0

	)

2933 
	#R_ARM_PC24
 1

	)

2935 
	#R_ARM_ABS32
 2

	)

2936 
	#R_ARM_REL32
 3

	)

2937 
	#R_ARM_PC13
 4

	)

2938 
	#R_ARM_ABS16
 5

	)

2939 
	#R_ARM_ABS12
 6

	)

2940 
	#R_ARM_THM_ABS5
 7

	)

2941 
	#R_ARM_ABS8
 8

	)

2942 
	#R_ARM_SBREL32
 9

	)

2943 
	#R_ARM_THM_PC22
 10

	)

2944 
	#R_ARM_THM_PC8
 11

	)

2946 
	#R_ARM_AMP_VCALL9
 12

	)

2947 
	#R_ARM_SWI24
 13

	)

2948 
	#R_ARM_TLS_DESC
 13

	)

2949 
	#R_ARM_THM_SWI8
 14

	)

2950 
	#R_ARM_XPC25
 15

	)

2951 
	#R_ARM_THM_XPC22
 16

	)

2952 
	#R_ARM_TLS_DTPMOD32
 17

	)

2953 
	#R_ARM_TLS_DTPOFF32
 18

	)

2954 
	#R_ARM_TLS_TPOFF32
 19

	)

2955 
	#R_ARM_COPY
 20

	)

2956 
	#R_ARM_GLOB_DAT
 21

	)

2957 
	#R_ARM_JUMP_SLOT
 22

	)

2958 
	#R_ARM_RELATIVE
 23

	)

2959 
	#R_ARM_GOTOFF
 24

	)

2960 
	#R_ARM_GOTPC
 25

	)

2961 
	#R_ARM_GOT32
 26

	)

2962 
	#R_ARM_PLT32
 27

	)

2963 
	#R_ARM_CALL
 28

	)

2964 
	#R_ARM_JUMP24
 29

	)

2966 
	#R_ARM_THM_JUMP24
 30

	)

2967 
	#R_ARM_BASE_ABS
 31

	)

2968 
	#R_ARM_ALU_PCREL_7_0
 32

	)

2969 
	#R_ARM_ALU_PCREL_15_8
 33

	)

2970 
	#R_ARM_ALU_PCREL_23_15
 34

	)

2971 
	#R_ARM_LDR_SBREL_11_0
 35

	)

2972 
	#R_ARM_ALU_SBREL_19_12
 36

	)

2973 
	#R_ARM_ALU_SBREL_27_20
 37

	)

2974 
	#R_ARM_TARGET1
 38

	)

2975 
	#R_ARM_SBREL31
 39

	)

2976 
	#R_ARM_V4BX
 40

	)

2977 
	#R_ARM_TARGET2
 41

	)

2978 
	#R_ARM_PREL31
 42

	)

2979 
	#R_ARM_MOVW_ABS_NC
 43

	)

2980 
	#R_ARM_MOVT_ABS
 44

	)

2981 
	#R_ARM_MOVW_PREL_NC
 45

	)

2982 
	#R_ARM_MOVT_PREL
 46

	)

2983 
	#R_ARM_THM_MOVW_ABS_NC
 47

	)

2984 
	#R_ARM_THM_MOVT_ABS
 48

	)

2986 
	#R_ARM_THM_MOVW_PREL_NC
 49

	)

2988 
	#R_ARM_THM_MOVT_PREL
 50

	)

2990 
	#R_ARM_THM_JUMP19
 51

	)

2992 
	#R_ARM_THM_JUMP6
 52

	)

2994 
	#R_ARM_THM_ALU_PREL_11_0
 53

	)

2996 
	#R_ARM_THM_PC12
 54

	)

2998 
	#R_ARM_ABS32_NOI
 55

	)

2999 
	#R_ARM_REL32_NOI
 56

	)

3000 
	#R_ARM_ALU_PC_G0_NC
 57

	)

3001 
	#R_ARM_ALU_PC_G0
 58

	)

3002 
	#R_ARM_ALU_PC_G1_NC
 59

	)

3003 
	#R_ARM_ALU_PC_G1
 60

	)

3004 
	#R_ARM_ALU_PC_G2
 61

	)

3005 
	#R_ARM_LDR_PC_G1
 62

	)

3006 
	#R_ARM_LDR_PC_G2
 63

	)

3007 
	#R_ARM_LDRS_PC_G0
 64

	)

3009 
	#R_ARM_LDRS_PC_G1
 65

	)

3011 
	#R_ARM_LDRS_PC_G2
 66

	)

3013 
	#R_ARM_LDC_PC_G0
 67

	)

3014 
	#R_ARM_LDC_PC_G1
 68

	)

3015 
	#R_ARM_LDC_PC_G2
 69

	)

3016 
	#R_ARM_ALU_SB_G0_NC
 70

	)

3017 
	#R_ARM_ALU_SB_G0
 71

	)

3018 
	#R_ARM_ALU_SB_G1_NC
 72

	)

3019 
	#R_ARM_ALU_SB_G1
 73

	)

3020 
	#R_ARM_ALU_SB_G2
 74

	)

3021 
	#R_ARM_LDR_SB_G0
 75

	)

3023 
	#R_ARM_LDR_SB_G1
 76

	)

3025 
	#R_ARM_LDR_SB_G2
 77

	)

3027 
	#R_ARM_LDRS_SB_G0
 78

	)

3029 
	#R_ARM_LDRS_SB_G1
 79

	)

3031 
	#R_ARM_LDRS_SB_G2
 80

	)

3033 
	#R_ARM_LDC_SB_G0
 81

	)

3034 
	#R_ARM_LDC_SB_G1
 82

	)

3035 
	#R_ARM_LDC_SB_G2
 83

	)

3036 
	#R_ARM_MOVW_BREL_NC
 84

	)

3038 
	#R_ARM_MOVT_BREL
 85

	)

3040 
	#R_ARM_MOVW_BREL
 86

	)

3042 
	#R_ARM_THM_MOVW_BREL_NC
 87

	)

3044 
	#R_ARM_THM_MOVT_BREL
 88

	)

3046 
	#R_ARM_THM_MOVW_BREL
 89

	)

3048 
	#R_ARM_TLS_GOTDESC
 90

	)

3049 
	#R_ARM_TLS_CALL
 91

	)

3050 
	#R_ARM_TLS_DESCSEQ
 92

	)

3051 
	#R_ARM_THM_TLS_CALL
 93

	)

3052 
	#R_ARM_PLT32_ABS
 94

	)

3053 
	#R_ARM_GOT_ABS
 95

	)

3054 
	#R_ARM_GOT_PREL
 96

	)

3055 
	#R_ARM_GOT_BREL12
 97

	)

3057 
	#R_ARM_GOTOFF12
 98

	)

3059 
	#R_ARM_GOTRELAX
 99

	)

3060 
	#R_ARM_GNU_VTENTRY
 100

	)

3061 
	#R_ARM_GNU_VTINHERIT
 101

	)

3062 
	#R_ARM_THM_PC11
 102

	)

3063 
	#R_ARM_THM_PC9
 103

	)

3065 
	#R_ARM_TLS_GD32
 104

	)

3067 
	#R_ARM_TLS_LDM32
 105

	)

3069 
	#R_ARM_TLS_LDO32
 106

	)

3071 
	#R_ARM_TLS_IE32
 107

	)

3073 
	#R_ARM_TLS_LE32
 108

	)

3075 
	#R_ARM_TLS_LDO12
 109

	)

3077 
	#R_ARM_TLS_LE12
 110

	)

3079 
	#R_ARM_TLS_IE12GP
 111

	)

3081 
	#R_ARM_ME_TOO
 128

	)

3082 
	#R_ARM_THM_TLS_DESCSEQ
 129

	)

3083 
	#R_ARM_THM_TLS_DESCSEQ16
 129

	)

3084 
	#R_ARM_THM_TLS_DESCSEQ32
 130

	)

3085 
	#R_ARM_THM_GOT_BREL12
 131

	)

3087 
	#R_ARM_IRELATIVE
 160

	)

3088 
	#R_ARM_RXPC25
 249

	)

3089 
	#R_ARM_RSBREL32
 250

	)

3090 
	#R_ARM_THM_RPC22
 251

	)

3091 
	#R_ARM_RREL32
 252

	)

3092 
	#R_ARM_RABS22
 253

	)

3093 
	#R_ARM_RPC24
 254

	)

3094 
	#R_ARM_RBASE
 255

	)

3096 
	#R_ARM_NUM
 256

	)

3099 
	#R_CKCORE_NONE
 0

	)

3100 
	#R_CKCORE_ADDR32
 1

	)

3101 
	#R_CKCORE_PCRELIMM8BY4
 2

	)

3102 
	#R_CKCORE_PCRELIMM11BY2
 3

	)

3103 
	#R_CKCORE_PCREL32
 5

	)

3104 
	#R_CKCORE_PCRELJSR_IMM11BY2
 6

	)

3105 
	#R_CKCORE_RELATIVE
 9

	)

3106 
	#R_CKCORE_COPY
 10

	)

3107 
	#R_CKCORE_GLOB_DAT
 11

	)

3108 
	#R_CKCORE_JUMP_SLOT
 12

	)

3109 
	#R_CKCORE_GOTOFF
 13

	)

3110 
	#R_CKCORE_GOTPC
 14

	)

3111 
	#R_CKCORE_GOT32
 15

	)

3112 
	#R_CKCORE_PLT32
 16

	)

3113 
	#R_CKCORE_ADDRGOT
 17

	)

3114 
	#R_CKCORE_ADDRPLT
 18

	)

3115 
	#R_CKCORE_PCREL_IMM26BY2
 19

	)

3116 
	#R_CKCORE_PCREL_IMM16BY2
 20

	)

3117 
	#R_CKCORE_PCREL_IMM16BY4
 21

	)

3118 
	#R_CKCORE_PCREL_IMM10BY2
 22

	)

3119 
	#R_CKCORE_PCREL_IMM10BY4
 23

	)

3120 
	#R_CKCORE_ADDR_HI16
 24

	)

3122 
	#R_CKCORE_ADDR_LO16
 25

	)

3123 
	#R_CKCORE_GOTPC_HI16
 26

	)

3125 
	#R_CKCORE_GOTPC_LO16
 27

	)

3126 
	#R_CKCORE_GOTOFF_HI16
 28

	)

3128 
	#R_CKCORE_GOTOFF_LO16
 29

	)

3129 
	#R_CKCORE_GOT12
 30

	)

3130 
	#R_CKCORE_GOT_HI16
 31

	)

3132 
	#R_CKCORE_GOT_LO16
 32

	)

3133 
	#R_CKCORE_PLT12
 33

	)

3134 
	#R_CKCORE_PLT_HI16
 34

	)

3136 
	#R_CKCORE_PLT_LO16
 35

	)

3137 
	#R_CKCORE_ADDRGOT_HI16
 36

	)

3139 
	#R_CKCORE_ADDRGOT_LO16
 37

	)

3140 
	#R_CKCORE_ADDRPLT_HI16
 38

	)

3142 
	#R_CKCORE_ADDRPLT_LO16
 39

	)

3143 
	#R_CKCORE_PCREL_JSR_IMM26BY2
 40

	)

3144 
	#R_CKCORE_TOFFSET_LO16
 41

	)

3145 
	#R_CKCORE_DOFFSET_LO16
 42

	)

3146 
	#R_CKCORE_PCREL_IMM18BY2
 43

	)

3147 
	#R_CKCORE_DOFFSET_IMM18
 44

	)

3148 
	#R_CKCORE_DOFFSET_IMM18BY2
 45

	)

3149 
	#R_CKCORE_DOFFSET_IMM18BY4
 46

	)

3150 
	#R_CKCORE_GOT_IMM18BY4
 48

	)

3151 
	#R_CKCORE_PLT_IMM18BY4
 49

	)

3152 
	#R_CKCORE_PCREL_IMM7BY4
 50

	)

3153 
	#R_CKCORE_TLS_LE32
 51

	)

3154 
	#R_CKCORE_TLS_IE32
 52

	)

3155 
	#R_CKCORE_TLS_GD32
 53

	)

3156 
	#R_CKCORE_TLS_LDM32
 54

	)

3157 
	#R_CKCORE_TLS_LDO32
 55

	)

3158 
	#R_CKCORE_TLS_DTPMOD32
 56

	)

3159 
	#R_CKCORE_TLS_DTPOFF32
 57

	)

3160 
	#R_CKCORE_TLS_TPOFF32
 58

	)

3163 
	#EF_CSKY_ABIMASK
 0XF0000000

	)

3164 
	#EF_CSKY_OTHER
 0X0FFF0000

	)

3165 
	#EF_CSKY_PROCESSOR
 0X0000FFFF

	)

3167 
	#EF_CSKY_ABIV1
 0X10000000

	)

3168 
	#EF_CSKY_ABIV2
 0X20000000

	)

3171 
	#SHT_CSKY_ATTRIBUTES
 (
SHT_LOPROC
 + 1)

	)

3176 
	#EF_IA_64_MASKOS
 0x0000000‡

	)

3177 
	#EF_IA_64_ABI64
 0x00000010

	)

3178 
	#EF_IA_64_ARCH
 0xff000000

	)

3181 
	#PT_IA_64_ARCHEXT
 (
PT_LOPROC
 + 0Ë

	)

3182 
	#PT_IA_64_UNWIND
 (
PT_LOPROC
 + 1Ë

	)

3183 
	#PT_IA_64_HP_OPT_ANOT
 (
PT_LOOS
 + 0x12)

	)

3184 
	#PT_IA_64_HP_HSL_ANOT
 (
PT_LOOS
 + 0x13)

	)

3185 
	#PT_IA_64_HP_STACK
 (
PT_LOOS
 + 0x14)

	)

3188 
	#PF_IA_64_NORECOV
 0x80000000

	)

3191 
	#SHT_IA_64_EXT
 (
SHT_LOPROC
 + 0Ë

	)

3192 
	#SHT_IA_64_UNWIND
 (
SHT_LOPROC
 + 1Ë

	)

3195 
	#SHF_IA_64_SHORT
 0x10000000

	)

3196 
	#SHF_IA_64_NORECOV
 0x20000000

	)

3199 
	#DT_IA_64_PLT_RESERVE
 (
DT_LOPROC
 + 0)

	)

3200 
	#DT_IA_64_NUM
 1

	)

3203 
	#R_IA64_NONE
 0x00

	)

3204 
	#R_IA64_IMM14
 0x21

	)

3205 
	#R_IA64_IMM22
 0x22

	)

3206 
	#R_IA64_IMM64
 0x23

	)

3207 
	#R_IA64_DIR32MSB
 0x24

	)

3208 
	#R_IA64_DIR32LSB
 0x25

	)

3209 
	#R_IA64_DIR64MSB
 0x26

	)

3210 
	#R_IA64_DIR64LSB
 0x27

	)

3211 
	#R_IA64_GPREL22
 0x2®

	)

3212 
	#R_IA64_GPREL64I
 0x2b

	)

3213 
	#R_IA64_GPREL32MSB
 0x2¯

	)

3214 
	#R_IA64_GPREL32LSB
 0x2d

	)

3215 
	#R_IA64_GPREL64MSB
 0x2ê

	)

3216 
	#R_IA64_GPREL64LSB
 0x2‡

	)

3217 
	#R_IA64_LTOFF22
 0x32

	)

3218 
	#R_IA64_LTOFF64I
 0x33

	)

3219 
	#R_IA64_PLTOFF22
 0x3®

	)

3220 
	#R_IA64_PLTOFF64I
 0x3b

	)

3221 
	#R_IA64_PLTOFF64MSB
 0x3ê

	)

3222 
	#R_IA64_PLTOFF64LSB
 0x3‡

	)

3223 
	#R_IA64_FPTR64I
 0x43

	)

3224 
	#R_IA64_FPTR32MSB
 0x44

	)

3225 
	#R_IA64_FPTR32LSB
 0x45

	)

3226 
	#R_IA64_FPTR64MSB
 0x46

	)

3227 
	#R_IA64_FPTR64LSB
 0x47

	)

3228 
	#R_IA64_PCREL60B
 0x48

	)

3229 
	#R_IA64_PCREL21B
 0x49

	)

3230 
	#R_IA64_PCREL21M
 0x4®

	)

3231 
	#R_IA64_PCREL21F
 0x4b

	)

3232 
	#R_IA64_PCREL32MSB
 0x4¯

	)

3233 
	#R_IA64_PCREL32LSB
 0x4d

	)

3234 
	#R_IA64_PCREL64MSB
 0x4ê

	)

3235 
	#R_IA64_PCREL64LSB
 0x4‡

	)

3236 
	#R_IA64_LTOFF_FPTR22
 0x52

	)

3237 
	#R_IA64_LTOFF_FPTR64I
 0x53

	)

3238 
	#R_IA64_LTOFF_FPTR32MSB
 0x54

	)

3239 
	#R_IA64_LTOFF_FPTR32LSB
 0x55

	)

3240 
	#R_IA64_LTOFF_FPTR64MSB
 0x56

	)

3241 
	#R_IA64_LTOFF_FPTR64LSB
 0x57

	)

3242 
	#R_IA64_SEGREL32MSB
 0x5¯

	)

3243 
	#R_IA64_SEGREL32LSB
 0x5d

	)

3244 
	#R_IA64_SEGREL64MSB
 0x5ê

	)

3245 
	#R_IA64_SEGREL64LSB
 0x5‡

	)

3246 
	#R_IA64_SECREL32MSB
 0x64

	)

3247 
	#R_IA64_SECREL32LSB
 0x65

	)

3248 
	#R_IA64_SECREL64MSB
 0x66

	)

3249 
	#R_IA64_SECREL64LSB
 0x67

	)

3250 
	#R_IA64_REL32MSB
 0x6¯

	)

3251 
	#R_IA64_REL32LSB
 0x6d

	)

3252 
	#R_IA64_REL64MSB
 0x6ê

	)

3253 
	#R_IA64_REL64LSB
 0x6‡

	)

3254 
	#R_IA64_LTV32MSB
 0x74

	)

3255 
	#R_IA64_LTV32LSB
 0x75

	)

3256 
	#R_IA64_LTV64MSB
 0x76

	)

3257 
	#R_IA64_LTV64LSB
 0x77

	)

3258 
	#R_IA64_PCREL21BI
 0x79

	)

3259 
	#R_IA64_PCREL22
 0x7®

	)

3260 
	#R_IA64_PCREL64I
 0x7b

	)

3261 
	#R_IA64_IPLTMSB
 0x80

	)

3262 
	#R_IA64_IPLTLSB
 0x81

	)

3263 
	#R_IA64_COPY
 0x84

	)

3264 
	#R_IA64_SUB
 0x85

	)

3265 
	#R_IA64_LTOFF22X
 0x86

	)

3266 
	#R_IA64_LDXMOV
 0x87

	)

3267 
	#R_IA64_TPREL14
 0x91

	)

3268 
	#R_IA64_TPREL22
 0x92

	)

3269 
	#R_IA64_TPREL64I
 0x93

	)

3270 
	#R_IA64_TPREL64MSB
 0x96

	)

3271 
	#R_IA64_TPREL64LSB
 0x97

	)

3272 
	#R_IA64_LTOFF_TPREL22
 0x9®

	)

3273 
	#R_IA64_DTPMOD64MSB
 0xa6

	)

3274 
	#R_IA64_DTPMOD64LSB
 0xa7

	)

3275 
	#R_IA64_LTOFF_DTPMOD22
 0xØ

	)

3276 
	#R_IA64_DTPREL14
 0xb1

	)

3277 
	#R_IA64_DTPREL22
 0xb2

	)

3278 
	#R_IA64_DTPREL64I
 0xb3

	)

3279 
	#R_IA64_DTPREL32MSB
 0xb4

	)

3280 
	#R_IA64_DTPREL32LSB
 0xb5

	)

3281 
	#R_IA64_DTPREL64MSB
 0xb6

	)

3282 
	#R_IA64_DTPREL64LSB
 0xb7

	)

3283 
	#R_IA64_LTOFF_DTPREL22
 0xb®

	)

3288 
	#EF_SH_MACH_MASK
 0x1f

	)

3289 
	#EF_SH_UNKNOWN
 0x0

	)

3290 
	#EF_SH1
 0x1

	)

3291 
	#EF_SH2
 0x2

	)

3292 
	#EF_SH3
 0x3

	)

3293 
	#EF_SH_DSP
 0x4

	)

3294 
	#EF_SH3_DSP
 0x5

	)

3295 
	#EF_SH4AL_DSP
 0x6

	)

3296 
	#EF_SH3E
 0x8

	)

3297 
	#EF_SH4
 0x9

	)

3298 
	#EF_SH2E
 0xb

	)

3299 
	#EF_SH4A
 0xc

	)

3300 
	#EF_SH2A
 0xd

	)

3301 
	#EF_SH4_NOFPU
 0x10

	)

3302 
	#EF_SH4A_NOFPU
 0x11

	)

3303 
	#EF_SH4_NOMMU_NOFPU
 0x12

	)

3304 
	#EF_SH2A_NOFPU
 0x13

	)

3305 
	#EF_SH3_NOMMU
 0x14

	)

3306 
	#EF_SH2A_SH4_NOFPU
 0x15

	)

3307 
	#EF_SH2A_SH3_NOFPU
 0x16

	)

3308 
	#EF_SH2A_SH4
 0x17

	)

3309 
	#EF_SH2A_SH3E
 0x18

	)

3312 
	#R_SH_NONE
 0

	)

3313 
	#R_SH_DIR32
 1

	)

3314 
	#R_SH_REL32
 2

	)

3315 
	#R_SH_DIR8WPN
 3

	)

3316 
	#R_SH_IND12W
 4

	)

3317 
	#R_SH_DIR8WPL
 5

	)

3318 
	#R_SH_DIR8WPZ
 6

	)

3319 
	#R_SH_DIR8BP
 7

	)

3320 
	#R_SH_DIR8W
 8

	)

3321 
	#R_SH_DIR8L
 9

	)

3322 
	#R_SH_SWITCH16
 25

	)

3323 
	#R_SH_SWITCH32
 26

	)

3324 
	#R_SH_USES
 27

	)

3325 
	#R_SH_COUNT
 28

	)

3326 
	#R_SH_ALIGN
 29

	)

3327 
	#R_SH_CODE
 30

	)

3328 
	#R_SH_DATA
 31

	)

3329 
	#R_SH_LABEL
 32

	)

3330 
	#R_SH_SWITCH8
 33

	)

3331 
	#R_SH_GNU_VTINHERIT
 34

	)

3332 
	#R_SH_GNU_VTENTRY
 35

	)

3333 
	#R_SH_TLS_GD_32
 144

	)

3334 
	#R_SH_TLS_LD_32
 145

	)

3335 
	#R_SH_TLS_LDO_32
 146

	)

3336 
	#R_SH_TLS_IE_32
 147

	)

3337 
	#R_SH_TLS_LE_32
 148

	)

3338 
	#R_SH_TLS_DTPMOD32
 149

	)

3339 
	#R_SH_TLS_DTPOFF32
 150

	)

3340 
	#R_SH_TLS_TPOFF32
 151

	)

3341 
	#R_SH_GOT32
 160

	)

3342 
	#R_SH_PLT32
 161

	)

3343 
	#R_SH_COPY
 162

	)

3344 
	#R_SH_GLOB_DAT
 163

	)

3345 
	#R_SH_JMP_SLOT
 164

	)

3346 
	#R_SH_RELATIVE
 165

	)

3347 
	#R_SH_GOTOFF
 166

	)

3348 
	#R_SH_GOTPC
 167

	)

3350 
	#R_SH_NUM
 256

	)

3356 
	#EF_S390_HIGH_GPRS
 0x00000001

	)

3360 
	#R_390_NONE
 0

	)

3361 
	#R_390_8
 1

	)

3362 
	#R_390_12
 2

	)

3363 
	#R_390_16
 3

	)

3364 
	#R_390_32
 4

	)

3365 
	#R_390_PC32
 5

	)

3366 
	#R_390_GOT12
 6

	)

3367 
	#R_390_GOT32
 7

	)

3368 
	#R_390_PLT32
 8

	)

3369 
	#R_390_COPY
 9

	)

3370 
	#R_390_GLOB_DAT
 10

	)

3371 
	#R_390_JMP_SLOT
 11

	)

3372 
	#R_390_RELATIVE
 12

	)

3373 
	#R_390_GOTOFF32
 13

	)

3374 
	#R_390_GOTPC
 14

	)

3375 
	#R_390_GOT16
 15

	)

3376 
	#R_390_PC16
 16

	)

3377 
	#R_390_PC16DBL
 17

	)

3378 
	#R_390_PLT16DBL
 18

	)

3379 
	#R_390_PC32DBL
 19

	)

3380 
	#R_390_PLT32DBL
 20

	)

3381 
	#R_390_GOTPCDBL
 21

	)

3382 
	#R_390_64
 22

	)

3383 
	#R_390_PC64
 23

	)

3384 
	#R_390_GOT64
 24

	)

3385 
	#R_390_PLT64
 25

	)

3386 
	#R_390_GOTENT
 26

	)

3387 
	#R_390_GOTOFF16
 27

	)

3388 
	#R_390_GOTOFF64
 28

	)

3389 
	#R_390_GOTPLT12
 29

	)

3390 
	#R_390_GOTPLT16
 30

	)

3391 
	#R_390_GOTPLT32
 31

	)

3392 
	#R_390_GOTPLT64
 32

	)

3393 
	#R_390_GOTPLTENT
 33

	)

3394 
	#R_390_PLTOFF16
 34

	)

3395 
	#R_390_PLTOFF32
 35

	)

3396 
	#R_390_PLTOFF64
 36

	)

3397 
	#R_390_TLS_LOAD
 37

	)

3398 
	#R_390_TLS_GDCALL
 38

	)

3400 
	#R_390_TLS_LDCALL
 39

	)

3402 
	#R_390_TLS_GD32
 40

	)

3404 
	#R_390_TLS_GD64
 41

	)

3406 
	#R_390_TLS_GOTIE12
 42

	)

3408 
	#R_390_TLS_GOTIE32
 43

	)

3410 
	#R_390_TLS_GOTIE64
 44

	)

3412 
	#R_390_TLS_LDM32
 45

	)

3414 
	#R_390_TLS_LDM64
 46

	)

3416 
	#R_390_TLS_IE32
 47

	)

3418 
	#R_390_TLS_IE64
 48

	)

3420 
	#R_390_TLS_IEENT
 49

	)

3422 
	#R_390_TLS_LE32
 50

	)

3424 
	#R_390_TLS_LE64
 51

	)

3426 
	#R_390_TLS_LDO32
 52

	)

3428 
	#R_390_TLS_LDO64
 53

	)

3430 
	#R_390_TLS_DTPMOD
 54

	)

3431 
	#R_390_TLS_DTPOFF
 55

	)

3432 
	#R_390_TLS_TPOFF
 56

	)

3434 
	#R_390_20
 57

	)

3435 
	#R_390_GOT20
 58

	)

3436 
	#R_390_GOTPLT20
 59

	)

3437 
	#R_390_TLS_GOTIE20
 60

	)

3439 
	#R_390_IRELATIVE
 61

	)

3441 
	#R_390_NUM
 62

	)

3445 
	#R_CRIS_NONE
 0

	)

3446 
	#R_CRIS_8
 1

	)

3447 
	#R_CRIS_16
 2

	)

3448 
	#R_CRIS_32
 3

	)

3449 
	#R_CRIS_8_PCREL
 4

	)

3450 
	#R_CRIS_16_PCREL
 5

	)

3451 
	#R_CRIS_32_PCREL
 6

	)

3452 
	#R_CRIS_GNU_VTINHERIT
 7

	)

3453 
	#R_CRIS_GNU_VTENTRY
 8

	)

3454 
	#R_CRIS_COPY
 9

	)

3455 
	#R_CRIS_GLOB_DAT
 10

	)

3456 
	#R_CRIS_JUMP_SLOT
 11

	)

3457 
	#R_CRIS_RELATIVE
 12

	)

3458 
	#R_CRIS_16_GOT
 13

	)

3459 
	#R_CRIS_32_GOT
 14

	)

3460 
	#R_CRIS_16_GOTPLT
 15

	)

3461 
	#R_CRIS_32_GOTPLT
 16

	)

3462 
	#R_CRIS_32_GOTREL
 17

	)

3463 
	#R_CRIS_32_PLT_GOTREL
 18

	)

3464 
	#R_CRIS_32_PLT_PCREL
 19

	)

3466 
	#R_CRIS_NUM
 20

	)

3470 
	#R_X86_64_NONE
 0

	)

3471 
	#R_X86_64_64
 1

	)

3472 
	#R_X86_64_PC32
 2

	)

3473 
	#R_X86_64_GOT32
 3

	)

3474 
	#R_X86_64_PLT32
 4

	)

3475 
	#R_X86_64_COPY
 5

	)

3476 
	#R_X86_64_GLOB_DAT
 6

	)

3477 
	#R_X86_64_JUMP_SLOT
 7

	)

3478 
	#R_X86_64_RELATIVE
 8

	)

3479 
	#R_X86_64_GOTPCREL
 9

	)

3481 
	#R_X86_64_32
 10

	)

3482 
	#R_X86_64_32S
 11

	)

3483 
	#R_X86_64_16
 12

	)

3484 
	#R_X86_64_PC16
 13

	)

3485 
	#R_X86_64_8
 14

	)

3486 
	#R_X86_64_PC8
 15

	)

3487 
	#R_X86_64_DTPMOD64
 16

	)

3488 
	#R_X86_64_DTPOFF64
 17

	)

3489 
	#R_X86_64_TPOFF64
 18

	)

3490 
	#R_X86_64_TLSGD
 19

	)

3492 
	#R_X86_64_TLSLD
 20

	)

3494 
	#R_X86_64_DTPOFF32
 21

	)

3495 
	#R_X86_64_GOTTPOFF
 22

	)

3497 
	#R_X86_64_TPOFF32
 23

	)

3498 
	#R_X86_64_PC64
 24

	)

3499 
	#R_X86_64_GOTOFF64
 25

	)

3500 
	#R_X86_64_GOTPC32
 26

	)

3502 
	#R_X86_64_GOT64
 27

	)

3503 
	#R_X86_64_GOTPCREL64
 28

	)

3505 
	#R_X86_64_GOTPC64
 29

	)

3506 
	#R_X86_64_GOTPLT64
 30

	)

3507 
	#R_X86_64_PLTOFF64
 31

	)

3509 
	#R_X86_64_SIZE32
 32

	)

3510 
	#R_X86_64_SIZE64
 33

	)

3511 
	#R_X86_64_GOTPC32_TLSDESC
 34

	)

3512 
	#R_X86_64_TLSDESC_CALL
 35

	)

3514 
	#R_X86_64_TLSDESC
 36

	)

3515 
	#R_X86_64_IRELATIVE
 37

	)

3516 
	#R_X86_64_RELATIVE64
 38

	)

3519 
	#R_X86_64_GOTPCRELX
 41

	)

3522 
	#R_X86_64_REX_GOTPCRELX
 42

	)

3525 
	#R_X86_64_NUM
 43

	)

3528 
	#SHT_X86_64_UNWIND
 0x70000001

	)

3532 
	#R_MN10300_NONE
 0

	)

3533 
	#R_MN10300_32
 1

	)

3534 
	#R_MN10300_16
 2

	)

3535 
	#R_MN10300_8
 3

	)

3536 
	#R_MN10300_PCREL32
 4

	)

3537 
	#R_MN10300_PCREL16
 5

	)

3538 
	#R_MN10300_PCREL8
 6

	)

3539 
	#R_MN10300_GNU_VTINHERIT
 7

	)

3540 
	#R_MN10300_GNU_VTENTRY
 8

	)

3541 
	#R_MN10300_24
 9

	)

3542 
	#R_MN10300_GOTPC32
 10

	)

3543 
	#R_MN10300_GOTPC16
 11

	)

3544 
	#R_MN10300_GOTOFF32
 12

	)

3545 
	#R_MN10300_GOTOFF24
 13

	)

3546 
	#R_MN10300_GOTOFF16
 14

	)

3547 
	#R_MN10300_PLT32
 15

	)

3548 
	#R_MN10300_PLT16
 16

	)

3549 
	#R_MN10300_GOT32
 17

	)

3550 
	#R_MN10300_GOT24
 18

	)

3551 
	#R_MN10300_GOT16
 19

	)

3552 
	#R_MN10300_COPY
 20

	)

3553 
	#R_MN10300_GLOB_DAT
 21

	)

3554 
	#R_MN10300_JMP_SLOT
 22

	)

3555 
	#R_MN10300_RELATIVE
 23

	)

3556 
	#R_MN10300_TLS_GD
 24

	)

3557 
	#R_MN10300_TLS_LD
 25

	)

3558 
	#R_MN10300_TLS_LDO
 26

	)

3559 
	#R_MN10300_TLS_GOTIE
 27

	)

3561 
	#R_MN10300_TLS_IE
 28

	)

3563 
	#R_MN10300_TLS_LE
 29

	)

3565 
	#R_MN10300_TLS_DTPMOD
 30

	)

3566 
	#R_MN10300_TLS_DTPOFF
 31

	)

3567 
	#R_MN10300_TLS_TPOFF
 32

	)

3568 
	#R_MN10300_SYM_DIFF
 33

	)

3570 
	#R_MN10300_ALIGN
 34

	)

3572 
	#R_MN10300_NUM
 35

	)

3576 
	#R_M32R_NONE
 0

	)

3577 
	#R_M32R_16
 1

	)

3578 
	#R_M32R_32
 2

	)

3579 
	#R_M32R_24
 3

	)

3580 
	#R_M32R_10_PCREL
 4

	)

3581 
	#R_M32R_18_PCREL
 5

	)

3582 
	#R_M32R_26_PCREL
 6

	)

3583 
	#R_M32R_HI16_ULO
 7

	)

3584 
	#R_M32R_HI16_SLO
 8

	)

3585 
	#R_M32R_LO16
 9

	)

3586 
	#R_M32R_SDA16
 10

	)

3587 
	#R_M32R_GNU_VTINHERIT
 11

	)

3588 
	#R_M32R_GNU_VTENTRY
 12

	)

3590 
	#R_M32R_16_RELA
 33

	)

3591 
	#R_M32R_32_RELA
 34

	)

3592 
	#R_M32R_24_RELA
 35

	)

3593 
	#R_M32R_10_PCREL_RELA
 36

	)

3594 
	#R_M32R_18_PCREL_RELA
 37

	)

3595 
	#R_M32R_26_PCREL_RELA
 38

	)

3596 
	#R_M32R_HI16_ULO_RELA
 39

	)

3597 
	#R_M32R_HI16_SLO_RELA
 40

	)

3598 
	#R_M32R_LO16_RELA
 41

	)

3599 
	#R_M32R_SDA16_RELA
 42

	)

3600 
	#R_M32R_RELA_GNU_VTINHERIT
 43

	)

3601 
	#R_M32R_RELA_GNU_VTENTRY
 44

	)

3602 
	#R_M32R_REL32
 45

	)

3604 
	#R_M32R_GOT24
 48

	)

3605 
	#R_M32R_26_PLTREL
 49

	)

3606 
	#R_M32R_COPY
 50

	)

3607 
	#R_M32R_GLOB_DAT
 51

	)

3608 
	#R_M32R_JMP_SLOT
 52

	)

3609 
	#R_M32R_RELATIVE
 53

	)

3610 
	#R_M32R_GOTOFF
 54

	)

3611 
	#R_M32R_GOTPC24
 55

	)

3612 
	#R_M32R_GOT16_HI_ULO
 56

	)

3614 
	#R_M32R_GOT16_HI_SLO
 57

	)

3616 
	#R_M32R_GOT16_LO
 58

	)

3617 
	#R_M32R_GOTPC_HI_ULO
 59

	)

3619 
	#R_M32R_GOTPC_HI_SLO
 60

	)

3621 
	#R_M32R_GOTPC_LO
 61

	)

3623 
	#R_M32R_GOTOFF_HI_ULO
 62

	)

3625 
	#R_M32R_GOTOFF_HI_SLO
 63

	)

3627 
	#R_M32R_GOTOFF_LO
 64

	)

3628 
	#R_M32R_NUM
 256

	)

3631 
	#R_MICROBLAZE_NONE
 0

	)

3632 
	#R_MICROBLAZE_32
 1

	)

3633 
	#R_MICROBLAZE_32_PCREL
 2

	)

3634 
	#R_MICROBLAZE_64_PCREL
 3

	)

3635 
	#R_MICROBLAZE_32_PCREL_LO
 4

	)

3636 
	#R_MICROBLAZE_64
 5

	)

3637 
	#R_MICROBLAZE_32_LO
 6

	)

3638 
	#R_MICROBLAZE_SRO32
 7

	)

3639 
	#R_MICROBLAZE_SRW32
 8

	)

3640 
	#R_MICROBLAZE_64_NONE
 9

	)

3641 
	#R_MICROBLAZE_32_SYM_OP_SYM
 10

	)

3642 
	#R_MICROBLAZE_GNU_VTINHERIT
 11

	)

3643 
	#R_MICROBLAZE_GNU_VTENTRY
 12

	)

3644 
	#R_MICROBLAZE_GOTPC_64
 13

	)

3645 
	#R_MICROBLAZE_GOT_64
 14

	)

3646 
	#R_MICROBLAZE_PLT_64
 15

	)

3647 
	#R_MICROBLAZE_REL
 16

	)

3648 
	#R_MICROBLAZE_JUMP_SLOT
 17

	)

3649 
	#R_MICROBLAZE_GLOB_DAT
 18

	)

3650 
	#R_MICROBLAZE_GOTOFF_64
 19

	)

3651 
	#R_MICROBLAZE_GOTOFF_32
 20

	)

3652 
	#R_MICROBLAZE_COPY
 21

	)

3653 
	#R_MICROBLAZE_TLS
 22

	)

3654 
	#R_MICROBLAZE_TLSGD
 23

	)

3655 
	#R_MICROBLAZE_TLSLD
 24

	)

3656 
	#R_MICROBLAZE_TLSDTPMOD32
 25

	)

3657 
	#R_MICROBLAZE_TLSDTPREL32
 26

	)

3658 
	#R_MICROBLAZE_TLSDTPREL64
 27

	)

3659 
	#R_MICROBLAZE_TLSGOTTPREL32
 28

	)

3660 
	#R_MICROBLAZE_TLSTPREL32
 29

	)

3663 
	#DT_NIOS2_GP
 0x70000002

	)

3666 
	#R_NIOS2_NONE
 0

	)

3667 
	#R_NIOS2_S16
 1

	)

3668 
	#R_NIOS2_U16
 2

	)

3669 
	#R_NIOS2_PCREL16
 3

	)

3670 
	#R_NIOS2_CALL26
 4

	)

3671 
	#R_NIOS2_IMM5
 5

	)

3672 
	#R_NIOS2_CACHE_OPX
 6

	)

3673 
	#R_NIOS2_IMM6
 7

	)

3674 
	#R_NIOS2_IMM8
 8

	)

3675 
	#R_NIOS2_HI16
 9

	)

3676 
	#R_NIOS2_LO16
 10

	)

3677 
	#R_NIOS2_HIADJ16
 11

	)

3678 
	#R_NIOS2_BFD_RELOC_32
 12

	)

3679 
	#R_NIOS2_BFD_RELOC_16
 13

	)

3680 
	#R_NIOS2_BFD_RELOC_8
 14

	)

3681 
	#R_NIOS2_GPREL
 15

	)

3682 
	#R_NIOS2_GNU_VTINHERIT
 16

	)

3683 
	#R_NIOS2_GNU_VTENTRY
 17

	)

3684 
	#R_NIOS2_UJMP
 18

	)

3685 
	#R_NIOS2_CJMP
 19

	)

3686 
	#R_NIOS2_CALLR
 20

	)

3687 
	#R_NIOS2_ALIGN
 21

	)

3689 
	#R_NIOS2_GOT16
 22

	)

3690 
	#R_NIOS2_CALL16
 23

	)

3691 
	#R_NIOS2_GOTOFF_LO
 24

	)

3692 
	#R_NIOS2_GOTOFF_HA
 25

	)

3693 
	#R_NIOS2_PCREL_LO
 26

	)

3694 
	#R_NIOS2_PCREL_HA
 27

	)

3695 
	#R_NIOS2_TLS_GD16
 28

	)

3696 
	#R_NIOS2_TLS_LDM16
 29

	)

3697 
	#R_NIOS2_TLS_LDO16
 30

	)

3698 
	#R_NIOS2_TLS_IE16
 31

	)

3699 
	#R_NIOS2_TLS_LE16
 32

	)

3700 
	#R_NIOS2_TLS_DTPMOD
 33

	)

3701 
	#R_NIOS2_TLS_DTPREL
 34

	)

3702 
	#R_NIOS2_TLS_TPREL
 35

	)

3703 
	#R_NIOS2_COPY
 36

	)

3704 
	#R_NIOS2_GLOB_DAT
 37

	)

3705 
	#R_NIOS2_JUMP_SLOT
 38

	)

3706 
	#R_NIOS2_RELATIVE
 39

	)

3707 
	#R_NIOS2_GOTOFF
 40

	)

3708 
	#R_NIOS2_CALL26_NOAT
 41

	)

3709 
	#R_NIOS2_GOT_LO
 42

	)

3710 
	#R_NIOS2_GOT_HA
 43

	)

3711 
	#R_NIOS2_CALL_LO
 44

	)

3712 
	#R_NIOS2_CALL_HA
 45

	)

3715 
	#R_TILEPRO_NONE
 0

	)

3716 
	#R_TILEPRO_32
 1

	)

3717 
	#R_TILEPRO_16
 2

	)

3718 
	#R_TILEPRO_8
 3

	)

3719 
	#R_TILEPRO_32_PCREL
 4

	)

3720 
	#R_TILEPRO_16_PCREL
 5

	)

3721 
	#R_TILEPRO_8_PCREL
 6

	)

3722 
	#R_TILEPRO_LO16
 7

	)

3723 
	#R_TILEPRO_HI16
 8

	)

3724 
	#R_TILEPRO_HA16
 9

	)

3725 
	#R_TILEPRO_COPY
 10

	)

3726 
	#R_TILEPRO_GLOB_DAT
 11

	)

3727 
	#R_TILEPRO_JMP_SLOT
 12

	)

3728 
	#R_TILEPRO_RELATIVE
 13

	)

3729 
	#R_TILEPRO_BROFF_X1
 14

	)

3730 
	#R_TILEPRO_JOFFLONG_X1
 15

	)

3731 
	#R_TILEPRO_JOFFLONG_X1_PLT
 16

	)

3732 
	#R_TILEPRO_IMM8_X0
 17

	)

3733 
	#R_TILEPRO_IMM8_Y0
 18

	)

3734 
	#R_TILEPRO_IMM8_X1
 19

	)

3735 
	#R_TILEPRO_IMM8_Y1
 20

	)

3736 
	#R_TILEPRO_MT_IMM15_X1
 21

	)

3737 
	#R_TILEPRO_MF_IMM15_X1
 22

	)

3738 
	#R_TILEPRO_IMM16_X0
 23

	)

3739 
	#R_TILEPRO_IMM16_X1
 24

	)

3740 
	#R_TILEPRO_IMM16_X0_LO
 25

	)

3741 
	#R_TILEPRO_IMM16_X1_LO
 26

	)

3742 
	#R_TILEPRO_IMM16_X0_HI
 27

	)

3743 
	#R_TILEPRO_IMM16_X1_HI
 28

	)

3744 
	#R_TILEPRO_IMM16_X0_HA
 29

	)

3745 
	#R_TILEPRO_IMM16_X1_HA
 30

	)

3746 
	#R_TILEPRO_IMM16_X0_PCREL
 31

	)

3747 
	#R_TILEPRO_IMM16_X1_PCREL
 32

	)

3748 
	#R_TILEPRO_IMM16_X0_LO_PCREL
 33

	)

3749 
	#R_TILEPRO_IMM16_X1_LO_PCREL
 34

	)

3750 
	#R_TILEPRO_IMM16_X0_HI_PCREL
 35

	)

3751 
	#R_TILEPRO_IMM16_X1_HI_PCREL
 36

	)

3752 
	#R_TILEPRO_IMM16_X0_HA_PCREL
 37

	)

3753 
	#R_TILEPRO_IMM16_X1_HA_PCREL
 38

	)

3754 
	#R_TILEPRO_IMM16_X0_GOT
 39

	)

3755 
	#R_TILEPRO_IMM16_X1_GOT
 40

	)

3756 
	#R_TILEPRO_IMM16_X0_GOT_LO
 41

	)

3757 
	#R_TILEPRO_IMM16_X1_GOT_LO
 42

	)

3758 
	#R_TILEPRO_IMM16_X0_GOT_HI
 43

	)

3759 
	#R_TILEPRO_IMM16_X1_GOT_HI
 44

	)

3760 
	#R_TILEPRO_IMM16_X0_GOT_HA
 45

	)

3761 
	#R_TILEPRO_IMM16_X1_GOT_HA
 46

	)

3762 
	#R_TILEPRO_MMSTART_X0
 47

	)

3763 
	#R_TILEPRO_MMEND_X0
 48

	)

3764 
	#R_TILEPRO_MMSTART_X1
 49

	)

3765 
	#R_TILEPRO_MMEND_X1
 50

	)

3766 
	#R_TILEPRO_SHAMT_X0
 51

	)

3767 
	#R_TILEPRO_SHAMT_X1
 52

	)

3768 
	#R_TILEPRO_SHAMT_Y0
 53

	)

3769 
	#R_TILEPRO_SHAMT_Y1
 54

	)

3770 
	#R_TILEPRO_DEST_IMM8_X1
 55

	)

3772 
	#R_TILEPRO_TLS_GD_CALL
 60

	)

3773 
	#R_TILEPRO_IMM8_X0_TLS_GD_ADD
 61

	)

3774 
	#R_TILEPRO_IMM8_X1_TLS_GD_ADD
 62

	)

3775 
	#R_TILEPRO_IMM8_Y0_TLS_GD_ADD
 63

	)

3776 
	#R_TILEPRO_IMM8_Y1_TLS_GD_ADD
 64

	)

3777 
	#R_TILEPRO_TLS_IE_LOAD
 65

	)

3778 
	#R_TILEPRO_IMM16_X0_TLS_GD
 66

	)

3779 
	#R_TILEPRO_IMM16_X1_TLS_GD
 67

	)

3780 
	#R_TILEPRO_IMM16_X0_TLS_GD_LO
 68

	)

3781 
	#R_TILEPRO_IMM16_X1_TLS_GD_LO
 69

	)

3782 
	#R_TILEPRO_IMM16_X0_TLS_GD_HI
 70

	)

3783 
	#R_TILEPRO_IMM16_X1_TLS_GD_HI
 71

	)

3784 
	#R_TILEPRO_IMM16_X0_TLS_GD_HA
 72

	)

3785 
	#R_TILEPRO_IMM16_X1_TLS_GD_HA
 73

	)

3786 
	#R_TILEPRO_IMM16_X0_TLS_IE
 74

	)

3787 
	#R_TILEPRO_IMM16_X1_TLS_IE
 75

	)

3788 
	#R_TILEPRO_IMM16_X0_TLS_IE_LO
 76

	)

3789 
	#R_TILEPRO_IMM16_X1_TLS_IE_LO
 77

	)

3790 
	#R_TILEPRO_IMM16_X0_TLS_IE_HI
 78

	)

3791 
	#R_TILEPRO_IMM16_X1_TLS_IE_HI
 79

	)

3792 
	#R_TILEPRO_IMM16_X0_TLS_IE_HA
 80

	)

3793 
	#R_TILEPRO_IMM16_X1_TLS_IE_HA
 81

	)

3794 
	#R_TILEPRO_TLS_DTPMOD32
 82

	)

3795 
	#R_TILEPRO_TLS_DTPOFF32
 83

	)

3796 
	#R_TILEPRO_TLS_TPOFF32
 84

	)

3797 
	#R_TILEPRO_IMM16_X0_TLS_LE
 85

	)

3798 
	#R_TILEPRO_IMM16_X1_TLS_LE
 86

	)

3799 
	#R_TILEPRO_IMM16_X0_TLS_LE_LO
 87

	)

3800 
	#R_TILEPRO_IMM16_X1_TLS_LE_LO
 88

	)

3801 
	#R_TILEPRO_IMM16_X0_TLS_LE_HI
 89

	)

3802 
	#R_TILEPRO_IMM16_X1_TLS_LE_HI
 90

	)

3803 
	#R_TILEPRO_IMM16_X0_TLS_LE_HA
 91

	)

3804 
	#R_TILEPRO_IMM16_X1_TLS_LE_HA
 92

	)

3806 
	#R_TILEPRO_GNU_VTINHERIT
 128

	)

3807 
	#R_TILEPRO_GNU_VTENTRY
 129

	)

3809 
	#R_TILEPRO_NUM
 130

	)

3813 
	#R_TILEGX_NONE
 0

	)

3814 
	#R_TILEGX_64
 1

	)

3815 
	#R_TILEGX_32
 2

	)

3816 
	#R_TILEGX_16
 3

	)

3817 
	#R_TILEGX_8
 4

	)

3818 
	#R_TILEGX_64_PCREL
 5

	)

3819 
	#R_TILEGX_32_PCREL
 6

	)

3820 
	#R_TILEGX_16_PCREL
 7

	)

3821 
	#R_TILEGX_8_PCREL
 8

	)

3822 
	#R_TILEGX_HW0
 9

	)

3823 
	#R_TILEGX_HW1
 10

	)

3824 
	#R_TILEGX_HW2
 11

	)

3825 
	#R_TILEGX_HW3
 12

	)

3826 
	#R_TILEGX_HW0_LAST
 13

	)

3827 
	#R_TILEGX_HW1_LAST
 14

	)

3828 
	#R_TILEGX_HW2_LAST
 15

	)

3829 
	#R_TILEGX_COPY
 16

	)

3830 
	#R_TILEGX_GLOB_DAT
 17

	)

3831 
	#R_TILEGX_JMP_SLOT
 18

	)

3832 
	#R_TILEGX_RELATIVE
 19

	)

3833 
	#R_TILEGX_BROFF_X1
 20

	)

3834 
	#R_TILEGX_JUMPOFF_X1
 21

	)

3835 
	#R_TILEGX_JUMPOFF_X1_PLT
 22

	)

3836 
	#R_TILEGX_IMM8_X0
 23

	)

3837 
	#R_TILEGX_IMM8_Y0
 24

	)

3838 
	#R_TILEGX_IMM8_X1
 25

	)

3839 
	#R_TILEGX_IMM8_Y1
 26

	)

3840 
	#R_TILEGX_DEST_IMM8_X1
 27

	)

3841 
	#R_TILEGX_MT_IMM14_X1
 28

	)

3842 
	#R_TILEGX_MF_IMM14_X1
 29

	)

3843 
	#R_TILEGX_MMSTART_X0
 30

	)

3844 
	#R_TILEGX_MMEND_X0
 31

	)

3845 
	#R_TILEGX_SHAMT_X0
 32

	)

3846 
	#R_TILEGX_SHAMT_X1
 33

	)

3847 
	#R_TILEGX_SHAMT_Y0
 34

	)

3848 
	#R_TILEGX_SHAMT_Y1
 35

	)

3849 
	#R_TILEGX_IMM16_X0_HW0
 36

	)

3850 
	#R_TILEGX_IMM16_X1_HW0
 37

	)

3851 
	#R_TILEGX_IMM16_X0_HW1
 38

	)

3852 
	#R_TILEGX_IMM16_X1_HW1
 39

	)

3853 
	#R_TILEGX_IMM16_X0_HW2
 40

	)

3854 
	#R_TILEGX_IMM16_X1_HW2
 41

	)

3855 
	#R_TILEGX_IMM16_X0_HW3
 42

	)

3856 
	#R_TILEGX_IMM16_X1_HW3
 43

	)

3857 
	#R_TILEGX_IMM16_X0_HW0_LAST
 44

	)

3858 
	#R_TILEGX_IMM16_X1_HW0_LAST
 45

	)

3859 
	#R_TILEGX_IMM16_X0_HW1_LAST
 46

	)

3860 
	#R_TILEGX_IMM16_X1_HW1_LAST
 47

	)

3861 
	#R_TILEGX_IMM16_X0_HW2_LAST
 48

	)

3862 
	#R_TILEGX_IMM16_X1_HW2_LAST
 49

	)

3863 
	#R_TILEGX_IMM16_X0_HW0_PCREL
 50

	)

3864 
	#R_TILEGX_IMM16_X1_HW0_PCREL
 51

	)

3865 
	#R_TILEGX_IMM16_X0_HW1_PCREL
 52

	)

3866 
	#R_TILEGX_IMM16_X1_HW1_PCREL
 53

	)

3867 
	#R_TILEGX_IMM16_X0_HW2_PCREL
 54

	)

3868 
	#R_TILEGX_IMM16_X1_HW2_PCREL
 55

	)

3869 
	#R_TILEGX_IMM16_X0_HW3_PCREL
 56

	)

3870 
	#R_TILEGX_IMM16_X1_HW3_PCREL
 57

	)

3871 
	#R_TILEGX_IMM16_X0_HW0_LAST_PCREL
 58

	)

3872 
	#R_TILEGX_IMM16_X1_HW0_LAST_PCREL
 59

	)

3873 
	#R_TILEGX_IMM16_X0_HW1_LAST_PCREL
 60

	)

3874 
	#R_TILEGX_IMM16_X1_HW1_LAST_PCREL
 61

	)

3875 
	#R_TILEGX_IMM16_X0_HW2_LAST_PCREL
 62

	)

3876 
	#R_TILEGX_IMM16_X1_HW2_LAST_PCREL
 63

	)

3877 
	#R_TILEGX_IMM16_X0_HW0_GOT
 64

	)

3878 
	#R_TILEGX_IMM16_X1_HW0_GOT
 65

	)

3879 
	#R_TILEGX_IMM16_X0_HW0_PLT_PCREL
 66

	)

3880 
	#R_TILEGX_IMM16_X1_HW0_PLT_PCREL
 67

	)

3881 
	#R_TILEGX_IMM16_X0_HW1_PLT_PCREL
 68

	)

3882 
	#R_TILEGX_IMM16_X1_HW1_PLT_PCREL
 69

	)

3883 
	#R_TILEGX_IMM16_X0_HW2_PLT_PCREL
 70

	)

3884 
	#R_TILEGX_IMM16_X1_HW2_PLT_PCREL
 71

	)

3885 
	#R_TILEGX_IMM16_X0_HW0_LAST_GOT
 72

	)

3886 
	#R_TILEGX_IMM16_X1_HW0_LAST_GOT
 73

	)

3887 
	#R_TILEGX_IMM16_X0_HW1_LAST_GOT
 74

	)

3888 
	#R_TILEGX_IMM16_X1_HW1_LAST_GOT
 75

	)

3889 
	#R_TILEGX_IMM16_X0_HW3_PLT_PCREL
 76

	)

3890 
	#R_TILEGX_IMM16_X1_HW3_PLT_PCREL
 77

	)

3891 
	#R_TILEGX_IMM16_X0_HW0_TLS_GD
 78

	)

3892 
	#R_TILEGX_IMM16_X1_HW0_TLS_GD
 79

	)

3893 
	#R_TILEGX_IMM16_X0_HW0_TLS_LE
 80

	)

3894 
	#R_TILEGX_IMM16_X1_HW0_TLS_LE
 81

	)

3895 
	#R_TILEGX_IMM16_X0_HW0_LAST_TLS_LE
 82

	)

3896 
	#R_TILEGX_IMM16_X1_HW0_LAST_TLS_LE
 83

	)

3897 
	#R_TILEGX_IMM16_X0_HW1_LAST_TLS_LE
 84

	)

3898 
	#R_TILEGX_IMM16_X1_HW1_LAST_TLS_LE
 85

	)

3899 
	#R_TILEGX_IMM16_X0_HW0_LAST_TLS_GD
 86

	)

3900 
	#R_TILEGX_IMM16_X1_HW0_LAST_TLS_GD
 87

	)

3901 
	#R_TILEGX_IMM16_X0_HW1_LAST_TLS_GD
 88

	)

3902 
	#R_TILEGX_IMM16_X1_HW1_LAST_TLS_GD
 89

	)

3904 
	#R_TILEGX_IMM16_X0_HW0_TLS_IE
 92

	)

3905 
	#R_TILEGX_IMM16_X1_HW0_TLS_IE
 93

	)

3906 
	#R_TILEGX_IMM16_X0_HW0_LAST_PLT_PCREL
 94

	)

3907 
	#R_TILEGX_IMM16_X1_HW0_LAST_PLT_PCREL
 95

	)

3908 
	#R_TILEGX_IMM16_X0_HW1_LAST_PLT_PCREL
 96

	)

3909 
	#R_TILEGX_IMM16_X1_HW1_LAST_PLT_PCREL
 97

	)

3910 
	#R_TILEGX_IMM16_X0_HW2_LAST_PLT_PCREL
 98

	)

3911 
	#R_TILEGX_IMM16_X1_HW2_LAST_PLT_PCREL
 99

	)

3912 
	#R_TILEGX_IMM16_X0_HW0_LAST_TLS_IE
 100

	)

3913 
	#R_TILEGX_IMM16_X1_HW0_LAST_TLS_IE
 101

	)

3914 
	#R_TILEGX_IMM16_X0_HW1_LAST_TLS_IE
 102

	)

3915 
	#R_TILEGX_IMM16_X1_HW1_LAST_TLS_IE
 103

	)

3917 
	#R_TILEGX_TLS_DTPMOD64
 106

	)

3918 
	#R_TILEGX_TLS_DTPOFF64
 107

	)

3919 
	#R_TILEGX_TLS_TPOFF64
 108

	)

3920 
	#R_TILEGX_TLS_DTPMOD32
 109

	)

3921 
	#R_TILEGX_TLS_DTPOFF32
 110

	)

3922 
	#R_TILEGX_TLS_TPOFF32
 111

	)

3923 
	#R_TILEGX_TLS_GD_CALL
 112

	)

3924 
	#R_TILEGX_IMM8_X0_TLS_GD_ADD
 113

	)

3925 
	#R_TILEGX_IMM8_X1_TLS_GD_ADD
 114

	)

3926 
	#R_TILEGX_IMM8_Y0_TLS_GD_ADD
 115

	)

3927 
	#R_TILEGX_IMM8_Y1_TLS_GD_ADD
 116

	)

3928 
	#R_TILEGX_TLS_IE_LOAD
 117

	)

3929 
	#R_TILEGX_IMM8_X0_TLS_ADD
 118

	)

3930 
	#R_TILEGX_IMM8_X1_TLS_ADD
 119

	)

3931 
	#R_TILEGX_IMM8_Y0_TLS_ADD
 120

	)

3932 
	#R_TILEGX_IMM8_Y1_TLS_ADD
 121

	)

3934 
	#R_TILEGX_GNU_VTINHERIT
 128

	)

3935 
	#R_TILEGX_GNU_VTENTRY
 129

	)

3937 
	#R_TILEGX_NUM
 130

	)

3940 
	#EF_RISCV_RVC
 0x0001

	)

3941 
	#EF_RISCV_FLOAT_ABI
 0x0006

	)

3942 
	#EF_RISCV_FLOAT_ABI_SOFT
 0x0000

	)

3943 
	#EF_RISCV_FLOAT_ABI_SINGLE
 0x0002

	)

3944 
	#EF_RISCV_FLOAT_ABI_DOUBLE
 0x0004

	)

3945 
	#EF_RISCV_FLOAT_ABI_QUAD
 0x0006

	)

3946 
	#EF_RISCV_RVE
 0x0008

	)

3947 
	#EF_RISCV_TSO
 0x0010

	)

3950 
	#R_RISCV_NONE
 0

	)

3951 
	#R_RISCV_32
 1

	)

3952 
	#R_RISCV_64
 2

	)

3953 
	#R_RISCV_RELATIVE
 3

	)

3954 
	#R_RISCV_COPY
 4

	)

3955 
	#R_RISCV_JUMP_SLOT
 5

	)

3956 
	#R_RISCV_TLS_DTPMOD32
 6

	)

3957 
	#R_RISCV_TLS_DTPMOD64
 7

	)

3958 
	#R_RISCV_TLS_DTPREL32
 8

	)

3959 
	#R_RISCV_TLS_DTPREL64
 9

	)

3960 
	#R_RISCV_TLS_TPREL32
 10

	)

3961 
	#R_RISCV_TLS_TPREL64
 11

	)

3962 
	#R_RISCV_BRANCH
 16

	)

3963 
	#R_RISCV_JAL
 17

	)

3964 
	#R_RISCV_CALL
 18

	)

3965 
	#R_RISCV_CALL_PLT
 19

	)

3966 
	#R_RISCV_GOT_HI20
 20

	)

3967 
	#R_RISCV_TLS_GOT_HI20
 21

	)

3968 
	#R_RISCV_TLS_GD_HI20
 22

	)

3969 
	#R_RISCV_PCREL_HI20
 23

	)

3970 
	#R_RISCV_PCREL_LO12_I
 24

	)

3971 
	#R_RISCV_PCREL_LO12_S
 25

	)

3972 
	#R_RISCV_HI20
 26

	)

3973 
	#R_RISCV_LO12_I
 27

	)

3974 
	#R_RISCV_LO12_S
 28

	)

3975 
	#R_RISCV_TPREL_HI20
 29

	)

3976 
	#R_RISCV_TPREL_LO12_I
 30

	)

3977 
	#R_RISCV_TPREL_LO12_S
 31

	)

3978 
	#R_RISCV_TPREL_ADD
 32

	)

3979 
	#R_RISCV_ADD8
 33

	)

3980 
	#R_RISCV_ADD16
 34

	)

3981 
	#R_RISCV_ADD32
 35

	)

3982 
	#R_RISCV_ADD64
 36

	)

3983 
	#R_RISCV_SUB8
 37

	)

3984 
	#R_RISCV_SUB16
 38

	)

3985 
	#R_RISCV_SUB32
 39

	)

3986 
	#R_RISCV_SUB64
 40

	)

3987 
	#R_RISCV_GNU_VTINHERIT
 41

	)

3988 
	#R_RISCV_GNU_VTENTRY
 42

	)

3989 
	#R_RISCV_ALIGN
 43

	)

3990 
	#R_RISCV_RVC_BRANCH
 44

	)

3991 
	#R_RISCV_RVC_JUMP
 45

	)

3992 
	#R_RISCV_RVC_LUI
 46

	)

3993 
	#R_RISCV_GPREL_I
 47

	)

3994 
	#R_RISCV_GPREL_S
 48

	)

3995 
	#R_RISCV_TPREL_I
 49

	)

3996 
	#R_RISCV_TPREL_S
 50

	)

3997 
	#R_RISCV_RELAX
 51

	)

3998 
	#R_RISCV_SUB6
 52

	)

3999 
	#R_RISCV_SET6
 53

	)

4000 
	#R_RISCV_SET8
 54

	)

4001 
	#R_RISCV_SET16
 55

	)

4002 
	#R_RISCV_SET32
 56

	)

4003 
	#R_RISCV_32_PCREL
 57

	)

4004 
	#R_RISCV_IRELATIVE
 58

	)

4005 
	#R_RISCV_PLT32
 59

	)

4006 
	#R_RISCV_SET_ULEB128
 60

	)

4007 
	#R_RISCV_SUB_ULEB128
 61

	)

4009 
	#R_RISCV_NUM
 62

	)

4012 
	#STO_RISCV_VARIANT_CC
 0x80

	)

4016 
	#SHT_RISCV_ATTRIBUTES
 (
SHT_LOPROC
 + 3)

	)

4019 
	#PT_RISCV_ATTRIBUTES
 (
PT_LOPROC
 + 3)

	)

4022 
	#DT_RISCV_VARIANT_CC
 (
DT_LOPROC
 + 1)

	)

4026 
	#R_BPF_NONE
 0

	)

4027 
	#R_BPF_64_64
 1

	)

4028 
	#R_BPF_64_32
 10

	)

4032 
	#R_METAG_HIADDR16
 0

	)

4033 
	#R_METAG_LOADDR16
 1

	)

4034 
	#R_METAG_ADDR32
 2

	)

4035 
	#R_METAG_NONE
 3

	)

4036 
	#R_METAG_RELBRANCH
 4

	)

4037 
	#R_METAG_GETSETOFF
 5

	)

4040 
	#R_METAG_REG32OP1
 6

	)

4041 
	#R_METAG_REG32OP2
 7

	)

4042 
	#R_METAG_REG32OP3
 8

	)

4043 
	#R_METAG_REG16OP1
 9

	)

4044 
	#R_METAG_REG16OP2
 10

	)

4045 
	#R_METAG_REG16OP3
 11

	)

4046 
	#R_METAG_REG32OP4
 12

	)

4048 
	#R_METAG_HIOG
 13

	)

4049 
	#R_METAG_LOOG
 14

	)

4051 
	#R_METAG_REL8
 15

	)

4052 
	#R_METAG_REL16
 16

	)

4055 
	#R_METAG_GNU_VTINHERIT
 30

	)

4056 
	#R_METAG_GNU_VTENTRY
 31

	)

4059 
	#R_METAG_HI16_GOTOFF
 32

	)

4060 
	#R_METAG_LO16_GOTOFF
 33

	)

4061 
	#R_METAG_GETSET_GOTOFF
 34

	)

4062 
	#R_METAG_GETSET_GOT
 35

	)

4063 
	#R_METAG_HI16_GOTPC
 36

	)

4064 
	#R_METAG_LO16_GOTPC
 37

	)

4065 
	#R_METAG_HI16_PLT
 38

	)

4066 
	#R_METAG_LO16_PLT
 39

	)

4067 
	#R_METAG_RELBRANCH_PLT
 40

	)

4068 
	#R_METAG_GOTOFF
 41

	)

4069 
	#R_METAG_PLT
 42

	)

4070 
	#R_METAG_COPY
 43

	)

4071 
	#R_METAG_JMP_SLOT
 44

	)

4072 
	#R_METAG_RELATIVE
 45

	)

4073 
	#R_METAG_GLOB_DAT
 46

	)

4076 
	#R_METAG_TLS_GD
 47

	)

4077 
	#R_METAG_TLS_LDM
 48

	)

4078 
	#R_METAG_TLS_LDO_HI16
 49

	)

4079 
	#R_METAG_TLS_LDO_LO16
 50

	)

4080 
	#R_METAG_TLS_LDO
 51

	)

4081 
	#R_METAG_TLS_IE
 52

	)

4082 
	#R_METAG_TLS_IENONPIC
 53

	)

4083 
	#R_METAG_TLS_IENONPIC_HI16
 54

	)

4084 
	#R_METAG_TLS_IENONPIC_LO16
 55

	)

4085 
	#R_METAG_TLS_TPOFF
 56

	)

4086 
	#R_METAG_TLS_DTPMOD
 57

	)

4087 
	#R_METAG_TLS_DTPOFF
 58

	)

4088 
	#R_METAG_TLS_LE
 59

	)

4089 
	#R_METAG_TLS_LE_HI16
 60

	)

4090 
	#R_METAG_TLS_LE_LO16
 61

	)

4093 
	#R_NDS32_NONE
 0

	)

4094 
	#R_NDS32_32_RELA
 20

	)

4095 
	#R_NDS32_COPY
 39

	)

4096 
	#R_NDS32_GLOB_DAT
 40

	)

4097 
	#R_NDS32_JMP_SLOT
 41

	)

4098 
	#R_NDS32_RELATIVE
 42

	)

4099 
	#R_NDS32_TLS_TPOFF
 102

	)

4100 
	#R_NDS32_TLS_DESC
 119

	)

4103 
	#EF_LARCH_ABI_MODIFIER_MASK
 0x07

	)

4104 
	#EF_LARCH_ABI_SOFT_FLOAT
 0x01

	)

4105 
	#EF_LARCH_ABI_SINGLE_FLOAT
 0x02

	)

4106 
	#EF_LARCH_ABI_DOUBLE_FLOAT
 0x03

	)

4107 
	#EF_LARCH_OBJABI_V1
 0x40

	)

4110 
	#R_LARCH_NONE
 0

	)

4111 
	#R_LARCH_32
 1

	)

4112 
	#R_LARCH_64
 2

	)

4113 
	#R_LARCH_RELATIVE
 3

	)

4114 
	#R_LARCH_COPY
 4

	)

4115 
	#R_LARCH_JUMP_SLOT
 5

	)

4116 
	#R_LARCH_TLS_DTPMOD32
 6

	)

4117 
	#R_LARCH_TLS_DTPMOD64
 7

	)

4118 
	#R_LARCH_TLS_DTPREL32
 8

	)

4119 
	#R_LARCH_TLS_DTPREL64
 9

	)

4120 
	#R_LARCH_TLS_TPREL32
 10

	)

4121 
	#R_LARCH_TLS_TPREL64
 11

	)

4122 
	#R_LARCH_IRELATIVE
 12

	)

4127 
	#R_LARCH_MARK_LA
 20

	)

4128 
	#R_LARCH_MARK_PCREL
 21

	)

4129 
	#R_LARCH_SOP_PUSH_PCREL
 22

	)

4130 
	#R_LARCH_SOP_PUSH_ABSOLUTE
 23

	)

4131 
	#R_LARCH_SOP_PUSH_DUP
 24

	)

4132 
	#R_LARCH_SOP_PUSH_GPREL
 25

	)

4133 
	#R_LARCH_SOP_PUSH_TLS_TPREL
 26

	)

4134 
	#R_LARCH_SOP_PUSH_TLS_GOT
 27

	)

4135 
	#R_LARCH_SOP_PUSH_TLS_GD
 28

	)

4136 
	#R_LARCH_SOP_PUSH_PLT_PCREL
 29

	)

4137 
	#R_LARCH_SOP_ASSERT
 30

	)

4138 
	#R_LARCH_SOP_NOT
 31

	)

4139 
	#R_LARCH_SOP_SUB
 32

	)

4140 
	#R_LARCH_SOP_SL
 33

	)

4141 
	#R_LARCH_SOP_SR
 34

	)

4142 
	#R_LARCH_SOP_ADD
 35

	)

4143 
	#R_LARCH_SOP_AND
 36

	)

4144 
	#R_LARCH_SOP_IF_ELSE
 37

	)

4145 
	#R_LARCH_SOP_POP_32_S_10_5
 38

	)

4146 
	#R_LARCH_SOP_POP_32_U_10_12
 39

	)

4147 
	#R_LARCH_SOP_POP_32_S_10_12
 40

	)

4148 
	#R_LARCH_SOP_POP_32_S_10_16
 41

	)

4149 
	#R_LARCH_SOP_POP_32_S_10_16_S2
 42

	)

4150 
	#R_LARCH_SOP_POP_32_S_5_20
 43

	)

4151 
	#R_LARCH_SOP_POP_32_S_0_5_10_16_S2
 44

	)

4152 
	#R_LARCH_SOP_POP_32_S_0_10_10_16_S2
 45

	)

4153 
	#R_LARCH_SOP_POP_32_U
 46

	)

4156 
	#R_LARCH_ADD8
 47

	)

4157 
	#R_LARCH_ADD16
 48

	)

4158 
	#R_LARCH_ADD24
 49

	)

4159 
	#R_LARCH_ADD32
 50

	)

4160 
	#R_LARCH_ADD64
 51

	)

4161 
	#R_LARCH_SUB8
 52

	)

4162 
	#R_LARCH_SUB16
 53

	)

4163 
	#R_LARCH_SUB24
 54

	)

4164 
	#R_LARCH_SUB32
 55

	)

4165 
	#R_LARCH_SUB64
 56

	)

4166 
	#R_LARCH_GNU_VTINHERIT
 57

	)

4167 
	#R_LARCH_GNU_VTENTRY
 58

	)

4171 
	#R_LARCH_B16
 64

	)

4172 
	#R_LARCH_B21
 65

	)

4173 
	#R_LARCH_B26
 66

	)

4174 
	#R_LARCH_ABS_HI20
 67

	)

4175 
	#R_LARCH_ABS_LO12
 68

	)

4176 
	#R_LARCH_ABS64_LO20
 69

	)

4177 
	#R_LARCH_ABS64_HI12
 70

	)

4178 
	#R_LARCH_PCALA_HI20
 71

	)

4179 
	#R_LARCH_PCALA_LO12
 72

	)

4180 
	#R_LARCH_PCALA64_LO20
 73

	)

4181 
	#R_LARCH_PCALA64_HI12
 74

	)

4182 
	#R_LARCH_GOT_PC_HI20
 75

	)

4183 
	#R_LARCH_GOT_PC_LO12
 76

	)

4184 
	#R_LARCH_GOT64_PC_LO20
 77

	)

4185 
	#R_LARCH_GOT64_PC_HI12
 78

	)

4186 
	#R_LARCH_GOT_HI20
 79

	)

4187 
	#R_LARCH_GOT_LO12
 80

	)

4188 
	#R_LARCH_GOT64_LO20
 81

	)

4189 
	#R_LARCH_GOT64_HI12
 82

	)

4190 
	#R_LARCH_TLS_LE_HI20
 83

	)

4191 
	#R_LARCH_TLS_LE_LO12
 84

	)

4192 
	#R_LARCH_TLS_LE64_LO20
 85

	)

4193 
	#R_LARCH_TLS_LE64_HI12
 86

	)

4194 
	#R_LARCH_TLS_IE_PC_HI20
 87

	)

4195 
	#R_LARCH_TLS_IE_PC_LO12
 88

	)

4196 
	#R_LARCH_TLS_IE64_PC_LO20
 89

	)

4197 
	#R_LARCH_TLS_IE64_PC_HI12
 90

	)

4198 
	#R_LARCH_TLS_IE_HI20
 91

	)

4199 
	#R_LARCH_TLS_IE_LO12
 92

	)

4200 
	#R_LARCH_TLS_IE64_LO20
 93

	)

4201 
	#R_LARCH_TLS_IE64_HI12
 94

	)

4202 
	#R_LARCH_TLS_LD_PC_HI20
 95

	)

4203 
	#R_LARCH_TLS_LD_HI20
 96

	)

4204 
	#R_LARCH_TLS_GD_PC_HI20
 97

	)

4205 
	#R_LARCH_TLS_GD_HI20
 98

	)

4206 
	#R_LARCH_32_PCREL
 99

	)

4207 
	#R_LARCH_RELAX
 100

	)

4212 
	#EF_ARC_MACH_MSK
 0x000000ff

	)

4213 
	#EF_ARC_OSABI_MSK
 0x00000f00

	)

4214 
	#EF_ARC_ALL_MSK
 (
EF_ARC_MACH_MSK
 | 
EF_ARC_OSABI_MSK
)

	)

4217 
	#SHT_ARC_ATTRIBUTES
 (
SHT_LOPROC
 + 1Ë

	)

4220 
	#R_ARC_NONE
 0x0

	)

4221 
	#R_ARC_8
 0x1

	)

4222 
	#R_ARC_16
 0x2

	)

4223 
	#R_ARC_24
 0x3

	)

4224 
	#R_ARC_32
 0x4

	)

4226 
	#R_ARC_B22_PCREL
 0x6

	)

4227 
	#R_ARC_H30
 0x7

	)

4228 
	#R_ARC_N8
 0x8

	)

4229 
	#R_ARC_N16
 0x9

	)

4230 
	#R_ARC_N24
 0xA

	)

4231 
	#R_ARC_N32
 0xB

	)

4232 
	#R_ARC_SDA
 0xC

	)

4233 
	#R_ARC_SECTOFF
 0xD

	)

4234 
	#R_ARC_S21H_PCREL
 0xE

	)

4235 
	#R_ARC_S21W_PCREL
 0xF

	)

4236 
	#R_ARC_S25H_PCREL
 0x10

	)

4237 
	#R_ARC_S25W_PCREL
 0x11

	)

4238 
	#R_ARC_SDA32
 0x12

	)

4239 
	#R_ARC_SDA_LDST
 0x13

	)

4240 
	#R_ARC_SDA_LDST1
 0x14

	)

4241 
	#R_ARC_SDA_LDST2
 0x15

	)

4242 
	#R_ARC_SDA16_LD
 0x16

	)

4243 
	#R_ARC_SDA16_LD1
 0x17

	)

4244 
	#R_ARC_SDA16_LD2
 0x18

	)

4245 
	#R_ARC_S13_PCREL
 0x19

	)

4246 
	#R_ARC_W
 0x1A

	)

4247 
	#R_ARC_32_ME
 0x1B

	)

4248 
	#R_ARC_N32_ME
 0x1C

	)

4249 
	#R_ARC_SECTOFF_ME
 0x1D

	)

4250 
	#R_ARC_SDA32_ME
 0x1E

	)

4251 
	#R_ARC_W_ME
 0x1F

	)

4252 
	#R_ARC_H30_ME
 0x20

	)

4253 
	#R_ARC_SECTOFF_U8
 0x21

	)

4254 
	#R_ARC_SECTOFF_S9
 0x22

	)

4255 
	#R_AC_SECTOFF_U8
 0x23

	)

4256 
	#R_AC_SECTOFF_U8_1
 0x24

	)

4257 
	#R_AC_SECTOFF_U8_2
 0x25

	)

4258 
	#R_AC_SECTOFF_S9
 0x26

	)

4259 
	#R_AC_SECTOFF_S9_1
 0x27

	)

4260 
	#R_AC_SECTOFF_S9_2
 0x28

	)

4261 
	#R_ARC_SECTOFF_ME_1
 0x29

	)

4262 
	#R_ARC_SECTOFF_ME_2
 0x2A

	)

4263 
	#R_ARC_SECTOFF_1
 0x2B

	)

4264 
	#R_ARC_SECTOFF_2
 0x2C

	)

4265 
	#R_ARC_SDA_12
 0x2D

	)

4266 
	#R_ARC_SDA16_ST2
 0x30

	)

4267 
	#R_ARC_32_PCREL
 0x31

	)

4268 
	#R_ARC_PC32
 0x32

	)

4269 
	#R_ARC_GOTPC32
 0x33

	)

4270 
	#R_ARC_PLT32
 0x34

	)

4271 
	#R_ARC_COPY
 0x35

	)

4272 
	#R_ARC_GLOB_DAT
 0x36

	)

4273 
	#R_ARC_JMP_SLOT
 0x37

	)

4274 
	#R_ARC_RELATIVE
 0x38

	)

4275 
	#R_ARC_GOTOFF
 0x39

	)

4276 
	#R_ARC_GOTPC
 0x3A

	)

4277 
	#R_ARC_GOT32
 0x3B

	)

4278 
	#R_ARC_S21W_PCREL_PLT
 0x3C

	)

4279 
	#R_ARC_S25H_PCREL_PLT
 0x3D

	)

4281 
	#R_ARC_JLI_SECTOFF
 0x3F

	)

4283 
	#R_ARC_TLS_DTPMOD
 0x42

	)

4284 
	#R_ARC_TLS_DTPOFF
 0x43

	)

4285 
	#R_ARC_TLS_TPOFF
 0x44

	)

4286 
	#R_ARC_TLS_GD_GOT
 0x45

	)

4287 
	#R_ARC_TLS_GD_LD
 0x46

	)

4288 
	#R_ARC_TLS_GD_CALL
 0x47

	)

4289 
	#R_ARC_TLS_IE_GOT
 0x48

	)

4290 
	#R_ARC_TLS_DTPOFF_S9
 0x49

	)

4291 
	#R_ARC_TLS_LE_S9
 0x4A

	)

4292 
	#R_ARC_TLS_LE_32
 0x4B

	)

4293 
	#R_ARC_S25W_PCREL_PLT
 0x4C

	)

4294 
	#R_ARC_S21H_PCREL_PLT
 0x4D

	)

4295 
	#R_ARC_NPS_CMEM16
 0x4E

	)

4298 
	#R_OR1K_NONE
 0

	)

4299 
	#R_OR1K_32
 1

	)

4300 
	#R_OR1K_16
 2

	)

4301 
	#R_OR1K_8
 3

	)

4302 
	#R_OR1K_LO_16_IN_INSN
 4

	)

4303 
	#R_OR1K_HI_16_IN_INSN
 5

	)

4304 
	#R_OR1K_INSN_REL_26
 6

	)

4305 
	#R_OR1K_GNU_VTENTRY
 7

	)

4306 
	#R_OR1K_GNU_VTINHERIT
 8

	)

4307 
	#R_OR1K_32_PCREL
 9

	)

4308 
	#R_OR1K_16_PCREL
 10

	)

4309 
	#R_OR1K_8_PCREL
 11

	)

4310 
	#R_OR1K_GOTPC_HI16
 12

	)

4311 
	#R_OR1K_GOTPC_LO16
 13

	)

4312 
	#R_OR1K_GOT16
 14

	)

4313 
	#R_OR1K_PLT26
 15

	)

4314 
	#R_OR1K_GOTOFF_HI16
 16

	)

4315 
	#R_OR1K_GOTOFF_LO16
 17

	)

4316 
	#R_OR1K_COPY
 18

	)

4317 
	#R_OR1K_GLOB_DAT
 19

	)

4318 
	#R_OR1K_JMP_SLOT
 20

	)

4319 
	#R_OR1K_RELATIVE
 21

	)

4320 
	#R_OR1K_TLS_GD_HI16
 22

	)

4321 
	#R_OR1K_TLS_GD_LO16
 23

	)

4322 
	#R_OR1K_TLS_LDM_HI16
 24

	)

4323 
	#R_OR1K_TLS_LDM_LO16
 25

	)

4324 
	#R_OR1K_TLS_LDO_HI16
 26

	)

4325 
	#R_OR1K_TLS_LDO_LO16
 27

	)

4326 
	#R_OR1K_TLS_IE_HI16
 28

	)

4327 
	#R_OR1K_TLS_IE_LO16
 29

	)

4328 
	#R_OR1K_TLS_LE_HI16
 30

	)

4329 
	#R_OR1K_TLS_LE_LO16
 31

	)

4330 
	#R_OR1K_TLS_TPOFF
 32

	)

4331 
	#R_OR1K_TLS_DTPOFF
 33

	)

4332 
	#R_OR1K_TLS_DTPMOD
 34

	)

	@elf_header.hpp

1 #i‚de‡
__ELF_HEADER_H__


2 
	#__ELF_HEADER_H__


	)

4 
	~"comm⁄.hµ
"

6 ˛as†
	cElfHódî
{

7 
	mpublic
:

8 
ElfHódî
() = ;

9 ~
ElfHódî
() = ;

11 
lﬂd
(
°d
::
°rög
 
fûe
);

12 
dump
();

14 
£tEIdít
();

15 
£tTy≥
();

16 
£tMachöe
();

17 
£tVîsi⁄
();

18 
£tE¡ry
();

19 
£tProgømHódîOff£t
();

20 
£tSe˘i⁄HódîOff£t
();

21 
£tFœgs
();

22 
£tElfHódîSize
();

23 
£tProgømHódîIãmSize
();

24 
£tProgømHódîIãmNum
();

25 
£tSe˘i⁄HódîIãmSize
();

26 
£tSe˘i⁄HódîIãmNum
();

27 
£tSåögTabÀIndexInSe˘i⁄Hódî
();

29 
	m°d
::
¨øy
<
uöt8_t
,
	mEI_NIDENT
> 
gëEIdít
();

30 
Elf64_HÆf
 
gëTy≥
();

31 
Elf64_HÆf
 
gëMachöe
();

32 
Elf64_W‹d
 
gëVîsi⁄
();

33 
Elf64_Addr
 
gëE¡ry
();

34 
Elf64_Off
 
gëProgømHódîOff£t
();

35 
Elf64_Off
 
gëSe˘i⁄HódîOff£t
();

36 
Elf64_W‹d
 
gëFœgs
();

37 
Elf64_HÆf
 
gëElfHódîSize
();

38 
Elf64_HÆf
 
gëProgømHódîIãmSize
();

39 
Elf64_HÆf
 
gëProgømHódîIãmNum
();

40 
Elf64_HÆf
 
gëSe˘i⁄HódîIãmSize
();

41 
Elf64_HÆf
 
gëSe˘i⁄HódîIãmNum
();

42 
Elf64_HÆf
 
gëSe˘i⁄SåögTabÀIndex
();

44 
	m¥iv©e
:

45 
°d
::
°rög
 
°r_e_ty≥
();

46 
	m°d
::
°rög
 
°r_e_machöe
();

47 
	m°d
::
°rög
 
°r_e_vîsi⁄
();

49 
	m¥iv©e
:

50 
°d
::
¨øy
<
uöt8_t
,
	mEI_NIDENT
> 
	mm_e_idít
;

51 
Elf64_HÆf
 
	mm_e_ty≥
;

52 
Elf64_HÆf
 
	mm_e_machöe
;

53 
Elf64_W‹d
 
	mm_e_vîsi⁄
;

54 
Elf64_Addr
 
	mm_e_íåy
;

55 
Elf64_Off
 
	mm_e_phoff
;

56 
Elf64_Off
 
	mm_e_shoff
;

57 
Elf64_W‹d
 
	mm_e_Êags
;

58 
Elf64_HÆf
 
	mm_e_ehsize
;

59 
Elf64_HÆf
 
	mm_e_phítsize
;

60 
Elf64_HÆf
 
	mm_e_phnum
;

61 
Elf64_HÆf
 
	mm_e_shítsize
;

62 
Elf64_HÆf
 
	mm_e_shnum
;

63 
Elf64_HÆf
 
	mm_e_sh°∫dx
;

	@elfer.hpp

1 #i‚de‡
__ELFER_H__


2 
	#__ELFER_H__


	)

4 
	~"ñf_hódî.hµ
"

5 
	~"£˘i⁄_hódî_èbÀ.hµ
"

6 
	~"¥ogøm_hódî_èbÀ.hµ
"

7 
	~"£˘i⁄.hµ
"

8 
	~"£gmít.hµ
"

9 
	~"mem‹y.hµ
"

10 
	~<°rög
>

12 ˛as†
	cEl„r
{

13 
	mpublic
:

14 
	$El„r
(
°d
::
°rög
 
fûe
):
	$m_fûíame
(
fûe
) {

15 
m_ñfHódî
.
	`lﬂd
(
m_fûíame
);

16 
m_¥ogømHódîTabÀ
.
	`lﬂd
(
m_fûíame
,

17 
m_ñfHódî
.
	`gëProgømHódîOff£t
(),

18 
m_ñfHódî
.
	`gëProgømHódîIãmSize
(),

19 
m_ñfHódî
.
	`gëProgømHódîIãmNum
());

20 
m_£˘i⁄HódîTabÀ
.
	`lﬂd
(
m_fûíame
,

21 
m_ñfHódî
.
	`gëSe˘i⁄HódîOff£t
(),

22 
m_ñfHódî
.
	`gëSe˘i⁄HódîIãmSize
(),

23 
m_ñfHódî
.
	`gëSe˘i⁄HódîIãmNum
());

24 
m_£˘i⁄HódîTabÀ
.
	`lﬂdSe˘i⁄SåögTabÀ
(
m_fûíame
,

25 
m_ñfHódî
.
	`gëSe˘i⁄SåögTabÀIndex
());

26 
m_£˘i⁄HódîTabÀ
.
	`lﬂdSåögTabÀ
(
m_fûíame
);

27 
m_£˘i⁄HódîTabÀ
.
	`lﬂdSymbﬁTabÀ
(
m_fûíame
);

32 ~
	`El„r
() = ;

34 
	`dump
();

36 
	`lﬂdSegmít2Mem
(
Mem‹y
* 
mem
);

38 
	`m≠SegmítsAndSe˘i⁄s
();

39 
boﬁ
 
	`isSe˘i⁄InSegmít
(
ProgømHódî
, 
Se˘i⁄Hódî
);

41 
uöt64_t
 
	`gë_íåy
();

43 
¥iv©e
:

44 
uöt8_t
 
	`ªad8
(
Elf64_Off
 
off£t
);

46 
¥iv©e
:

48 
ElfHódî
 
m_ñfHódî
;

49 
ProgømHódîTabÀ
 
m_¥ogømHódîTabÀ
;

50 
Se˘i⁄HódîTabÀ
 
m_£˘i⁄HódîTabÀ
;

51 
Se˘i⁄s
 
m_£˘i⁄s
;

52 
Segmíts
 
m_£gmíts
;

55 
°d
::
°rög
 
m_fûíame
;

56 
	}
};

	@instruction.hpp

2 #i‚de‡
__ISA_PARSER_H__


3 
	#__ISA_PARSER_H__


	)

5 
	~<¨øy
>

6 
	~<io°ªam
>

8 ˛as†
	cIn°OpCode
 : 
uöt8_t


11 
LUT
 = 0x37,

13 
	mAUIPC
 = 0x17,

15 
	mJAL
 = 0x6F,

17 
	mJALR
 = 0x67,

19 
	mBRANCH
 = 0x63,

20 
	mBEQ
 = 0x63,

21 
	mBNE
 = 0x63,

22 
	mBLT
 = 0x63,

23 
	mBGE
 = 0x63,

24 
	mBLTU
 = 0x63,

25 
	mBGEU
 = 0x63,

27 
	mLOAD
 = 0x3,

28 
	mLB
 = 0x3,

29 
	mLH
 = 0x3,

30 
	mLW
 = 0x3,

31 
	mLBU
 = 0x3,

32 
	mLHU
 = 0x3,

34 
	mLWU
 = 0x3,

35 
	mLD
 = 0x3,

38 
	mSTORE
 = 0x23,

39 
	mSB
 = 0x23,

40 
	mSH
 = 0x23,

41 
	mSW
 = 0x23,

43 
	mSD
 = 0x23,

45 
	mIMM
 = 0x13,

46 
	mADDI
 = 0x13,

47 
	mSLTI
 = 0x13,

48 
	mSLTIU
 = 0x13,

49 
	mXORI
 = 0x13,

50 
	mORI
 = 0x13,

51 
	mANDI
 = 0x13,

52 
	mSLLI
 = 0x13,

53 
	mSRLI
 = 0x13,

54 
	mSRAI
 = 0x13,

56 
	mREG
 = 0x33,

57 
	mADD
 = 0x33,

58 
	mSUB
 = 0x33,

59 
	mSLL
 = 0x33,

60 
	mSLT
 = 0x33,

61 
	mSLTU
 = 0x33,

62 
	mXOR
 = 0x33,

63 
	mSRL
 = 0x33,

64 
	mSRA
 = 0x33,

65 
	mOR
 = 0x33,

66 
	mAND
 = 0x33,

68 
	mFENCE
 = 0xF,

69 
	mFENCE_J
 = 0xF,

71 
	mSYSTEM
 = 0x73,

72 
	mECALL
 = 0x73,

73 
	mEBREA
 = 0x73,

74 
	mCSRRW
 = 0x73,

75 
	mCSRRS
 = 0x73,

76 
	mCSRRC
 = 0x73,

77 
	mCSRRSW
 = 0x73,

78 
	mCSRRSI
 = 0x73,

79 
	mCSRRCI
 = 0x73,

88 
	mIMM32
 = 0x1B,

89 
	mADDIW
 = 0x1B,

90 
	mSLLIW
 = 0x1B,

91 
	mSRLIW
 = 0x1B,

92 
	mSRAIW
 = 0x1B,

94 
	mOP32
 = 0x3B,

95 
	mADDW
 = 0x3B,

96 
	mSUBW
 = 0x3B,

97 
	mSLLW
 = 0x3B,

98 
	mSRLW
 = 0x3B,

99 
	mSRAW
 = 0x3B,

102 
	sIn°ru˘i⁄


108 
uöt32_t
 
	m›code
 : 7;

109 
uöt32_t
 
	mª£rve
 : 25;

111 } 
	mcomm⁄
;

115 
uöt32_t
 
	m›code
 : 7;

116 
uöt32_t
 
	mrd
 : 5;

117 
uöt32_t
 
	mfunc3
 : 3;

118 
uöt32_t
 
	mrs1
 : 5;

119 
uöt32_t
 
	mrs2
 : 5;

120 
uöt32_t
 
	mfunc7
 : 7;

121 } 
	mR
;

123 
uöt32_t
 
	m›code
 : 7;

124 
uöt32_t
 
	mrd
 : 5;

125 
uöt32_t
 
	mfunc3
 : 3;

126 
uöt32_t
 
	mrs1
 : 5;

127 
uöt32_t
 
	mimm_11_0
 : 12;

128 } 
	mI
;

130 
uöt32_t
 
	m›code
 : 7;

131 
uöt32_t
 
	mimm_4_0
 : 5;

132 
uöt32_t
 
	mfunc3
 : 3;

133 
uöt32_t
 
	mrs1
 : 5;

134 
uöt32_t
 
	mrs2
 : 5;

135 
uöt32_t
 
	mimm_11_5
 : 7;

136 } 
	mS
;

138 
uöt32_t
 
	m›code
 : 7;

139 
uöt32_t
 
	mimm_11
 : 1;

140 
uöt32_t
 
	mimm_4_1
 : 4;

141 
uöt32_t
 
	mfunc3
 : 3;

142 
uöt32_t
 
	mrs1
 : 5;

143 
uöt32_t
 
	mrs2
 : 5;

144 
uöt32_t
 
	mimm_10_5
 : 6;

145 
uöt32_t
 
	mimm_12
 : 1;

146 } 
	mSB
;

148 
uöt32_t
 
	m›code
 : 7;

149 
uöt32_t
 
	mrd
 : 5;

150 
uöt32_t
 
	mimm_31_12
 : 20;

151 } 
	mU
;

153 
uöt32_t
 
	m›code
 : 7;

154 
uöt32_t
 
	mrd
 : 5;

155 
uöt32_t
 
	mimm_19_12
 : 20;

156 
uöt32_t
 
	mimm_11
 : 20;

157 
uöt32_t
 
	mimm_10_1
 : 20;

158 
uöt32_t
 
	mimm_20
 : 20;

159 } 
	mUJ
;

160 }
	mrv32i
;

163 
uöt32_t
 
	m›code
 : 7;

164 
uöt32_t
 
	mrd
 : 5;

165 
uöt32_t
 
	mfunc3
 : 3;

166 
uöt32_t
 
	mrs1
 : 5;

167 
uöt32_t
 
	mrs2
 : 5;

168 
uöt32_t
 
	mfunc7
 : 7;

169 } 
	mR
;

171 
uöt32_t
 
	m›code
 : 7;

172 
uöt32_t
 
	mrd
 : 5;

173 
uöt32_t
 
	mfunc3
 : 3;

174 
uöt32_t
 
	mrs1
 : 5;

175 
uöt32_t
 
	mimm_11_0
 : 12;

176 } 
	mI
;

178 
uöt32_t
 
	m›code
 : 7;

179 
uöt32_t
 
	mimm_4_0
 : 5;

180 
uöt32_t
 
	mfunc3
 : 3;

181 
uöt32_t
 
	mrs1
 : 5;

182 
uöt32_t
 
	mrs2
 : 5;

183 
uöt32_t
 
	mimm_11_5
 : 7;

184 } 
	mS
;

185 }
	mrv64i
;

186 
uöt32_t
 
	mDoubÀW‹d
;

188 
uöt32_t
 
	mimm
;

189 
	m°d
::
°rög
 
›Name
;

194 
	#OUT_PRINT
 
°d
::
cout
 << std::
hex
 << std::
	`£tw
(12Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·


	)

195 
	#FORMAT
 
°d
::
dec
 << std::
	`£tw
(12Ë<< std::
	`£tfûl
(' 'Ë<< std::
À·


	)

196 
	#INST_FORMAT
 
°d
::
hex
 << std::
	`£tw
(8Ë<< std::
	`£tfûl
('0')

	)

	@memory.hpp

1 #i‚de‡
__MEMORY_H__


2 
	#__MEMORY_H__


	)

4 
	~<¨øy
>

5 
	~<io°ªam
>

6 
	~<mem‹y
>

7 
	~<ve˘‹
>

8 
	~<c°döt
>

9 
	~<c°dboﬁ
>

10 
	~<m≠
>

12 
	~"addªss.hµ
"

14 ˛as†
	cMemTy≥
 : 
uöt8_t


16 
UnAŒoc
,

17 
	mAŒoˇãd


20 ˛as†
	cMemCñl
{

21 
	mpublic
:

22 
uöt8_t
 
d©a
;

23 
MemTy≥
 
	m°©us
;

26 ˛as†
	cMem‹y
{

27 
	mpublic
:

28 
usög
 
Page
 = 
°d
::
¨øy
<
MemCñl
, 0x1000>;

29 
usög
 
	mPageDú
 = 
°d
::
m≠
<
uöt32_t
, 
	mPage
>;

30 
usög
 
	mMem
 = 
°d
::
m≠
<
uöt32_t
, 
	mPageDú
>;

32 
uöt8_t
 
ªad8
(
uöt32_t
 
addr
);

33 
uöt16_t
 
ªad16
(
uöt32_t
 
addr
);

34 
uöt32_t
 
ªad32
(uöt32_à
addr
);

35 
uöt64_t
 
ªad64
(
uöt32_t
 
addr
);

37 
wrôe8
(
uöt32_t
 
addr
, 
uöt8_t
 
d©a
);

38 
wrôe16
(
uöt32_t
 
addr
, 
uöt16_t
 
d©a
);

39 
wrôe32
(
uöt32_t
 
addr
, uöt32_à
d©a
);

40 
wrôe64
(
uöt32_t
 
addr
, 
uöt64_t
 
d©a
);

43 
dump
();

45 
	m¥iv©e
:

46 
boﬁ
 
exi°Page
(
Addªss
 
addr
);

47 
ÆlocPage
(
Addªss
 
addr
);

49 
	m¥iv©e
:

50 
Mem
 
m_mem
;

	@program_header_table.hpp

1 #i‚de‡
__PROGROM_HEADER_TABLE_H__


2 
	#__PROGROM_HEADER_TABLE_H__


	)

4 
	~"comm⁄.hµ
"

5 
	~<ve˘‹
>

6 
	~"£˘i⁄_hódî_èbÀ.hµ
"

8 ˛as†
	cProgømHódî
{

9 
	mpublic
:

10 
ProgømHódî
() = ;

11 ~
ProgømHódî
() = ;

13 
lﬂd
(
°d
::
°rög
 
fûe
, 
Elf64_Off
 
off£t
, 
Elf64_HÆf
 
size
);

14 
dump
();

16 
£tTy≥
 (
uöt32_t
 
ty≥
);

17 
£tOff£t
(
uöt64_t
 
off£t
);

18 
£tVAddr
 (
uöt64_t
 
vaddr
);

19 
£tPAddr
 (
uöt64_t
 
∑ddr
);

20 
£tFûesz
(
uöt64_t
 
fûesz
);

21 
£tMemsz
 (
uöt64_t
 
memsz
);

22 
£tFœgs
 (
uöt32_t
 
Êags
);

23 
£tAlign
 (
uöt64_t
 
Æign
);

26 
uöt32_t
 
gëTy≥
();

27 
uöt64_t
 
gëOff£t
();

28 
uöt64_t
 
gëVAddr
();

29 
uöt64_t
 
gëPAddr
();

30 
uöt64_t
 
gëFûesz
();

31 
uöt64_t
 
gëMemsz
();

32 
uöt32_t
 
gëFœgs
();

33 
uöt64_t
 
gëAlign
();

35 
	m°d
::
°rög
 
°r_p_ty≥
();

37 
	m¥iv©e
:

47 
uöt32_t
 
m_p_ty≥
;

48 
uöt64_t
 
	mm_p_off£t
;

49 
uöt64_t
 
	mm_p_vaddr
;

50 
uöt64_t
 
	mm_p_∑ddr
;

51 
uöt64_t
 
	mm_p_fûesz
;

52 
uöt64_t
 
	mm_p_memsz
;

53 
uöt32_t
 
	mm_p_Êags
;

54 
uöt64_t
 
	mm_p_Æign
;

56 
	m°d
::
ve˘‹
<
Se˘i⁄Hódî
> 
m_£˘i⁄s
;

64 ˛as†
	cProgømHódîTabÀ
{

65 
	mpublic
:

66 
ProgømHódîTabÀ
() = ;

67 ~
ProgømHódîTabÀ
() = ;

69 
lﬂd
(
°d
::
°rög
 
fûe
, 
Elf64_Off
 
ProgømHódîTabÀOff£t
, 
Elf64_HÆf
 
ProgømHódîTabÀIãmSize
, Elf64_HÆ‡
ProgømHódîIãmNum
);

70 
dump
();

71 
	m°d
::
ve˘‹
<
ProgømHódî
> 
gë
();

73 
	m¥iv©e
:

75 
°d
::
ve˘‹
<
ProgømHódî
> 
m_¥ogømHódîTabÀ
;

	@section.hpp

1 #i‚de‡
__SECTION_H__


2 
	#__SECTION_H__


	)

4 
	~"comm⁄.hµ
"

6 ˛as†
	cSe˘i⁄
{

7 
	mpublic
:

8 
Se˘i⁄
() = ;

9 ~
Se˘i⁄
() = ;

11 
	m¥iv©e
:

15 ˛as†
	cSe˘i⁄s
{

16 
	mpublic
:

17 
Se˘i⁄s
() = ;

18 ~
Se˘i⁄s
() = ;

20 
	m¥iv©e
:

21 
°d
::
ve˘‹
<
Se˘i⁄
> 
m_£˘i⁄s
;

	@section_header_table.hpp

1 #i‚de‡
__SECTION_HEADER_TABLE_H__


2 
	#__SECTION_HEADER_TABLE_H__


	)

4 
	~<ve˘‹
>

5 
	~"comm⁄.hµ
"

6 
	~"symbﬁ.hµ
"

8 ˛as†
	cSe˘i⁄Hódî
{

9 
	mpublic
:

10 
Se˘i⁄Hódî
() = ;

11 ~
Se˘i⁄Hódî
() = ;

13 
lﬂd
(
°d
::
°rög
 
fûe
, 
Elf64_Off
 
off£t
, 
Elf64_Xw‹d
 
size
);

14 
dump
(
uöt32_t
 
ödex
, 
°d
::
°rög
 
«me
);

16 
Elf64_W‹d
 
gë_sh_«me
();

17 
Elf64_W‹d
 
gë_sh_ty≥
();

18 
Elf64_Xw‹d
 
gë_sh_Êags
();

19 
Elf64_Addr
 
gë_sh_addr
();

20 
Elf64_Off
 
gë_sh_off£t
();

21 
Elf64_Xw‹d
 
gë_sh_size
();

22 
Elf64_W‹d
 
gë_sh_lök
();

23 
Elf64_W‹d
 
gë_sh_öfo
();

24 
Elf64_Xw‹d
 
gë_sh_addølign
();

25 
Elf64_Xw‹d
 
gë_sh_ítsize
();

27 
£t_sh_«me
(
Elf64_W‹d
);

28 
£t_sh_ty≥
(
Elf64_W‹d
);

29 
£t_sh_Êags
(
Elf64_Xw‹d
);

30 
£t_sh_addr
(
Elf64_Addr
);

31 
£t_sh_off£t
(
Elf64_Off
 );

32 
£t_sh_size
(
Elf64_Xw‹d
);

33 
£t_sh_lök
(
Elf64_W‹d
);

34 
£t_sh_öfo
(
Elf64_W‹d
);

35 
£t_sh_addølign
(
Elf64_Xw‹d
);

36 
£t_sh_ítsize
(
Elf64_Xw‹d
);

38 
	m¥iv©e
:

39 
Elf64_W‹d
 
sh_«me
;

40 
Elf64_W‹d
 
	msh_ty≥
;

41 
Elf64_Xw‹d
 
	msh_Êags
;

42 
Elf64_Addr
 
	msh_addr
;

43 
Elf64_Off
 
	msh_off£t
;

44 
Elf64_Xw‹d
 
	msh_size
;

45 
Elf64_W‹d
 
	msh_lök
;

46 
Elf64_W‹d
 
	msh_öfo
;

47 
Elf64_Xw‹d
 
	msh_addølign
;

48 
Elf64_Xw‹d
 
	msh_ítsize
;

51 ˛as†
	cSe˘i⁄HódîTabÀ
{

52 
	mpublic
:

53 
Se˘i⁄HódîTabÀ
() = ;

54 ~
Se˘i⁄HódîTabÀ
() = ;

56 
lﬂd
(
°d
::
°rög
 
fûe
, 
Elf64_Off
 
Se˘i⁄HódîTabÀOff£t
, 
Elf64_HÆf
 
Se˘i⁄HódîTabÀIãmSize
, Elf64_HÆ‡
Se˘i⁄HódîTabÀIãmNum
);

57 
dump
();

58 
	m°d
::
ve˘‹
<
Se˘i⁄Hódî
> 
gë
();

60 
	m°d
::
°rög
 
°r_sh_«me_ö_£˘i⁄_°rög_èbÀ
(
Elf64_W‹d
 
«meId
);

61 
Se˘i⁄Hódî
 
gëSe˘i⁄HódîByIndex
(
uöt32_t
 
ödex
);

62 
lﬂdSe˘i⁄SåögTabÀ
(
°d
::
°rög
 
fûe
, 
Elf64_HÆf
 
£˘i⁄SåögTabÀIndex
);

63 
dumpSe˘i⁄SåögTabÀ
();

65 
	m°d
::
°rög
 
°r_sh_«me_ö_°rög_èbÀ
(
Elf64_W‹d
 
«meId
);

66 
Se˘i⁄Hódî
 
gëSåögTabÀ
();

67 
lﬂdSåögTabÀ
(
°d
::
°rög
 
fûes
);

68 
dumpSåögTabÀ
();

69 
Se˘i⁄Hódî
 
gëSymbﬁTabÀ
();

70 
lﬂdSymbﬁTabÀ
(
°d
::
°rög
 
fûes
);

71 
dumpSymbﬁTabÀ
();

73 
	m°d
::
°rög
 
°r_sh_«me_ö_dy«mic_°rög_èbÀ
(
Elf64_W‹d
 
«meId
);

74 
Se˘i⁄Hódî
 
gëDy«mciSåögTabÀ
();

75 
lﬂdDy«micSåögTabÀ
(
°d
::
°rög
 
fûes
);

76 
dumpDy«micSåögTabÀ
();

77 
Se˘i⁄Hódî
 
gëDy«micSymbﬁTabÀ
();

78 
lﬂdDy«micSymbﬁTabÀ
(
°d
::
°rög
 
fûes
);

79 
dumpDy«micSymbﬁTabÀ
();

81 
	m¥iv©e
:

82 
°d
::
ve˘‹
<
Se˘i⁄Hódî
> 
m_£˘i⁄HódîTabÀ
;

84 
	m°d
::
m≠
<
uöt32_t
, std::
°rög
> 
m_£˘i⁄SåögTabÀ
;

86 
	m°d
::
m≠
<
uöt32_t
, std::
°rög
> 
m_°rögTabÀ
;

87 
	m°d
::
ve˘‹
<
Symbﬁ
> 
m_symbﬁs
;

89 
	m°d
::
m≠
<
uöt32_t
, std::
°rög
> 
m_dy«micSåögTabÀ
;

90 
	m°d
::
ve˘‹
<
Symbﬁ
> 
m_dy«micSymbﬁs
;

	@segment.hpp

1 #i‚de‡
__SEGMENT_H__


2 
	#__SEGMENT_H__


	)

4 
	~"comm⁄.hµ
"

6 ˛as†
	cSegmít
{

7 
	mpublic
:

8 
Segmít
() = ;

9 ~
Segmít
() = ;

11 
	m¥iv©e
:

15 ˛as†
	cSegmíts
{

16 
	mpublic
:

17 
Segmíts
() = ;

18 ~
Segmíts
() = ;

20 
	m¥iv©e
:

21 
°d
::
ve˘‹
<
Segmít
> 
m_£gmíts
;

	@stack.hpp

1 #i‚de‡
__STACK_H__


2 
	#__STACK_H__


	)

4 
	~<io°ªam
>

6 ˛as†
	cSèck
{

7 
	mpublic
:

8 
	$Sèck
(
uöt32_t
 
ba£
, uöt32_à
size
): 
	`m_ba£
(ba£), 
	$m_size
(
size
) {}

9 ~
	`Sèck
() = ;

11 
uöt32_t
 
m_ba£
;

12 
uöt32_t
 
m_size
;

13 
	}
};

	@symbol.hpp

1 #i‚de‡
__SYMBOL_H__


2 
	#__SYMBOL_H__


	)

4 
	~"comm⁄.hµ
"

7 
	sSymbﬁ


9 
Elf64_W‹d
 
	m°_«me
;

10 
	m°_öfo
;

11 
	m°_Ÿhî
;

12 
Elf64_HÆf
 
	m°_shndx
;

13 
Elf64_Addr
 
	m°_vÆue
;

14 
Elf64_Xw‹d
 
	m°_size
;

	@
1
.
0
44
2424
/home/xinhualu/repo/0_xhlu/0_pppppppp/0_project/0_elf_parser/address.cpp
/home/xinhualu/repo/0_xhlu/0_pppppppp/0_project/0_elf_parser/address.hpp
/home/xinhualu/repo/0_xhlu/0_pppppppp/0_project/0_elf_parser/common.hpp
/home/xinhualu/repo/0_xhlu/0_pppppppp/0_project/0_elf_parser/cpu.cpp
/home/xinhualu/repo/0_xhlu/0_pppppppp/0_project/0_elf_parser/cpu.hpp
/home/xinhualu/repo/0_xhlu/0_pppppppp/0_project/0_elf_parser/cpu_decode.cpp
/home/xinhualu/repo/0_xhlu/0_pppppppp/0_project/0_elf_parser/cpu_execute.cpp
/home/xinhualu/repo/0_xhlu/0_pppppppp/0_project/0_elf_parser/cpu_fetch.cpp
/home/xinhualu/repo/0_xhlu/0_pppppppp/0_project/0_elf_parser/demo/helloworld.c
/home/xinhualu/repo/0_xhlu/0_pppppppp/0_project/0_elf_parser/demo/lib.c
/home/xinhualu/repo/0_xhlu/0_pppppppp/0_project/0_elf_parser/demo/lib.h
/home/xinhualu/repo/0_xhlu/0_pppppppp/0_project/0_elf_parser/elf.h
/home/xinhualu/repo/0_xhlu/0_pppppppp/0_project/0_elf_parser/elf_header.cpp
/home/xinhualu/repo/0_xhlu/0_pppppppp/0_project/0_elf_parser/elf_header.hpp
/home/xinhualu/repo/0_xhlu/0_pppppppp/0_project/0_elf_parser/elfer.cpp
/home/xinhualu/repo/0_xhlu/0_pppppppp/0_project/0_elf_parser/elfer.hpp
/home/xinhualu/repo/0_xhlu/0_pppppppp/0_project/0_elf_parser/instruction.hpp
/home/xinhualu/repo/0_xhlu/0_pppppppp/0_project/0_elf_parser/memory.cpp
/home/xinhualu/repo/0_xhlu/0_pppppppp/0_project/0_elf_parser/memory.hpp
/home/xinhualu/repo/0_xhlu/0_pppppppp/0_project/0_elf_parser/program_header_table.cpp
/home/xinhualu/repo/0_xhlu/0_pppppppp/0_project/0_elf_parser/program_header_table.hpp
/home/xinhualu/repo/0_xhlu/0_pppppppp/0_project/0_elf_parser/section.cpp
/home/xinhualu/repo/0_xhlu/0_pppppppp/0_project/0_elf_parser/section.hpp
/home/xinhualu/repo/0_xhlu/0_pppppppp/0_project/0_elf_parser/section_header_table.cpp
/home/xinhualu/repo/0_xhlu/0_pppppppp/0_project/0_elf_parser/section_header_table.hpp
/home/xinhualu/repo/0_xhlu/0_pppppppp/0_project/0_elf_parser/segment.cpp
/home/xinhualu/repo/0_xhlu/0_pppppppp/0_project/0_elf_parser/segment.hpp
/home/xinhualu/repo/0_xhlu/0_pppppppp/0_project/0_elf_parser/stack.hpp
/home/xinhualu/repo/0_xhlu/0_pppppppp/0_project/0_elf_parser/symbol.cpp
/home/xinhualu/repo/0_xhlu/0_pppppppp/0_project/0_elf_parser/symbol.hpp
address.hpp
common.hpp
cpu.hpp
elf.h
elf_header.hpp
elfer.hpp
instruction.hpp
memory.hpp
program_header_table.hpp
section.hpp
section_header_table.hpp
segment.hpp
stack.hpp
symbol.hpp
